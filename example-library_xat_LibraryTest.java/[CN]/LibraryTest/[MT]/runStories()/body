{
  title("Stock library with books");
  nextStep();
  TestObject newBook=getTestClass(Book.class.getName()).newInstance();
  newBook.fieldEntry("Title","The Cat in the Hat");
  newBook.fieldEntry("Author","Dr Suess");
  newBook.fieldEntry("Code","9282821");
  nextStep();
  newBook=getTestClass(Book.class.getName()).newInstance();
  newBook.fieldEntry("Title","The Sneetches");
  newBook.fieldEntry("Author","Dr Suess");
  newBook.fieldEntry("Code","9282321");
  subtitle("Register a new member");
  nextStep("Create a new instance");
  TestObject newMember=getTestClass(Member.class.getName()).newInstance();
  nextStep("Enter data");
  newMember.fieldEntry("Name","Henry Muir");
  newMember.fieldEntry("Address","18 The Cresent, Popewell");
  newMember.fieldEntry("Phone","0101 8372821");
  newMember.assertFieldContains("Junior","FALSE");
  subtitle("Check out a book");
  nextStep("Find chosen book");
  TestObject book=getTestClass(Book.class.getName()).findInstance("The Cat in the Hat");
  note("The generated loan object details who is borrowing what and when.");
  subtitle("Manually check out a book");
  nextStep("Although dropping a book onto a member checks out a book, it can be " + "done manually by creating a loan object and associating the member and book.");
  TestObject loan=getTestClass(Loan.class.getName()).newInstance();
  nextStep("specify the book");
  book=getTestClass(Book.class.getName()).findInstance("Cat in the Hat");
  loan.associate("Book",book);
  nextStep("Specify the member");
  TestObject member=getTestClass("Members").findInstance("Henry Muir");
  loan.invokeAction("Lent To",member);
  note("Now the loan knows the book and the member:");
  loan.assertFieldContains("Book",book);
  loan.assertFieldContains("Lent To",member);
  note("And both the book and member know the loan.");
  book.assertFieldContains("On Loan",loan);
  member.assertFieldContains("Loans",loan);
  subtitle("Renew a book");
  loan.invokeAction("Renew");
  loan.assertFieldContains("Return By","Feb 19, 2004");
  subtitle("Return a book");
  book=(TestObject)loan.getField("Book");
  member=(TestObject)loan.getField("Lent To");
  book.assertFieldContains("On Loan","");
  member.assertFieldContains("Loans","");
}
