{
  org.apache.log4j.Logger.getRootLogger().setLevel(org.apache.log4j.Level.OFF);
  configuration=new IsisConfigurationDefault();
  servicesList=Collections.emptyList();
  oidMarshaller=new OidMarshaller();
  context.checking(new Expectations(){
{
      ignoring(mockSpecificationLoader);
      ignoring(mockPersistenceSessionFactory);
      one(mockUserProfileLoader).getProfile(with(any(AuthenticationSession.class)));
      will(returnValue(new UserProfile()));
      ignoring(mockTemplateImageLoader);
      ignoring(mockAuthenticationManager);
      ignoring(mockAuthorizationManager);
      ignoring(mockContainer);
    }
  }
);
  final ViewFactory subviewSpec=new ViewFactory(){
    @Override public View createView(    final Content content,    final Axes axes,    final int fieldNumber){
      return new DummyView();
    }
  }
;
  final IsisSessionFactoryDefault sessionFactory=new IsisSessionFactoryDefault(DeploymentType.EXPLORATION,configuration,mockSpecificationLoader,mockTemplateImageLoader,mockAuthenticationManager,mockAuthorizationManager,mockUserProfileLoader,mockPersistenceSessionFactory,mockContainer,servicesList,oidMarshaller);
  IsisContext.setConfiguration(sessionFactory.getConfiguration());
  IsisContextStatic.createRelaxedInstance(sessionFactory);
  IsisContextStatic.openSession(new ExplorationSession());
  builder=new ActionFieldBuilder(subviewSpec);
}
