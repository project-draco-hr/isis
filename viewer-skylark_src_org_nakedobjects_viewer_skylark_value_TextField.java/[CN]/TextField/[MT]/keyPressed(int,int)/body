{
  if (!canChangeValue()) {
    return;
  }
  if (keyCode == KeyEvent.VK_CONTROL || keyCode == KeyEvent.VK_SHIFT || keyCode == KeyEvent.VK_ALT) {
    return;
  }
  final boolean alt=(modifiers & InputEvent.ALT_MASK) > 0;
  final boolean shift=(modifiers & InputEvent.SHIFT_MASK) > 0;
  final boolean ctrl=(modifiers & InputEvent.CTRL_MASK) > 0;
switch (keyCode) {
case KeyEvent.VK_PAGE_UP:
    pageUp(ctrl);
  break;
case KeyEvent.VK_PAGE_DOWN:
pageDown(ctrl);
break;
case KeyEvent.VK_V:
if (ctrl) {
paste();
highlight(false);
}
break;
case KeyEvent.VK_C:
if (ctrl) {
copy();
}
break;
case KeyEvent.VK_DOWN:
down(shift);
break;
case KeyEvent.VK_UP:
up(shift);
break;
case KeyEvent.VK_HOME:
home(alt,shift);
break;
case KeyEvent.VK_END:
end(alt,shift);
break;
case KeyEvent.VK_LEFT:
left(alt,shift);
break;
case KeyEvent.VK_RIGHT:
right(alt,shift);
break;
case KeyEvent.VK_DELETE:
deleteForward();
break;
case KeyEvent.VK_BACK_SPACE:
delete();
break;
case KeyEvent.VK_TAB:
tab();
break;
case KeyEvent.VK_ENTER:
enter();
getParent().keyPressed(keyCode,modifiers);
break;
case KeyEvent.VK_ESCAPE:
escape();
break;
default :
break;
}
markDamaged();
LOG.debug("character at " + cursor.getCharacter() + " line "+ cursor.getLine());
LOG.debug(selection);
}
