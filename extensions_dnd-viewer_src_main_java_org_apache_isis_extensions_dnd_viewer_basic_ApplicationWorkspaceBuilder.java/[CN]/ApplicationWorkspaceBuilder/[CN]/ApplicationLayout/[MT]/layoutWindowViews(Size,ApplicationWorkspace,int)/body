{
  final Size size=view.getSize();
  size.contract(view.getPadding());
  final int maxHeight=size.getHeight();
  final int maxWidth=size.getWidth();
  final int xWindow=xOffset + PADDING;
  int yWindow=PADDING;
  int xMinimized=1;
  int yMinimized=maxHeight - 1;
  final View windows[]=view.getWindowViews();
  for (int i=0; i < windows.length; i++) {
    final View v=windows[i];
    final Size componentSize=v.getRequiredSize(new Size(size));
    v.setSize(componentSize);
    if (v instanceof MinimizedView) {
      final Size s=v.getRequiredSize(Size.createMax());
      if (xMinimized + s.getWidth() > maxWidth) {
        xMinimized=1;
        yMinimized-=s.getHeight() + 1;
      }
      v.setLocation(new Location(xMinimized,yMinimized - s.getHeight()));
      xMinimized+=s.getWidth() + 1;
    }
 else     if (v.getLocation().equals(UNPLACED)) {
      final int height=componentSize.getHeight() + 6;
      v.setLocation(new Location(xWindow,yWindow));
      yWindow+=height;
    }
    v.limitBoundsWithin(maximumSize);
  }
  for (int i=0; i < windows.length; i++) {
    final View window=windows[i];
    window.layout();
  }
}
