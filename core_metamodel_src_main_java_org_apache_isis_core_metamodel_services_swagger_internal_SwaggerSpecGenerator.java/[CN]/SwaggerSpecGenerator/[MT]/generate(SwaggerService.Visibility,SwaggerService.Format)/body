{
  final Swagger swagger=new Swagger();
  swagger.basePath("/restful");
  swagger.info(new Info().version("1.0.0").title("Restful Objects"));
  appendBoilerplate(swagger);
  appendLinkDefinitions(swagger);
  final Collection<ObjectSpecification> allSpecs=specificationLoader.allSpecifications();
  for (  ObjectSpecification serviceSpec : allSpecs) {
    final DomainServiceFacet domainServiceFacet=serviceSpec.getFacet(DomainServiceFacet.class);
    if (domainServiceFacet == null) {
      continue;
    }
    if (!isVisible(visibility,domainServiceFacet)) {
      continue;
    }
    List<ActionType> actionTypes=actionTypesFor(visibility);
    List<ObjectAction> serviceActions=serviceSpec.getObjectActions(actionTypes,Contributed.EXCLUDED,Filters.<ObjectAction>any());
    if (serviceActions.isEmpty()) {
      continue;
    }
    final String serviceId=serviceIdFor(serviceSpec);
    final ObjectProperty serviceMembers=appendServicePath(swagger,serviceId);
    for (    final ObjectAction serviceAction : serviceActions) {
      appendActionTo(serviceMembers,serviceAction);
      appendInvokePath(swagger,serviceAction);
    }
  }
switch (format) {
case JSON:
    return Json.pretty(swagger);
case YAML:
  try {
    return Yaml.pretty().writeValueAsString(swagger);
  }
 catch (  JsonProcessingException e) {
    throw new RuntimeException(e);
  }
default :
throw new IllegalArgumentException("Unrecognized format: " + format);
}
}
