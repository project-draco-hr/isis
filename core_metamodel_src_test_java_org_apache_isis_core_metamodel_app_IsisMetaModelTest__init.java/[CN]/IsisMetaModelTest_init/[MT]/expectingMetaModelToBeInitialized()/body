{
  final Sequence initSequence=context.sequence("init");
  context.checking(new Expectations(){
{
      allowing(mockRuntimeContext).injectInto(with(any(Object.class)));
      will(IsisActions.injectInto());
      oneOf(mockRuntimeContext).setContainer(with(any(DomainObjectContainer.class)));
      inSequence(initSequence);
      oneOf(mockProgrammingModelFacets).init();
      inSequence(initSequence);
      oneOf(mockProgrammingModelFacets).getList();
      inSequence(initSequence);
      will(returnValue(Lists.newArrayList()));
      oneOf(mockRuntimeContext).init();
      inSequence(initSequence);
    }
  }
);
}
