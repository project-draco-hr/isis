{
  UserActionSet sortOptions=new UserActionSet("Sort",options);
  options.add(sortOptions);
  sortOptions.add(new AbstractUserAction("Clear"){
    public Consent disabled(    View component){
      return AbstractConsent.allow(order != null);
    }
    public void execute(    Workspace workspace,    View view,    Location at){
      order=null;
      view.invalidateContent();
    }
  }
);
  if (reverse) {
    sortOptions.add(new AbstractUserAction("Normal sort order"){
      public Consent disabled(      View component){
        return AbstractConsent.allow(order != null);
      }
      public void execute(      Workspace workspace,      View view,      Location at){
        reverse=false;
        view.invalidateContent();
      }
    }
);
  }
 else {
    sortOptions.add(new AbstractUserAction("Reverse sort order"){
      public Consent disabled(      View component){
        return AbstractConsent.allow(order != null);
      }
      public void execute(      Workspace workspace,      View view,      Location at){
        reverse=true;
        view.invalidateContent();
      }
    }
);
  }
  sortOptions.add(new AbstractUserAction("Sort by title"){
    public Consent disabled(    View component){
      return AbstractConsent.allow(order != TITLE_COMPARATOR);
    }
    public void execute(    Workspace workspace,    View view,    Location at){
      order=TITLE_COMPARATOR;
      view.invalidateContent();
    }
  }
);
  sortOptions.add(new AbstractUserAction("Sort by type"){
    public Consent disabled(    View component){
      return AbstractConsent.allow(order != TYPE_COMPARATOR);
    }
    public void execute(    Workspace workspace,    View view,    Location at){
      order=TYPE_COMPARATOR;
      view.invalidateContent();
    }
  }
);
  NakedCollection c=getCollection();
  if (c instanceof TypedNakedCollection) {
    NakedObjectSpecification spec=((TypedNakedCollection)c).getElementSpecification();
    NakedObjectField[] fields=spec.getFields();
    for (int i=0; i < fields.length; i++) {
      final NakedObjectField field=fields[i];
      sortOptions.add(new AbstractUserAction("Sort by " + field.getName()){
        public void execute(        Workspace workspace,        View view,        Location at){
          order=new FieldComparator(field);
          view.invalidateContent();
        }
      }
);
    }
  }
}
