{
  this.objectFactory=objectFactory;
  LOG.info("Introspecting " + name);
  Class cls;
  try {
    cls=Class.forName(name);
  }
 catch (  ClassNotFoundException e) {
    throw new ReflectionException("Could not load class " + name,e);
  }
  if (!Modifier.isPublic(cls.getModifiers())) {
    throw new NakedObjectSpecificationException("A NakedObject class must be marked as public.  Error in " + cls);
  }
  this.cls=cls;
  methods=cls.getMethods();
  isDirtyMethod=findMethod(false,"isDirty",boolean.class,new Class[0]);
  clearDirtyMethod=findMethod(false,"clearDirty",void.class,new Class[0]);
  markDirtyMethod=findMethod(false,"markDirty",void.class,new Class[0]);
}
