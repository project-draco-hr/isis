{
  Vector v=findPrefixedMethods(OBJECT,GET_PREFIX,Vector.class,0);
  Enumeration e=v.elements();
  while (e.hasMoreElements()) {
    Method getMethod=(Method)e.nextElement();
    LOG.info("  identified 1-many association method " + getMethod);
    String name=javaBaseName(getMethod.getName());
    Method aboutMethod=findMethod(OBJECT,ABOUT_PREFIX + name,null,new Class[]{FieldAbout.class,null,boolean.class});
    Class aboutType=(aboutMethod == null) ? null : aboutMethod.getParameterTypes()[1];
    if (aboutMethod == null) {
      aboutMethod=defaultAboutFieldMethod;
    }
    Class[] params=new Class[]{null};
    Method addMethod=findMethod(OBJECT,"addTo" + name,void.class,params);
    if (addMethod == null) {
      addMethod=findMethod(OBJECT,"add" + name,void.class,params);
    }
    if (addMethod == null) {
      addMethod=findMethod(OBJECT,"associate" + name,void.class,params);
    }
    Method removeMethod=findMethod(OBJECT,"removeFrom" + name,void.class,params);
    if (removeMethod == null) {
      removeMethod=findMethod(OBJECT,"remove" + name,void.class,params);
    }
    if (removeMethod == null) {
      removeMethod=findMethod(OBJECT,"dissociate" + name,void.class,params);
    }
    if (addMethod == null || removeMethod == null) {
      LOG.error("there must be both add and remove methods for " + name + " in "+ className());
      return;
    }
    Class removeType=(removeMethod == null) ? null : removeMethod.getParameterTypes()[0];
    Class addType=(addMethod == null) ? null : addMethod.getParameterTypes()[0];
    Class elementType=(aboutType == null) ? null : aboutType;
    elementType=(addType == null) ? elementType : addType;
    elementType=(removeType == null) ? elementType : removeType;
    if (elementType == null) {
      LOG.warn("cannot determine a type for the collection " + name + "; not added as a field");
      return;
    }
    if (((aboutType != null) && (aboutType != elementType)) || ((addType != null) && (addType != elementType)) || ((removeType != null) && (removeType != elementType))) {
      LOG.error("the add/remove/associate/dissociate/about methods in " + className() + " must "+ "all deal with same type of object.  There are at least two different "+ "types");
    }
    associations.addElement(new JavaOneToManyAssociation(name,elementType,getMethod,addMethod,removeMethod,aboutMethod));
  }
}
