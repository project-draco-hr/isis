{
  if (cls.getName().startsWith("java.") || BusinessValueHolder.class.isAssignableFrom(cls)) {
    return new FieldPeer[0];
  }
  removeMethod(false,"getClass",Class.class,null);
  LOG.debug("  looking  for fields for " + cls);
  Vector elements=new Vector();
  defaultAboutFieldMethod=findMethod(OBJECT,ABOUT_FIELD_DEFAULT,null,new Class[]{FieldAbout.class});
  valueFields(elements,BusinessValueHolder.class);
  valueFields(elements,BusinessValue.class);
  valueFields(elements,String.class);
  valueFields(elements,Date.class);
  valueFields(elements,boolean.class);
  valueFields(elements,char.class);
  valueFields(elements,byte.class);
  valueFields(elements,short.class);
  valueFields(elements,int.class);
  valueFields(elements,long.class);
  valueFields(elements,float.class);
  valueFields(elements,double.class);
  derivedFields(elements);
  oneToManyAssociationFieldsVector(elements);
  oneToManyAssociationFieldsInternalCollection(elements);
  oneToManyAssociationFieldsArray(elements);
  oneToOneAssociationFields(elements);
  FieldPeer[] results=new FieldPeer[elements.size()];
  elements.copyInto(results);
  return results;
}
