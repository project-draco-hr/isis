{
  final MandatoryFacetOnParameterInvertedByOptionalAnnotationFactory facetFactory=new MandatoryFacetOnParameterInvertedByOptionalAnnotationFactory();
class Customer {
    @SuppressWarnings("unused") public void someAction(    @Optional final String foo){
    }
  }
  final Method method=findMethod(Customer.class,"someAction",new Class[]{String.class});
  facetFactory.processParams(new ProcessParameterContext(method,0,facetedMethodParameter));
  final Facet facet=facetedMethodParameter.getFacet(MandatoryFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof MandatoryFacetOnParameterInvertedByOptionalAnnotation);
}
