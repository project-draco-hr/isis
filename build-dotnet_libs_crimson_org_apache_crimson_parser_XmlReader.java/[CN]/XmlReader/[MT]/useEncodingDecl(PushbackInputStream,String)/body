{
  byte buffer[]=new byte[MAXPUSHBACK];
  int len;
  Reader r;
  int c;
  len=pb.read(buffer,0,buffer.length);
  pb.unread(buffer,0,len);
  r=new InputStreamReader(new ByteArrayInputStream(buffer,4,len),encoding);
  if ((c=r.read()) != 'l') {
    setEncoding(pb,"UTF-8");
    return;
  }
  StringBuffer buf=new StringBuffer();
  StringBuffer keyBuf=null;
  String key=null;
  boolean sawEq=false;
  char quoteChar=0;
  boolean sawQuestion=false;
  XmlDecl:   for (int i=0; i < MAXPUSHBACK - 5; ++i) {
    if ((c=r.read()) == -1)     break;
    if (c == ' ' || c == '\t' || c == '\n' || c == '\r')     continue;
    if (i == 0)     break;
    if (c == '?')     sawQuestion=true;
 else     if (sawQuestion) {
      if (c == '>')       break;
      sawQuestion=false;
    }
    if (key == null || !sawEq) {
      if (keyBuf == null) {
        if (Character.isWhitespace((char)c))         continue;
        keyBuf=buf;
        buf.setLength(0);
        buf.append((char)c);
        sawEq=false;
      }
 else       if (Character.isWhitespace((char)c)) {
        key=keyBuf.toString();
      }
 else       if (c == '=') {
        if (key == null)         key=keyBuf.toString();
        sawEq=true;
        keyBuf=null;
        quoteChar=0;
      }
 else       keyBuf.append((char)c);
      continue;
    }
    if (Character.isWhitespace((char)c))     continue;
    if (c == '"' || c == '\'') {
      if (quoteChar == 0) {
        quoteChar=(char)c;
        buf.setLength(0);
        continue;
      }
 else       if (c == quoteChar) {
        if ("encoding".equals(key)) {
          assignedEncoding=buf.toString();
          for (i=0; i < assignedEncoding.length(); i++) {
            c=assignedEncoding.charAt(i);
            if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'))             continue;
            if (i == 0)             break XmlDecl;
            if (i > 0 && (c == '-' || (c >= '0' && c <= '9') || c == '.' || c == '_'))             continue;
            break XmlDecl;
          }
          setEncoding(pb,assignedEncoding);
          return;
        }
 else {
          key=null;
          continue;
        }
      }
    }
    buf.append((char)c);
  }
  setEncoding(pb,"UTF-8");
}
