{
  if (LOG.isDebugEnabled()) {
    LOG.debug("introspecting " + getClassName() + ": properties and collections");
  }
  final Set<Method> associationCandidateMethods=getFacetProcessor().findAssociationCandidateAccessors(methods,new HashSet<Method>());
  List<Class<?>> typesToLoad=Lists.newArrayList();
  for (  final Method method : associationCandidateMethods) {
    getSpecificationTraverser().traverseTypes(method,typesToLoad);
  }
  getSpecificationLoader().loadSpecifications(typesToLoad,introspectedClass);
  final List<FacetedMethod> associationFacetedMethods=Lists.newArrayList();
  findAndRemoveCollectionAccessorsAndCreateCorrespondingFacetedMethods(associationFacetedMethods);
  findAndRemovePropertyAccessorsAndCreateCorrespondingFacetedMethods(associationFacetedMethods);
  return Collections.unmodifiableList(associationFacetedMethods);
}
