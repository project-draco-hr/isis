{
  int numberParameters=action.parameters().length;
  Naked[] parameters;
  parameters=new Naked[numberParameters];
  ActionParameterSet parameterHints=target.getParameters(action);
  Object[] defaultValues;
  String[] labels;
  boolean[] required;
  if (parameterHints != null) {
    labels=parameterHints.getParameterLabels();
    defaultValues=parameterHints.getDefaultParameterValues();
    required=parameterHints.getRequiredParameters();
  }
 else {
    labels=new String[numberParameters];
    defaultValues=new Naked[numberParameters];
    required=new boolean[numberParameters];
  }
  Naked[] parameterValues;
  Naked[] values;
  NakedObjectSpecification[] parameterTypes;
  parameterTypes=action.parameters();
  values=new Naked[parameterTypes.length];
  for (int i=0; i < parameterTypes.length; i++) {
    if (parameterTypes[i].isValue()) {
      values[i]=NakedObjects.getObjectLoader().createValueInstance(parameterTypes[i]);
    }
 else {
      values[i]=null;
    }
  }
  parameterValues=new Naked[parameterTypes.length];
  for (int i=0; i < parameterValues.length; i++) {
    parameterValues[i]=values[i];
  }
  for (int i=0; i < numberParameters; i++) {
    NakedObjectSpecification type=parameterTypes[i];
    labels[i]=labels[i] == null ? type.getShortName() : labels[i];
    if (defaultValues[i] == null) {
      parameters[i]=parameterValues[i];
    }
 else {
      parameters[i]=NakedObjects.getObjectLoader().createAdapterForValue(defaultValues[i]);
      if (parameters[i] == null) {
        parameters[i]=NakedObjects.getObjectLoader().getAdapterForElseCreateAdapterForTransient(defaultValues[i]);
      }
    }
  }
  return new ActionHelper(target,action,labels,parameters,parameterTypes,required);
}
