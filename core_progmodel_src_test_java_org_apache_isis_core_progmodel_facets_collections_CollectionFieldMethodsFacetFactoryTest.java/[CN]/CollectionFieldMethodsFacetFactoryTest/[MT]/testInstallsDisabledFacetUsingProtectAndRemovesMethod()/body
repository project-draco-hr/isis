{
  DisabledFacetViaProtectMethodFacetFactory facetFactory=new DisabledFacetViaProtectMethodFacetFactory();
  facetFactory.setSpecificationLookup(reflector);
  final Method collectionAccessorMethod=findMethod(CustomerStatic.class,"getOrders");
  final Method protectMethod=findMethod(CustomerStatic.class,"protectOrders");
  facetFactory.process(new ProcessMethodContext(CustomerStatic.class,collectionAccessorMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(DisabledFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof DisabledFacetAlways);
  final DisabledFacetAlways disabledFacetAlways=(DisabledFacetAlways)facet;
  assertEquals(When.ALWAYS,disabledFacetAlways.value());
  assertTrue(methodRemover.getRemoveMethodMethodCalls().contains(protectMethod));
}
