{
  final ObjectSpecification[] childSpecs=parentSpec.subclasses();
  for (int i=0; i < childSpecs.length; i++) {
    final ObjectSpecification childSpec=childSpecs[i];
    if (childSpec.isEncodeable() || childSpec.persistability() == Persistability.TRANSIENT || childSpec.isService()) {
      continue;
    }
    final String childClassname=childSpec.getFullName();
    PersistentSpecification childPersistentClass=null;
    if (childSpec.getAssociations().length > 0) {
      try {
        final Class<?> cls=Class.forName(childClassname);
        if (cls.isArray()) {
          continue;
        }
      }
 catch (      final ClassNotFoundException e) {
        throw new IsisException(e);
      }
      childPersistentClass=new PersistentSpecification(childSpec,parentPersistentClass);
      classes.put(childSpec.getFullName(),childPersistentClass);
    }
    buildClassHierachy(childSpec,childPersistentClass == null ? parentPersistentClass : childPersistentClass);
  }
}
