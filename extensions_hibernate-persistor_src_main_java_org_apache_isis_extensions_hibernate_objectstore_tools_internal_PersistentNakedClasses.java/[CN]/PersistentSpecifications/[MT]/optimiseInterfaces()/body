{
  final PersistentSpecification[] persistentClasses=classes.values().toArray(new PersistentSpecification[classes.values().size()]);
  for (int i=0; i < persistentClasses.length; i++) {
    final PersistentSpecification persistentClass=persistentClasses[i];
    if (classes.containsValue(persistentClass.getParent())) {
      continue;
    }
    final ObjectSpecification[] implementedInterfaces=persistentClass.getSpecification().interfaces();
    if (implementedInterfaces.length != 1) {
      continue;
    }
    final ObjectSpecification classToCheck=persistentClass.getSpecification();
    final ObjectSpecification interfaceToCheck=implementedInterfaces[0];
    if (!subclassesImplementOnlyThisInterface(classToCheck,interfaceToCheck)) {
      continue;
    }
    if (interfaceImplementedByOtherNonRelatedClass(classToCheck,interfaceToCheck)) {
      continue;
    }
    final PersistentSpecification persistentInterface=interfaces.get(interfaceToCheck.getFullName());
    persistentInterface.setParent(rootClass);
    interfaces.remove(persistentInterface.getName());
    classes.put(persistentInterface.getName(),persistentInterface);
    persistentClass.setParent(persistentInterface);
  }
}
