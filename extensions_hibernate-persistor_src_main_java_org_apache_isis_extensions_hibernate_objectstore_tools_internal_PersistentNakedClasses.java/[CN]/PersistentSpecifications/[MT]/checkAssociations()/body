{
  final PersistentSpecification[] persistentClasses=classes.values().toArray(new PersistentSpecification[0]);
  for (int i=0; i < persistentClasses.length; i++) {
    final ObjectAssociation[] fields=persistentClasses[i].getSpecification().getAssociations();
    for (int j=0; j < fields.length; j++) {
      final ObjectAssociation field=fields[j];
      if (field.isNotPersisted() || field.getSpecification().isService() || field.getSpecification().getFullName().startsWith("java.")) {
        continue;
      }
      if (field.getSpecification().isValueOrIsAggregated()) {
        continue;
      }
      final String associatedClassName=field.getSpecification().getFullName();
      if (!classes.containsKey(associatedClassName) && !interfaces.containsKey(associatedClassName)) {
        throw new IsisException("Missing class/interface: " + field.getSpecification().getFullName());
      }
      final PersistentSpecification associatedClass=classes.get(associatedClassName);
      if (associatedClass != null) {
        associatedClass.addReference();
      }
    }
  }
}
