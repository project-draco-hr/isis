{
  final DummyObjectData instanceData=new DummyObjectData(new TestProxyOid(12,true),Movie.class.getName(),true,new TestProxyVersion(3));
  final TestProxyAdapter dummyObjectAdapter=new TestProxyAdapter();
  dummyObjectAdapter.setupObject(new Movie());
  dummyObjectAdapter.setupSpecification(new MovieSpecification());
  final PersistenceQueryData c=new TestCriteria();
  final ObjectSpecification noSpec=getSpecificationLoader().loadSpecification(Movie.class);
  final PersistenceQueryFindAllInstances criteria=new PersistenceQueryFindAllInstances(noSpec);
  final FindInstancesRequest request=new FindInstancesRequest(session,c);
  mockery.checking(new Expectations(){
{
      one(mockEncoder).decode(instanceData);
      will(returnValue(dummyObjectAdapter));
      one(mockDistribution).findInstances(request);
      will(returnValue(new ObjectData[]{instanceData}));
      one(mockEncoder).encodePersistenceQuery(criteria);
      will(returnValue(c));
    }
  }
);
  final ObjectAdapter instances=persistenceSessionProxy.findInstances(criteria);
  final ObjectList objects=(ObjectList)instances.getObject();
  assertEquals(1,objects.size());
  assertEquals(dummyObjectAdapter,objects.elements().nextElement());
}
