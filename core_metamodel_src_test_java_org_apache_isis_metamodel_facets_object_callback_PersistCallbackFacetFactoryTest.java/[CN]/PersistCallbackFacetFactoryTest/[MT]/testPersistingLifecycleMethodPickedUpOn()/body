{
@edu.umd.cs.findbugs.annotations.SuppressWarnings("UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS") class Customer {
    @SuppressWarnings("unused") public void persisting(){
    }
  }
  final Method method=findMethod(Customer.class,"persisting");
  facetFactory.process(Customer.class,methodRemover,facetHolder);
  final Facet facet=facetHolder.getFacet(PersistingCallbackFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof PersistingCallbackFacetViaMethod);
  final PersistingCallbackFacetViaMethod persistingCallbackFacetViaMethod=(PersistingCallbackFacetViaMethod)facet;
  assertEquals(method,persistingCallbackFacetViaMethod.getMethods().get(0));
  assertTrue(methodRemover.getRemoveMethodMethodCalls().contains(method));
}
