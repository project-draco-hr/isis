{
  final Method method=processMethodContext.getMethod();
  final FacetHolder holder=processMethodContext.getFacetHolder();
  final PropertyOrCollectionAccessorFacet getterFacet=holder.getFacet(PropertyOrCollectionAccessorFacet.class);
  if (getterFacet == null) {
    return;
  }
  final InteractionWithCollection interactionWithCollection=Annotations.getAnnotation(method,InteractionWithCollection.class);
  final PostsCollectionAddedToEvent postsCollectionAddedToEvent=Annotations.getAnnotation(method,PostsCollectionAddedToEvent.class);
  final PostsCollectionRemovedFromEvent postsCollectionRemovedFromEvent=Annotations.getAnnotation(method,PostsCollectionRemovedFromEvent.class);
  final CollectionAddToFacet collectionAddToFacet=holder.getFacet(CollectionAddToFacet.class);
  if (collectionAddToFacet != null) {
    if (interactionWithCollection != null) {
      final Class<? extends CollectionInteractionEvent<?,?>> eventType=interactionWithCollection.value();
      FacetUtil.addFacet(new InteractionWithCollectionFacetAddForAnnotation(eventType,getterFacet,collectionAddToFacet,servicesInjector,holder));
    }
 else     if (postsCollectionAddedToEvent != null) {
      final Class<? extends CollectionAddedToEvent<?,?>> eventType=postsCollectionAddedToEvent.value();
      FacetUtil.addFacet(new InteractionWithCollectionFacetAddPostsCollectionAddedToEventAnnotation(eventType,getterFacet,collectionAddToFacet,servicesInjector,holder));
    }
 else {
      final Class<? extends CollectionInteractionEvent<?,?>> eventType=CollectionInteractionEvent.Default.class;
      FacetUtil.addFacet(new InteractionWithCollectionFacetAddDefault(eventType,getterFacet,collectionAddToFacet,servicesInjector,holder));
    }
  }
  final CollectionRemoveFromFacet collectionRemoveFromFacet=holder.getFacet(CollectionRemoveFromFacet.class);
  if (collectionRemoveFromFacet != null) {
    if (interactionWithCollection != null) {
      final Class<? extends CollectionInteractionEvent<?,?>> eventType=interactionWithCollection.value();
      FacetUtil.addFacet(new InteractionWithCollectionFacetRemoveForAnnotation(eventType,getterFacet,collectionRemoveFromFacet,servicesInjector,holder));
    }
 else     if (postsCollectionRemovedFromEvent != null) {
      final Class<? extends CollectionRemovedFromEvent<?,?>> eventType=postsCollectionRemovedFromEvent.value();
      FacetUtil.addFacet(new InteractionWithCollectionFacetRemovePostsCollectionRemovedFromEventAnnotation(eventType,getterFacet,collectionRemoveFromFacet,servicesInjector,holder));
    }
 else {
      final Class<? extends CollectionInteractionEvent<?,?>> eventType=CollectionInteractionEvent.Default.class;
      FacetUtil.addFacet(new InteractionWithCollectionFacetRemoveDefault(eventType,getterFacet,collectionRemoveFromFacet,servicesInjector,holder));
    }
  }
}
