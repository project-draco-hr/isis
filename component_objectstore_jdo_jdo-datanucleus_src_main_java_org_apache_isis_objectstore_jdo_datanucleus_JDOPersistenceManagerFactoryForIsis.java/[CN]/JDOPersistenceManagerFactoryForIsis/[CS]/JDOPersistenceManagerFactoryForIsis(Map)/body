{
  Map startupProps=null;
  if (props != null) {
    for (    String startupPropName : NucleusContext.STARTUP_PROPERTIES) {
      if (props.containsKey(startupPropName)) {
        if (startupProps == null) {
          startupProps=new HashMap();
        }
        startupProps.put(startupPropName,props.get(startupPropName));
      }
    }
  }
  nucleusContext=createNucleusContext(startupProps);
  Map pmfProps=new HashMap();
  PersistenceUnitMetaData pumd=null;
  if (props != null) {
    String persistenceUnitName=(String)props.get(PropertyNames.PROPERTY_PERSISTENCE_UNIT_NAME);
    if (persistenceUnitName == null) {
      persistenceUnitName=(String)props.get(Constants.PROPERTY_PERSISTENCE_UNIT_NAME);
    }
    if (persistenceUnitName != null) {
      getConfiguration().setProperty(PropertyNames.PROPERTY_PERSISTENCE_UNIT_NAME,persistenceUnitName);
      try {
        pumd=nucleusContext.getMetaDataManager().getMetaDataForPersistenceUnit(persistenceUnitName);
        if (pumd != null) {
          if (pumd.getProperties() != null) {
            pmfProps.putAll(pumd.getProperties());
          }
        }
 else {
          throw new JDOUserException(LOCALISER.msg("012004",persistenceUnitName));
        }
      }
 catch (      NucleusException ne) {
        throw new JDOUserException(LOCALISER.msg("012005",persistenceUnitName),ne);
      }
    }
  }
  if (props != null) {
    pmfProps.putAll(props);
    if (!pmfProps.containsKey(PropertyNames.PROPERTY_TRANSACTION_TYPE) && !pmfProps.containsKey("javax.jdo.option.TransactionType")) {
      pmfProps.put(PropertyNames.PROPERTY_TRANSACTION_TYPE,TransactionType.RESOURCE_LOCAL.toString());
    }
 else {
      String transactionType=pmfProps.get(PropertyNames.PROPERTY_TRANSACTION_TYPE) != null ? (String)pmfProps.get(PropertyNames.PROPERTY_TRANSACTION_TYPE) : (String)pmfProps.get("javax.jdo.option.TransactionType");
      if (TransactionType.JTA.toString().equalsIgnoreCase(transactionType)) {
        pmfProps.put(ConnectionFactory.DATANUCLEUS_CONNECTION_RESOURCE_TYPE,ConnectionResourceType.JTA.toString());
        pmfProps.put(ConnectionFactory.DATANUCLEUS_CONNECTION2_RESOURCE_TYPE,ConnectionResourceType.JTA.toString());
      }
    }
  }
 else {
    pmfProps.put(PropertyNames.PROPERTY_TRANSACTION_TYPE,TransactionType.RESOURCE_LOCAL.toString());
  }
  try {
    String propsFileProp=PropertyNames.PROPERTY_PROPERTIES_FILE;
    if (pmfProps.containsKey(propsFileProp)) {
      getConfiguration().setPropertiesUsingFile((String)pmfProps.get(propsFileProp));
      pmfProps.remove(propsFileProp);
    }
    getConfiguration().setPersistenceProperties(pmfProps);
  }
 catch (  IllegalArgumentException iae) {
    throw new JDOFatalUserException("Exception thrown setting persistence properties",iae);
  }
catch (  NucleusException jpe) {
    throw NucleusJDOHelper.getJDOExceptionForNucleusException(jpe);
  }
  initialiseMetaData(pumd);
  processLifecycleListenersFromProperties(props);
}
