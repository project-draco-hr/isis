{
  Object invoke=AdapterInvokeUtils.invoke(method,owningAdapter);
  if (!(invoke instanceof Object[])) {
    throw new ModelException("Expected an array of collections (Object[]) containing choices for all parameters, but got " + invoke + " instead. Perhaps the parameter number is missing!");
  }
  final Object[] options=(Object[])invoke;
  final Object[][] results=new Object[options.length][];
  for (int i=0; i < results.length; i++) {
    if (options[i] == null) {
      results[i]=null;
    }
 else     if (options[i].getClass().isArray()) {
      results[i]=ArrayUtils.getObjectAsObjectArray(options[i]);
    }
 else {
      final ObjectSpecification specification=getSpecificationLookup().loadSpecification(choicesType);
      results[i]=ChoicesUtils.getCollectionAsObjectArray(options[i],specification,getAdapterMap());
    }
  }
  return results;
}
