{
  final DescribedAsFacetOnMemberFactory facetFactory=new DescribedAsFacetOnMemberFactory();
class Customer {
    @SuppressWarnings("unused") @DescribedAs("some description") public int getNumberOfOrders(){
      return 0;
    }
  }
  final Method actionMethod=findMethod(Customer.class,"getNumberOfOrders");
  facetFactory.process(new ProcessMethodContext(Customer.class,null,null,actionMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(DescribedAsFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof DescribedAsFacetAbstract);
  final DescribedAsFacetAbstract describedAsFacetAbstract=(DescribedAsFacetAbstract)facet;
  assertEquals("some description",describedAsFacetAbstract.value());
  assertNoMethodsRemoved();
}
