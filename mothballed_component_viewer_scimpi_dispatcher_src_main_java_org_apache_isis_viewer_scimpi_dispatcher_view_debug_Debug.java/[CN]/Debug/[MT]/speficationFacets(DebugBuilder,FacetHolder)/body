{
  final List<Facet> facets=facetHolder.getFacets(new Filter<Facet>(){
    @Override public boolean accept(    final Facet facet){
      return true;
    }
  }
);
  final StringBuffer buffer=new StringBuffer();
  if (facets == null || facets.size() == 0) {
    buffer.append("none");
  }
 else {
    Collections.sort(facets,new Comparator<Facet>(){
      @Override public int compare(      final Facet o1,      final Facet o2){
        final String facetType1=o1.facetType().getName();
        final String facetType2=o2.facetType().getName();
        return facetType1.substring(facetType1.lastIndexOf('.') + 1).compareTo(facetType2.substring(facetType2.lastIndexOf('.') + 1));
      }
    }
);
    for (    final Facet facet : facets) {
      final String facetType=facet.facetType().getName();
      buffer.append("<span class=\"facet-type\">" + facetType.substring(facetType.lastIndexOf('.') + 1) + "</span>:  "+ facet+ "<br>");
    }
  }
  view.appendln("Facets",buffer.toString());
}
