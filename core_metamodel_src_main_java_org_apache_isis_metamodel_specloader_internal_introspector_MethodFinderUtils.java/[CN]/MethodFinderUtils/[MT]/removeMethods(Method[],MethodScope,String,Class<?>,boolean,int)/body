{
  final List<Method> validMethods=new ArrayList<Method>();
  for (int i=0; i < methods.length; i++) {
    if (methods[i] == null) {
      continue;
    }
    final Method method=methods[i];
    if (!inScope(forClass,method)) {
      continue;
    }
    final boolean goodPrefix=method.getName().startsWith(prefix);
    final boolean goodCount=method.getParameterTypes().length == paramCount;
    final Class<?> type=method.getReturnType();
    final boolean goodReturn=returnTypeCompatible(returnType,canBeVoid,type);
    if (goodPrefix && goodCount && goodReturn) {
      validMethods.add(method);
      methods[i]=null;
    }
  }
  return validMethods;
}
