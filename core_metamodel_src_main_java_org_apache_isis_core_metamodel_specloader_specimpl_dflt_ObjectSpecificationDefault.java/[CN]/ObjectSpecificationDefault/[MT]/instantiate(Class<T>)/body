{
  if (Modifier.isAbstract(cls.getModifiers())) {
    throw new ObjectInstantiationException("Cannot create an instance of an abstract class: " + cls);
  }
  final T newInstance;
  if (Modifier.isAbstract(cls.getModifiers())) {
    throw new ObjectInstantiationException("Cannot create an instance of an abstract class: " + cls);
  }
  try {
    newInstance=cls.newInstance();
  }
 catch (  final IllegalAccessException|InstantiationException e) {
    throw new ObjectInstantiationException(e);
  }
  getDependencyInjector().injectServicesInto(newInstance);
  return newInstance;
}
