{
  if (LOG.isDebugEnabled()) {
    LOG.debug("endTransaction: level " + (transactionLevel) + "->"+ (transactionLevel - 1));
  }
  transactionLevel--;
  if (transactionLevel == 0) {
    List<IsisException> exceptions=this.getTransaction().getExceptionsIfAny();
    if (exceptions.isEmpty()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("endTransaction: committing");
      }
      objectPersistor.objectChangedAllDirty();
      exceptions=this.getTransaction().getExceptionsIfAny();
    }
    if (exceptions.isEmpty()) {
      getTransaction().commit();
      exceptions=this.getTransaction().getExceptionsIfAny();
    }
    if (exceptions.isEmpty()) {
      transactionalResource.endTransaction();
      exceptions=this.getTransaction().getExceptionsIfAny();
    }
    if (!exceptions.isEmpty()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("endTransaction: aborting instead, " + exceptions.size() + " exception(s) have been raised");
      }
      abortTransaction();
      exceptions=this.getTransaction().getExceptionsIfAny();
      throw exceptionToThrowFrom(exceptions);
    }
  }
 else   if (transactionLevel < 0) {
    LOG.error("endTransaction: transactionLevel=" + transactionLevel);
    transactionLevel=0;
    throw new IllegalStateException(" no transaction running to end (transactionLevel < 0)");
  }
}
