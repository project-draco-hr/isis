{
  final Method actionMethod=processMethodContext.getMethod();
  try {
    final PostsActionInvokedEvent annotation=Annotations.getAnnotation(actionMethod,PostsActionInvokedEvent.class);
    if (annotation == null) {
      return;
    }
    final Class<?> returnType=actionMethod.getReturnType();
    final ObjectSpecification returnSpec=getSpecificationLoader().loadSpecification(returnType);
    if (returnSpec == null) {
      return;
    }
    final Class<?> cls=processMethodContext.getCls();
    final ObjectSpecification typeSpec=getSpecificationLoader().loadSpecification(cls);
    final FacetHolder holder=processMethodContext.getFacetHolder();
    final Class<? extends ActionInvokedEvent<?>> changedEventType=annotation.value();
    FacetUtil.addFacet(new PostsActionInvokedEventFacetAnnotation(actionMethod,typeSpec,returnSpec,holder,getRuntimeContext(),getAdapterManager(),getServicesInjector(),changedEventType));
  }
  finally {
    processMethodContext.removeMethod(actionMethod);
  }
}
