{
  final String title=request.getOptionalProperty(TABLE_TITLE);
  final String variable=request.getOptionalProperty(ELEMENT_NAME,ELEMENT);
  final String headerClass=request.getOptionalProperty("head-" + CLASS);
  final TableBlock block=new TableBlock();
  block.setCollection(collection);
  block.setElementName(variable);
  request.setBlockContent(block);
  request.pushNewBuffer();
  request.processUtilCloseTag();
  final String headers=request.popBuffer();
  return new TableContentWriter(){
    @Override public void writeFooters(    final PageWriter writer){
    }
    public void tidyUp(){
      request.popBlockContent();
    }
    @Override public void writeCaption(    PageWriter writer){
      if (title != null) {
        writer.appendHtml("<caption>");
        writer.appendHtml(title);
        writer.appendHtml("</thead>");
      }
    }
    @Override public void writeHeaders(    final PageWriter writer){
      final String headerSegment=headerClass == null ? "" : (" class=\"" + headerClass + "\"");
      writer.appendHtml("<thead" + headerSegment + ">");
      writer.appendHtml(headers);
      writer.appendHtml("</thead>");
    }
    @Override public void writeElement(    final Request request,    final RequestContext context,    final ObjectAdapter element){
      context.addVariable(variable,context.mapObject(element,Scope.REQUEST),Scope.REQUEST);
      final RepeatMarker end=request.createMarker();
      final RepeatMarker marker=block.getMarker();
      marker.repeat();
      request.processUtilCloseTag();
      end.repeat();
    }
  }
;
}
