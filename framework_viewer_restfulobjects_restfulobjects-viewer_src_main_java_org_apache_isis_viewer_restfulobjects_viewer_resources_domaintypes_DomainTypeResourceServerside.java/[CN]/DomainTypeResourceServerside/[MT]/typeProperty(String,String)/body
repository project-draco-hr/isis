{
  final RepresentationType representationType=RepresentationType.PROPERTY_DESCRIPTION;
  init(representationType);
  final ObjectSpecification parentSpec=getSpecificationLoader().loadSpecification(domainType);
  if (parentSpec == null) {
    throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);
  }
  final ObjectMember objectMember=parentSpec.getAssociation(propertyId);
  if (objectMember == null || objectMember.isOneToManyAssociation()) {
    throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND);
  }
  final OneToOneAssociation property=(OneToOneAssociation)objectMember;
  final RendererFactory rendererFactory=rendererFactoryRegistry.find(representationType);
  final PropertyDescriptionReprRenderer renderer=(PropertyDescriptionReprRenderer)rendererFactory.newRenderer(getResourceContext(),null,JsonRepresentation.newMap());
  renderer.with(new ParentSpecAndProperty(parentSpec,property)).includesSelf();
  return responseOfOk(renderer,Caching.ONE_DAY).build();
}
