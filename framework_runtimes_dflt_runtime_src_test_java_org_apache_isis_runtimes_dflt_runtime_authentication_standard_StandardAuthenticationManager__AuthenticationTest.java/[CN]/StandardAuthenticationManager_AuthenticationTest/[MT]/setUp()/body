{
  mockConfiguration=mockery.mock(IsisConfiguration.class);
  mockRandomCodeGenerator=mockery.mock(RandomCodeGenerator.class);
  mockAuthenticator=mockery.mock(Authenticator.class);
  mockAuthSession=mockery.mock(AuthenticationSession.class);
  authenticationManager=new AuthenticationManagerStandard(mockConfiguration);
  authenticationManager.addAuthenticator(mockAuthenticator);
  authenticationManager.setRandomCodeGenerator(mockRandomCodeGenerator);
  mockery.checking(new Expectations(){
{
      allowing(mockAuthenticator).canAuthenticate(with(any(AuthenticationRequest.class)));
      will(returnValue(true));
      allowing(mockAuthenticator).authenticate(with(any(AuthenticationRequest.class)),with(any(String.class)));
      will(returnValue(mockAuthSession));
      allowing(mockRandomCodeGenerator).generateRandomCode();
      will(returnValue("123456"));
      allowing(mockAuthSession).getValidationCode();
      will(returnValue("123456"));
      allowing(mockAuthSession).hasUserNameOf("foo");
      will(returnValue(true));
      allowing(mockAuthSession).getUserName();
      will(returnValue("foo"));
    }
  }
);
}
