{
  if (buf.capacity() > UPPER_LIMIT) {
    buf=new StringBuffer(DEFAULT_SIZE);
  }
 else {
    buf.setLength(0);
  }
  buf.append("<log4j:event logger=\"");
  buf.append(event.getLoggerName());
  buf.append("\" timestamp=\"");
  buf.append(event.timeStamp);
  buf.append("\" level=\"");
  buf.append(event.getLevel());
  buf.append("\" thread=\"");
  buf.append(event.getThreadName());
  buf.append("\">\r\n");
  buf.append("<log4j:message><![CDATA[");
  Transform.appendEscapingCDATA(buf,event.getRenderedMessage());
  buf.append("]]></log4j:message>\r\n");
  String ndc=event.getNDC();
  if (ndc != null) {
    buf.append("<log4j:NDC><![CDATA[");
    buf.append(ndc);
    buf.append("]]></log4j:NDC>\r\n");
  }
  String[] s=event.getThrowableStrRep();
  if (s != null) {
    buf.append("<log4j:throwable><![CDATA[");
    for (int i=0; i < s.length; i++) {
      buf.append(s[i]);
      buf.append("\r\n");
    }
    buf.append("]]></log4j:throwable>\r\n");
  }
  if (locationInfo) {
    LocationInfo locationInfo=event.getLocationInformation();
    buf.append("<log4j:locationInfo class=\"");
    buf.append(locationInfo.getClassName());
    buf.append("\" method=\"");
    buf.append(Transform.escapeTags(locationInfo.getMethodName()));
    buf.append("\" file=\"");
    buf.append(locationInfo.getFileName());
    buf.append("\" line=\"");
    buf.append(locationInfo.getLineNumber());
    buf.append("\"/>\r\n");
  }
  buf.append("</log4j:event>\r\n\r\n");
  return buf.toString();
}
