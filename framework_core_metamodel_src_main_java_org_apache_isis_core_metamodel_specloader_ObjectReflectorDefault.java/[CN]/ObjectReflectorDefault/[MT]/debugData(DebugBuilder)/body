{
  facetDecoratorSet.debugData(str);
  str.appendln();
  str.appendTitle("Specifications");
  final List<ObjectSpecification> specs=Lists.newArrayList(allSpecifications());
  Collections.sort(specs,ObjectSpecification.COMPARATOR_SHORT_IDENTIFIER_IGNORE_CASE);
  for (  final ObjectSpecification spec : specs) {
    str.append(spec.isAbstract() ? "A" : ".");
    str.append(spec.isService() ? "S" : ".");
    str.append(BoundedFacetUtils.isBoundedSet(spec) ? "B" : ".");
    str.append(spec.isParentedOrFreeCollection() ? "C" : ".");
    str.append(spec.isNotCollection() ? "O" : ".");
    str.append(spec.isParseable() ? "P" : ".");
    str.append(spec.isEncodeable() ? "E" : ".");
    str.append(spec.isValueOrIsParented() ? "A" : ".");
    final boolean hasIdentity=!(spec.isParentedOrFreeCollection() || spec.isParented() || spec.isValue());
    str.append(hasIdentity ? "I" : ".");
    str.append("  ");
    str.append(spec.getShortIdentifier());
    str.append("  [fqc=");
    str.append(spec.getFullIdentifier());
    str.append(",type=");
    str.append(spec.getClass().getName());
    str.appendln("]");
  }
}
