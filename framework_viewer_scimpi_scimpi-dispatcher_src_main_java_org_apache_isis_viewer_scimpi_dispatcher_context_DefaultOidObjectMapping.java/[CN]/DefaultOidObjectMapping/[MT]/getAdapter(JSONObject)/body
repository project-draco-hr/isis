{
  final String objectType=jsonObject.getString("_objectType");
  final ObjectSpecification objectSpec=getSpecificationLoader().lookupByObjectType(objectType);
  final String id=jsonObject.getString("_id");
  if (objectSpec.isAggregated() && !objectSpec.isCollection()) {
    final String[] split=id.split("@");
    final String parentOidStr=split[0];
    final String aggregatedLocalId=split[1];
    RootOid parentOid;
    if (RootOid.class.isAssignableFrom(oidType)) {
      parentOid=getOidStringifier().deString(parentOidStr);
    }
 else     if (RootOidDefault.class.isAssignableFrom(oidType)) {
      parentOid=RootOidDefault.createTransient(objectType,parentOidStr);
    }
 else {
      throw new ScimpiException("Unsupported OID type " + oidType);
    }
    final AggregatedOid oid=new AggregatedOid(parentOid,aggregatedLocalId);
    return getPersistenceSession().recreateAdapter(oid,objectSpec);
  }
 else {
    return mappedObject("T" + objectType + "@"+ id);
  }
}
