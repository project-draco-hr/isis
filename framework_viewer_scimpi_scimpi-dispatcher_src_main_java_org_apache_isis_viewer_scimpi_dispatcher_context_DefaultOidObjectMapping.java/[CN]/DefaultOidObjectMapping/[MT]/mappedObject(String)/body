{
  final TypedOid typedOid=new OidMarshaller().unmarshal(oidStr,TypedOid.class);
  final ObjectSpecification spec=getSpecificationLoader().lookupBySpecId(typedOid.getObjectSpecId());
  if (typedOid.isTransient()) {
    TransientRootAdapterMapping mapping=sessionTransients.get(oidStr);
    if (mapping == null) {
      mapping=requestTransients.get(oidStr);
    }
    if (mapping == null) {
      final Object pojo=spec.createObject();
      return getPersistenceSession().recreateAdapter(typedOid,pojo);
    }
    final ObjectAdapter mappedTransientObject=mapping.getObject();
    if (LOG.isDebugEnabled()) {
      LOG.debug("retrieved " + mappedTransientObject.getOid() + " for "+ oidStr);
    }
    return mappedTransientObject;
  }
  try {
    if (typedOid instanceof AggregatedOid) {
      AggregatedOid aggregatedOid=(AggregatedOid)typedOid;
      final TypedOid parentOid=aggregatedOid.getParentOid();
      getPersistenceSession().loadObject(parentOid);
      return getAdapterManager().getAdapterFor(aggregatedOid);
    }
    return getPersistenceSession().loadObject(typedOid);
  }
 catch (  final SecurityException e) {
    throw new IsisException(e);
  }
}
