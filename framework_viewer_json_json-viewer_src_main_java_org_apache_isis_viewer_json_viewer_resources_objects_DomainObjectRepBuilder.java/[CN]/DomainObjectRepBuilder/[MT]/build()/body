{
  RepContext repContext=this.repContext.underAttribute("_self");
  JsonRepresentation selfLink=LinkRepBuilder.newBuilder(repContext,"object",url()).build();
  JsonRepresentation selfType=LinkRepBuilder.newTypeBuilder(repContext,objectAdapter.getSpecification()).build();
  String title=objectAdapter.titleString();
  JsonRepresentation iconLink=LinkRepBuilder.newBuilder(repContext,"icon",icon()).build();
  JsonRepresentation self=JsonRepresentation.newMap();
  self.put("link",selfLink);
  self.put("type",selfType);
  self.put("oid",OidUtils.getOidStr(objectAdapter,getOidStringifier()));
  self.put("title",title);
  self.put("icon",iconLink);
  representation.put("_self",self);
  withAllMembers(objectAdapter);
  if (!members.isEmpty()) {
    for (    Map.Entry<String,JsonRepresentation> entry : members.entrySet()) {
      String memberId=entry.getKey();
      JsonRepresentation memberRep=entry.getValue();
      representation.put(memberId,memberRep);
    }
  }
  return representation;
}
