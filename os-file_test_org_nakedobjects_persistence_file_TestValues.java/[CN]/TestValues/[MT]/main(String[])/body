{
  PropertyConfigurator.configure("log4j.testing.properties");
  DataManager manager=new XmlDataManager("tmp/tests");
  NakedClass type=NakedClassManager.getInstance().getNakedClass(Role.class.getName());
  SimpleOid oid=new SimpleOid(99);
  ObjectData data=new ObjectData(type,oid);
  data.saveValue("field3",new TextString("Fred"));
  Date d1=new Date();
  d1.add(1,2,3);
  data.saveValue("date",d1);
  System.out.println(d1 + " " + d1.saveString());
  TimeStamp ts1=new TimeStamp();
  ts1.add(1,2,3);
  data.saveValue("timestamp",ts1);
  System.out.println(ts1 + " " + ts1.saveString());
  Logical l1=new Logical();
  l1.set();
  data.saveValue("logical",l1);
  System.out.println(l1 + " " + l1.saveString());
  Money m=new Money();
  m.setValue(1233.45);
  data.saveValue("money",m);
  System.out.println(m + " " + m.saveString());
  SimpleOid coid=new SimpleOid(100);
  data.initCollection(coid,"field4");
  for (int i=0; i < 6; i++) {
    data.addElement("field4",new SimpleOid(103 + i));
  }
  manager.save(data);
  ObjectData object=(ObjectData)manager.loadData(oid);
  TextString t=new TextString();
  object.restoreValue("field3",t);
  System.out.println(t + " " + t.title().toString());
  Date d2=new Date();
  object.restoreValue("date",d2);
  System.out.println(d2 + " " + d2.saveString());
  TimeStamp ts2=new TimeStamp();
  object.restoreValue("timestamp",ts2);
  System.out.println(ts2 + " " + ts2.saveString());
  Logical l2=new Logical();
  object.restoreValue("logical",l2);
  System.out.println(l2 + " " + l2.saveString());
  Money m2=new Money();
  object.restoreValue("money",m2);
  System.out.println(m2 + " " + m2.saveString());
}
