{
  checkTransactionInProgress();
  LOG.debug("endTransaction");
  if (clientSideTransaction.isEmpty()) {
    LOG.debug("  no transaction commands to process");
    clientSideTransaction=null;
    return;
  }
  ObjectEncoder.KnownTransients knownObjects=ObjectEncoder.createKnownTransients();
  NakedObject[] persistedObjects=clientSideTransaction.getPersisted();
  ObjectData[] persisted=new ObjectData[persistedObjects.length];
  for (int i=0; i < persistedObjects.length; i++) {
    persisted[i]=encoder.createMakePersistentGraph(persistedObjects[i],knownObjects);
  }
  NakedObject[] changedObjects=clientSideTransaction.getChanged();
  ObjectData[] changed=new ObjectData[changedObjects.length];
  for (int i=0; i < changedObjects.length; i++) {
    changed[i]=encoder.createGraphForChangedObject(changedObjects[i],knownObjects);
    updateNotifier.addDirty(changedObjects[i]);
  }
  NakedObject[] deletedObjects=clientSideTransaction.getDeleted();
  ReferenceData[] deleted=new ReferenceData[deletedObjects.length];
  for (int i=0; i < deletedObjects.length; i++) {
    deleted[i]=encoder.createIdentityData(deletedObjects[i]);
  }
  ClientActionResultData results=connection.executeClientAction(session,persisted,changed,deleted);
  if (results != null) {
    ObjectData[] persistedUpdates=results.getPersisted();
    if (persistedUpdates != null) {
      for (int i=0; i < persistedUpdates.length; i++) {
        ObjectDecoder.madePersistent(persistedObjects[i],persistedUpdates[i]);
      }
    }
    Version[] changedVersions=results.getChanged();
    if (changedVersions != null) {
      for (int i=0; i < changedVersions.length; i++) {
        changedObjects[i].setOptimisticLock(changedVersions[i]);
      }
    }
  }
  clientSideTransaction=null;
}
