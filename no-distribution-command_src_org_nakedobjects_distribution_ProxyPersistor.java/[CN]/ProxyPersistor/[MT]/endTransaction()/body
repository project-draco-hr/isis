{
  checkTransactionInProgress();
  LOG.debug("endTransaction");
  if (clientSideTransaction.isEmpty()) {
    LOG.debug("  no transaction commands to process");
    clientSideTransaction=null;
    return;
  }
  NakedObject[] persistedObjects=clientSideTransaction.getPersisted();
  ObjectData[] persisted=new ObjectData[persistedObjects.length];
  for (int i=0; i < persistedObjects.length; i++) {
    persisted[i]=objectDataFactory.createMakePersistentGraph(persistedObjects[i]);
  }
  NakedObject[] changedObjects=clientSideTransaction.getChanged();
  ObjectData[] changed=new ObjectData[changedObjects.length];
  for (int i=0; i < changedObjects.length; i++) {
    changed[i]=objectDataFactory.createDataForChangedObject(changedObjects[i]);
    updateNotifier.addDirty(changedObjects[i]);
  }
  NakedObject[] deletedObjects=clientSideTransaction.getDeleted();
  ReferenceData[] deleted=new ReferenceData[deletedObjects.length];
  for (int i=0; i < deletedObjects.length; i++) {
    deleted[i]=objectDataFactory.createReference(deletedObjects[i]);
  }
  ObjectData[] data=connection.executeClientAction(session,persisted,changed,deleted);
  if (data != null) {
    for (int i=0; i < data.length; i++) {
      madePersistent(persistedObjects[i],data[i]);
    }
  }
  clientSideTransaction=null;
}
