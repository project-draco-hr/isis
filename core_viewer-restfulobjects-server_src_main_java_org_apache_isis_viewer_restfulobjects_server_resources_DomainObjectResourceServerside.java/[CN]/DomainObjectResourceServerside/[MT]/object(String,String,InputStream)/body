{
  init(RepresentationType.DOMAIN_OBJECT,Where.OBJECT_FORMS,RepresentationService.Intent.ALREADY_PERSISTENT);
  final String objectStr=Util.asStringUtf8(object);
  final JsonRepresentation argRepr=Util.readAsMap(objectStr);
  if (!argRepr.isMap()) {
    throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.BAD_REQUEST,"Body is not a map; got %s",argRepr);
  }
  final ObjectAdapter objectAdapter=getObjectAdapterElseThrowNotFound(domainType,instanceId);
  final ObjectAdapterUpdateHelper updateHelper=new ObjectAdapterUpdateHelper(getResourceContext(),objectAdapter);
  if (!updateHelper.copyOverProperties(argRepr,ObjectAdapterUpdateHelper.Intent.UPDATE_EXISTING)) {
    throw RestfulObjectsApplicationException.createWithBody(HttpStatusCode.BAD_REQUEST,argRepr,"Illegal property value");
  }
  final Consent validity=objectAdapter.getSpecification().isValid(objectAdapter,InteractionInitiatedBy.USER);
  if (validity.isVetoed()) {
    throw RestfulObjectsApplicationException.createWithBody(HttpStatusCode.BAD_REQUEST,argRepr,validity.getReason());
  }
  return newDomainResourceHelper(objectAdapter).objectRepresentation();
}
