{
  init(Where.OBJECT_FORMS);
  final ObjectAdapter objectAdapter=getObjectAdapterElseThrowNotFound(domainType,instanceId);
  final DomainResourceHelper helper=getDomainResourceHelper(objectAdapter);
  final ObjectAdapterAccessHelper accessHelper=new ObjectAdapterAccessHelper(getResourceContext(),objectAdapter);
  final OneToOneAssociation property=accessHelper.getPropertyThatIsVisibleForIntent(propertyId,ObjectAdapterAccessHelper.Intent.MUTATE);
  final ObjectSpecification propertySpec=property.getSpecification();
  final String bodyAsString=Util.asStringUtf8(body);
  final ObjectAdapter argAdapter=new JsonParserHelper(getResourceContext(),propertySpec).parseAsMapWithSingleValue(bodyAsString);
  final Consent consent=property.isAssociationValid(objectAdapter,argAdapter,InteractionInitiatedBy.USER);
  if (consent.isVetoed()) {
    throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED,consent.getReason());
  }
  property.set(objectAdapter,argAdapter,InteractionInitiatedBy.USER);
  return helper.propertyDetails(propertyId,MemberReprMode.WRITE);
}
