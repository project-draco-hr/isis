{
  allowingConfigurationToReturn("isis.services.publish.objects","all");
  facetFactory.process(new ProcessClassContext(CustomerWithDomainObjectAndPublishingSetToAsConfiguredWithCustomPayloadFactory.class,null,mockMethodRemover,facetHolder));
  final Facet facet=facetHolder.getFacet(PublishedObjectFacet.class);
  Assert.assertNotNull(facet);
  Assert.assertTrue(facet instanceof PublishedObjectFacetForDomainObjectAnnotationAsConfigured);
  final PublishedObject.PayloadFactory payloadFactory=((PublishedObjectFacetForDomainObjectAnnotationAsConfigured)facet).value();
  assertThat(payloadFactory,instanceOf(PublishedObjectFacetAbstract.LegacyAdapter.class));
  final PublishedObjectFacetAbstract.LegacyAdapter legacyAdapter=(PublishedObjectFacetAbstract.LegacyAdapter)payloadFactory;
  final PublishingPayloadFactoryForObject specifiedPayloadFactory=legacyAdapter.getPayloadFactory();
  assertThat(specifiedPayloadFactory,instanceOf(CustomerPayloadFactory.class));
  expectNoMethodsRemoved();
}
