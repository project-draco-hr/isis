{
  Oid oid=data.getOid();
  Object[] fieldContent=data.getFieldContent();
  String type=data.getType();
  NakedObject object;
  if (oid != null && loadedObjects().isLoaded(oid)) {
    object=loadedObjects().getLoadedObject(oid);
  }
 else {
    NakedObjectSpecification specification=NakedObjects.getSpecificationLoader().loadSpecification(type);
    object=(NakedObject)specification.acquireInstance();
    if (oid != null) {
      object.setOid(oid);
      loadedObjects().loaded(object);
    }
  }
  if (!object.isResolved() && data.isResolved()) {
    object.setResolved();
  }
  NakedObjectField[] fields=object.getSpecification().getFields();
  if (fields.length == 0) {
    for (int i=0; i < fieldContent.length; i++) {
    }
  }
 else {
    for (int i=0; i < fields.length; i++) {
      if (fields[i].isCollection()) {
        if (fieldContent[i] != null) {
          ObjectData collection=(ObjectData)fieldContent[i];
          Object[] elements=collection.getFieldContent();
          NakedObject[] instances=new NakedObject[elements.length];
          for (int j=0; j < instances.length; j++) {
            NakedObject instance=recreateObject((ObjectData)elements[j]);
            instances[j]=instance;
          }
          object.initOneToManyAssociation((OneToManyAssociation)fields[i],instances);
        }
      }
 else       if (fields[i].isValue()) {
        object.initValue((OneToOneAssociation)fields[i],fieldContent[i]);
      }
 else {
        if (fieldContent[i] != null) {
          NakedObject field=recreateObject((ObjectData)fieldContent[i]);
          object.initAssociation((NakedObjectAssociation)fields[i],field);
        }
      }
    }
  }
}
