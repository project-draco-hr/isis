{
  Oid oid=data.getOid();
  Object[] fieldContent=data.getFieldContent();
  NakedObjectLoader objectLoader=NakedObjects.getObjectLoader();
  if (!objectLoader.isIdentityKnown(oid)) {
    return;
  }
  NakedObject object;
  object=objectLoader.getAdapterFor(oid);
  objectLoader.loading(object,initialState);
  NakedObjectField[] fields=object.getSpecification().getFields();
  if (fields.length > 0) {
    for (int i=0; i < fields.length; i++) {
      if (fields[i].isCollection()) {
        if (fieldContent[i] != null) {
          ObjectData collection=(ObjectData)fieldContent[i];
          Object[] elements=collection.getFieldContent();
          NakedObject[] instances=new NakedObject[elements.length];
          for (int j=0; j < instances.length; j++) {
            NakedObject instance=recreateObject((ObjectData)elements[j]);
            instances[j]=instance;
          }
          object.initOneToManyAssociation((OneToManyAssociation)fields[i],instances);
        }
      }
 else       if (fields[i].isValue()) {
        object.initValue((OneToOneAssociation)fields[i],fieldContent[i]);
      }
 else {
        if (fieldContent[i] != null) {
          NakedObject field=recreateObject((ObjectData)fieldContent[i]);
          object.initAssociation((NakedObjectAssociation)fields[i],field);
        }
      }
    }
  }
  objectLoader.loaded(object,ResolveState.RESOLVED);
  updateNotifier.addDirty(object);
}
