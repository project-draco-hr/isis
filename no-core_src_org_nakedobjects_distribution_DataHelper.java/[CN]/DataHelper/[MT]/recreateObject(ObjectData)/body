{
  Oid oid=data.getOid();
  String type=data.getType();
  NakedObjectSpecification specification=NakedObjects.getSpecificationLoader().loadSpecification(type);
  NakedObjectLoader objectLoader=NakedObjects.getObjectLoader();
  NakedObject object;
  if (oid == null) {
    object=objectLoader.recreateTransientInstance(specification);
    object.setOptimisticLock(data.getVersion(),"",null);
    recreateObjectsInFields(data,object);
    return object;
  }
 else {
    object=objectLoader.recreateAdapterForPersistent(oid,specification);
    object.setOptimisticLock(data.getVersion(),"",null);
    ResolveState state;
    if (data.getFieldContent() == null) {
      return object;
    }
 else {
      state=data.isResolved() ? ResolveState.RESOLVING : ResolveState.RESOLVING_PART;
      if (object.getResolveState().isResolvable(state)) {
        objectLoader.start(object,state);
        recreateObjectsInFields(data,object);
        objectLoader.end(object);
      }
      return object;
    }
  }
}
