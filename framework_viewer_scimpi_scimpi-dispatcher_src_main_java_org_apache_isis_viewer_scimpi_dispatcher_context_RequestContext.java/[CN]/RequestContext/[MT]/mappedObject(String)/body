{
  if (id != null && id.equals("")) {
    return null;
  }
  if (id == null) {
    id=RESULT;
  }
  if (id.startsWith("D")) {
    return objectMapping.mappedTransientObject(StringEscapeUtils.unescapeHtml(id.substring(1)));
  }
  final String[] idParts=id.split("@");
  if (idParts.length == 2) {
    final ObjectAdapter mappedObject=objectMapping.mappedObject(id);
    if (mappedObject instanceof ObjectAdapter) {
      IsisContext.getPersistenceSession().resolveImmediately(mappedObject);
    }
    return mappedObject;
  }
  final ObjectAdapter parentObject=objectMapping.mappedObject(idParts[0] + "@" + idParts[1]);
  if (parentObject instanceof ObjectAdapter) {
    IsisContext.getPersistenceSession().resolveImmediately(parentObject);
  }
  final AggregatedOid aggregatedOid=new AggregatedOid(parentObject.getOid(),idParts[2]);
  ObjectAdapter aggregatedAdapter=null;
  outer:   for (  final ObjectAssociation association : parentObject.getSpecification().getAssociations()) {
    if (association.getSpecification().isAggregated()) {
      final ObjectAdapter objectAdapter=association.get(parentObject);
      if (objectAdapter == null) {
        continue;
      }
      if (association.isOneToManyAssociation()) {
        final ObjectAdapter coll=objectAdapter;
        final CollectionFacet facet=coll.getSpecification().getFacet(CollectionFacet.class);
        for (        final ObjectAdapter element : facet.iterable(coll)) {
          if (element.getOid().equals(aggregatedOid)) {
            aggregatedAdapter=element;
            break outer;
          }
        }
      }
 else {
        if (objectAdapter.getOid().equals(aggregatedOid)) {
          aggregatedAdapter=objectAdapter;
          break;
        }
      }
    }
 else     if (association.isOneToManyAssociation()) {
      if (association.getId().equals(idParts[2])) {
        return association.get(parentObject);
      }
    }
  }
  return aggregatedAdapter;
}
