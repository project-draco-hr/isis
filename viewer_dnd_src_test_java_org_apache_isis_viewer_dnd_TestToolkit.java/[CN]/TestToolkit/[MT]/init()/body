{
  colorsAndFonts=new ColorsAndFonts(){
    public int defaultBaseline(){
      return 0;
    }
    public int defaultFieldHeight(){
      return 0;
    }
    public Color getColor(    final int rgbColor){
      return null;
    }
    public Color getColor(    final String name){
      return new NullColor();
    }
    public Text getText(    final String name){
      return new DummyText();
    }
    public void init(){
    }
  }
;
  viewer=new Viewer(){
    public void addToNotificationList(    final View view){
    }
    public void clearAction(){
    }
    public void clearOverlayView(){
    }
    public void clearOverlayView(    final View view){
    }
    public void disposeUnneededViews(){
    }
    public Object getClipboard(    final Class<?> class1){
      return null;
    }
    public InteractionSpy getSpy(){
      return null;
    }
    UndoStack undoStack=new UndoStack();
    public UndoStack getUndoStack(){
      return undoStack;
    }
    public boolean hasFocus(    final View view){
      return false;
    }
    public boolean isRunningAsExploration(){
      return false;
    }
    public boolean isRunningAsPrototype(){
      return false;
    }
    public void markDamaged(    final Bounds bounds){
    }
    public void removeFromNotificationList(    final View view){
    }
    public void scheduleRepaint(){
    }
    public void saveCurrentFieldEntry(){
    }
    public String selectFilePath(    final String title,    final String directory){
      return null;
    }
    public void setBackground(    final Background background){
    }
    public void setClipboard(    final String clip,    final Class<?> class1){
    }
    public void setKeyboardFocus(    final View view){
    }
    public void setOverlayView(    final View view){
    }
    public void showInOverlay(    Content content,    Location location){
    }
    public void showDebugFrame(    DebuggableWithTitle[] info,    Location at){
    }
    public Size getOverlaySize(){
      return null;
    }
    public void saveOpenObjects(){
    }
  }
;
  feedbackManager=new Feedback(){
    public void showArrowCursor(){
    }
    public void showCrosshairCursor(){
    }
    public void showDefaultCursor(){
    }
    public void showException(    final Throwable e){
    }
    public void showHandCursor(){
    }
    public void showMoveCursor(){
    }
    public void showResizeDownCursor(){
    }
    public void showResizeDownLeftCursor(){
    }
    public void showResizeDownRightCursor(){
    }
    public void showResizeLeftCursor(){
    }
    public void showResizeRightCursor(){
    }
    public void showResizeUpCursor(){
    }
    public void showResizeUpLeftCursor(){
    }
    public void showResizeUpRightCursor(){
    }
    public void showTextCursor(){
    }
    public void addMessage(    final String string){
    }
    public void clearAction(){
    }
    public void clearBusy(    final View view){
    }
    public void clearError(){
    }
    public String getStatusBarOutput(){
      return null;
    }
    public boolean isBusy(    final View view){
      return false;
    }
    public void setAction(    final String string){
    }
    public void setBusy(    final View view,    final BackgroundTask task){
    }
    public void setError(    final String string){
    }
    public void setViewDetail(    final String string){
    }
    public void showBusyState(    final View view){
    }
    public void showMessagesAndWarnings(){
    }
  }
;
  viewFactory=new GlobalViewFactory(){
    public Enumeration<ViewSpecification> availableViews(    ViewRequirement viewRequirement){
      throw new UnexpectedCallException();
    }
    public View createDialog(    Content content){
      throw new UnexpectedCallException();
    }
    public DragEvent createDragContentOutline(    View view,    Location location){
      throw new UnexpectedCallException();
    }
    public View createDragViewOutline(    View view){
      throw new UnexpectedCallException();
    }
    public View createMinimizedView(    View view){
      throw new UnexpectedCallException();
    }
    public View createView(    ViewRequirement requirement){
      return new DummyView();
    }
    public void debugData(    DebugBuilder debug){
    }
    public String debugTitle(){
      throw new UnexpectedCallException();
    }
    public void addSpecification(    ViewSpecification spec){
    }
    public Enumeration<ViewSpecification> availableDesigns(    ViewRequirement viewRequirement){
      return null;
    }
  }
;
}
