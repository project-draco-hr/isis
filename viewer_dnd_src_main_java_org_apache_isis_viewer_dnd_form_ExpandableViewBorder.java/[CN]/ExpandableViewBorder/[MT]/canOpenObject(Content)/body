{
  final ObjectAdapter object=((ObjectContent)content).getObject();
  if (object != null) {
    final List<ObjectAssociation> fields=object.getSpecification().getAssociations(ObjectAssociationFilters.dynamicallyVisible(IsisContext.getAuthenticationSession(),object));
    for (int i=0; i < fields.size(); i++) {
      if (fields.get(i).isOneToManyAssociation()) {
        return CAN_OPEN;
      }
 else       if (fields.get(i).isOneToOneAssociation() && !fields.get(i).getSpecification().isParseable() && fieldContainsReference(object,fields.get(i))) {
        return CAN_OPEN;
      }
    }
  }
  boolean openForObjectsWithOutReferences=true;
  return openForObjectsWithOutReferences ? CAN_OPEN : CANT_OPEN;
}
