{
  NodeBase child;
  if (readonly)   throw new DomEx(DomEx.NO_MODIFICATION_ALLOWED_ERR);
  if (newChild == null || refChild == null)   throw new DomEx(DomEx.HIERARCHY_REQUEST_ERR);
  if (children == null)   throw new DomEx(DomEx.NOT_FOUND_ERR);
  child=checkDocument(newChild);
  if (newChild.getNodeType() == DOCUMENT_FRAGMENT_NODE) {
    consumeFragment(newChild,refChild);
    return removeChild(refChild);
  }
  checkNotAncestor(newChild);
  checkChildType(newChild.getNodeType());
  for (int i=0; i < length; i++) {
    if (children[i] == newChild) {
      removeChild(newChild);
      break;
    }
  }
  for (int i=0; i < length; i++) {
    if (children[i] != refChild)     continue;
    child.setParentNode(this,i);
    children[i]=child;
    ((NodeBase)refChild).setParentNode(null,-1);
    mutated();
    return refChild;
  }
  throw new DomEx(DomEx.NOT_FOUND_ERR);
}
