{
  final String objectId=request.getOptionalProperty(OBJECT);
  final String method=request.getOptionalProperty(METHOD);
  final String forwardResultTo=request.getOptionalProperty(VIEW);
  final String forwardVoidTo=request.getOptionalProperty(VOID);
  final String resultOverride=request.getOptionalProperty(RESULT_OVERRIDE);
  final String resultOverrideSegment=resultOverride == null ? "" : "&amp;" + RESULT_OVERRIDE + "="+ resultOverride;
  final String resultName=request.getOptionalProperty(RESULT_NAME);
  final String resultNameSegment=resultName == null ? "" : "&amp;" + RESULT_NAME + "="+ resultName;
  final String scope=request.getOptionalProperty(SCOPE);
  final String scopeSegment=scope == null ? "" : "&amp;" + SCOPE + "="+ scope;
  final String confirm=request.getOptionalProperty(CONFIRM);
  final String completionMessage=request.getOptionalProperty(MESSAGE);
  final String confirmSegment=confirm == null ? "" : "&amp;" + "_" + CONFIRM + "="+ URLEncoder.encode(confirm);
  final String messageSegment=completionMessage == null ? "" : "&amp;" + "_" + MESSAGE + "="+ URLEncoder.encode(completionMessage);
  final RequestContext context=request.getContext();
  final ObjectAdapter object=MethodsUtils.findObject(context,objectId);
  final String version=context.mapVersion(object);
  final ObjectAction action=MethodsUtils.findAction(object,method);
  final ActionContent parameterBlock=new ActionContent(action);
  request.setBlockContent(parameterBlock);
  request.pushNewBuffer();
  request.processUtilCloseTag();
  final String text=request.popBuffer();
  if (MethodsUtils.isVisibleAndUsable(object,action)) {
    writeLink(request,objectId,version,method,forwardResultTo,forwardVoidTo,resultNameSegment,scopeSegment,confirmSegment,messageSegment,context,action,parameterBlock,text);
  }
  request.popBlockContent();
}
