{
  final HiddenFacetViaAlwaysHideMethodFacetFactory facetFactory=new HiddenFacetViaAlwaysHideMethodFacetFactory();
  facetFactory.setSpecificationLookup(reflector);
  final Method collectionAccessorMethod=findMethod(CustomerStatic.class,"getOrders");
  final Method alwaysHideMethod=findMethod(CustomerStatic.class,"alwaysHideOrders");
  facetFactory.process(new ProcessMethodContext(CustomerStatic.class,collectionAccessorMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(HiddenFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof HiddenFacetAlwaysEverywhere);
  final HiddenFacetAbstract hiddenFacetAlways=(HiddenFacetAlwaysEverywhere)facet;
  assertEquals(When.ALWAYS,hiddenFacetAlways.when());
  assertTrue(methodRemover.getRemovedMethodMethodCalls().contains(alwaysHideMethod));
}
