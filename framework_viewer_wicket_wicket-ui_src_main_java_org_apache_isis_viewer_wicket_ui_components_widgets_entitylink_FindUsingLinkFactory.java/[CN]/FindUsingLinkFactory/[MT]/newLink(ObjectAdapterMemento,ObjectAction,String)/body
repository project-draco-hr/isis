{
  final ActionMemento actionMemento=new ActionMemento(action);
  final ActionModel.Mode actionMode=ActionModel.determineMode(action);
  final ActionModel actionModel=ActionModel.create(adapterMemento,actionMemento,actionMode,SingleResultsMode.SELECT);
  actionModel.setSelectionHandler(new SelectionHandler(){
    private static final long serialVersionUID=1L;
    @Override public void onSelected(    final Component context,    final ObjectAdapter selectedAdapter){
      final ObjectAdapterMemento selectedAdapterMemento=ObjectAdapterMemento.createOrNull(selectedAdapter);
      callback.onSelected(selectedAdapterMemento);
    }
  }
);
  actionModel.setNoResultsHandler(new NoResultsHandler(){
    private static final long serialVersionUID=1L;
    @Override public void onNoResults(    final Component context){
      callback.onNoResults();
    }
  }
);
  return new LinkAndLabel(new Link<String>(linkId){
    private static final long serialVersionUID=1L;
    @Override public void onClick(){
      callback.onClick(actionModel);
    }
  }
,ObjectActions.nameFor(action));
}
