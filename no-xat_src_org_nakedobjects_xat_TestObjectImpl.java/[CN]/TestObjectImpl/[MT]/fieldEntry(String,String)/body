{
  NakedObjectField field=fieldAccessorFor(fieldName);
  assertFieldVisible(field);
  assertFieldModifiable(fieldName,field);
  NakedObject object=((NakedObject)getForNaked());
  try {
    if (!field.isValue()) {
      throw new NakedAssertionFailedError("Field is not a value");
    }
    NakedValue value=object.getValue((OneToOneAssociation)field);
    if (value == null) {
      value=(NakedValue)field.getSpecification().acquireInstance();
    }
    value.parseTextEntry(textEntry);
    Hint hint=object.getHint(field,value);
    if (hint.isValid().isVetoed()) {
      throw new NakedAssertionFailedError("Value is not valid: " + textEntry);
    }
    object.setValue((OneToOneAssociation)field,value.getObject());
  }
 catch (  TextEntryParseException e) {
    throw new IllegalActionError("");
  }
catch (  InvalidEntryException e) {
    throw new IllegalActionError("");
  }
  NakedObjects.getObjectManager().saveChanges();
}
