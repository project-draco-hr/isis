{
  NakedObjectField field=fieldAccessorFor(fieldName);
  assertFieldVisible(field);
  assertFieldModifiable(fieldName,field);
  TestValue view=(TestValue)fieldReference(fieldName);
  if (!(view.getForNaked() instanceof NakedValue)) {
    throw new IllegalActionError("Can only make an entry (eg by keyboard) into a value field");
  }
  NakedValue nakedValue=NakedObjects.getObjectLoader().createValueInstance(field.getSpecification());
  if (nakedValue == null) {
    throw new NakedAssertionFailedError("Field '" + fieldName + "' contains null, but should contain an NakedValue object");
  }
  if (nakedValue == null) {
    nakedValue=(NakedValue)NakedObjects.getObjectLoader().createValueInstance(field.getSpecification());
  }
  try {
    nakedValue.parseTextEntry(value);
    Hint about=getForNakedObject().getHint(field,nakedValue);
    boolean isAllowed=about.isValid().isAllowed();
    if (isAllowed) {
      throw new NakedAssertionFailedError("Value was unexpectedly validated");
    }
  }
 catch (  InvalidEntryException expected) {
  }
}
