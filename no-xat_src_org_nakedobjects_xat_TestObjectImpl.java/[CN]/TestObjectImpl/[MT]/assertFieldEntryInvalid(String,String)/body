{
  NakedObjectField field=fieldFor(fieldName);
  assertFieldVisible(fieldName,field);
  assertFieldModifiable(fieldName,field);
  TestObject view=(TestObject)fields.get(simpleName(fieldName));
  if (!view.getForObject().isParsable()) {
    throw new IllegalActionError("Can only make an entry (eg by keyboard) into a value field");
  }
  NakedObject valueObject=getForObject().getField(field);
  if (valueObject == null) {
    throw new NakedAssertionFailedError("Field '" + fieldName + "' contains null, but should contain an NakedValue object");
  }
  try {
    NakedObject ref=(NakedObject)field.getSpecification().acquireInstance();
    Hint about=getForObject().getHint(ClientSession.getSession(),field,ref);
    if (about.canUse().isAllowed()) {
      throw new NakedAssertionFailedError("Value was unexpectedly validated");
    }
    getForObject().parseTextEntry((OneToOneAssociation)field,value);
  }
 catch (  InvalidEntryException expected) {
  }
}
