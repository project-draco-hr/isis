{
  NakedObjectField fieldAccessor=fieldAccessorFor(fieldName);
  assertFieldVisible(fieldAccessor);
  Naked object=getField(fieldName).getForNaked();
  if (!(object instanceof InternalCollection)) {
    throw new IllegalActionError("getField(String, String) only allows an object to be selected from an InternalCollection");
  }
  Enumeration e=((NakedCollection)object).elements();
  NakedObject selectedObject=null;
  int noElements=0;
  while (e.hasMoreElements()) {
    NakedObject element=(NakedObject)e.nextElement();
    if (element.titleString().toString().equals(title)) {
      selectedObject=element;
      noElements++;
    }
  }
  if (noElements == 0) {
    throw new IllegalActionError("The field '" + fieldName + "' must contain an object titled '"+ title+ "' within it");
  }
 else   if (noElements > 1) {
    throw new IllegalActionError("The field '" + fieldName + "' must only contain one object titled '"+ title+ "' within it");
  }
  if (selectedObject.isPersistent() && !selectedObject.isResolved()) {
    NakedObjects.getObjectManager().resolveImmediately(selectedObject);
  }
  return factory.createTestObject(selectedObject);
}
