{
  if (getForm().hasError()) {
    return;
  }
  doPreApply();
  if (applyFormChangesElse())   return;
  final CommandContext commandContext=getServicesInjector().lookupService(CommandContext.class);
  final Command command;
  if (commandContext != null) {
    command=commandContext.getCommand();
    if (command.getTarget() != null) {
    }
 else {
      command.setExecutor(Command.Executor.USER);
      final ObjectAdapter objectAdapter=getEntityModel().getObjectAdapterMemento().getObjectAdapter(ConcurrencyChecking.NO_CHECK);
      command.setTarget(CommandUtil.bookmarkFor(objectAdapter));
      command.setTargetClass(CommandUtil.targetClassNameFor(objectAdapter));
      command.setTargetAction("(edit)");
      command.setMemberIdentifier("(edit)");
    }
  }
  final Object redirectIfAny=doPostApply();
  if (flushChangesElse(target))   return;
  getEntityModel().resetPropertyModels();
  toViewMode(null);
  final ObjectAdapter objectAdapter;
  if (redirectIfAny != null) {
    objectAdapter=getPersistenceSession().getAdapterManager().adapterFor(redirectIfAny);
  }
 else {
    objectAdapter=getEntityModel().getObjectAdapterMemento().getObjectAdapter(ConcurrencyChecking.NO_CHECK);
  }
  final EntityPage entityPage=new EntityPage(objectAdapter,null);
  EntityPropertiesForm.this.setResponsePage(entityPage);
}
