{
  final AdapterManagerDefault adapterManager=getAdapterManager();
  final ObjectAdapter objectAdapter=adapterManager.adapterFor(domainObject);
  final PageParameters pageParameters=EntityModel.createPageParameters(objectAdapter);
  PageClassRegistry pageClassRegistry=guiceBeanProvider.lookup(PageClassRegistry.class);
  final Class<? extends Page> pageClass=pageClassRegistry.getPageClass(PageType.ENTITY);
  final RequestCycle requestCycle=RequestCycle.get();
  final CharSequence urlForPojo=requestCycle.urlFor(pageClass,pageParameters);
  final String fullUrl=requestCycle.getUrlRenderer().renderFullUrl(Url.parse(urlForPojo));
  try {
    return new URI(fullUrl);
  }
 catch (  final URISyntaxException ex) {
    throw new RuntimeException("Cannot create a deep link to domain object: " + domainObject,ex);
  }
}
