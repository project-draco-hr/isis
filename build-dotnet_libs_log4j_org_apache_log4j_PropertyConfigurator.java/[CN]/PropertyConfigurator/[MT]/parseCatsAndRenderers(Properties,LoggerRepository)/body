{
  Enumeration enum=props.propertyNames();
  while (enum.hasMoreElements()) {
    String key=(String)enum.nextElement();
    if (key.startsWith(CATEGORY_PREFIX) || key.startsWith(LOGGER_PREFIX)) {
      String loggerName=null;
      if (key.startsWith(CATEGORY_PREFIX)) {
        loggerName=key.substring(CATEGORY_PREFIX.length());
      }
 else       if (key.startsWith(LOGGER_PREFIX)) {
        loggerName=key.substring(LOGGER_PREFIX.length());
      }
      String value=OptionConverter.findAndSubst(key,props);
      Logger logger=hierarchy.getLogger(loggerName,loggerFactory);
synchronized (logger) {
        parseCategory(props,logger,key,loggerName,value);
        parseAdditivityForLogger(props,logger,loggerName);
      }
    }
 else     if (key.startsWith(RENDERER_PREFIX)) {
      String renderedClass=key.substring(RENDERER_PREFIX.length());
      String renderingClass=OptionConverter.findAndSubst(key,props);
      if (hierarchy instanceof RendererSupport) {
        RendererMap.addRenderer((RendererSupport)hierarchy,renderedClass,renderingClass);
      }
    }
  }
}
