{
  super(mixinAction.getFacetedMethod(),mixinAction.getReturnType(),objectMemberDependencies);
  this.mixinType=mixinType;
  this.mixinAction=mixinAction;
  this.mixedInType=mixedInType;
  final NotPersistedFacet notPersistedFacet=new NotPersistedFacetAbstract(this){
  }
;
  final DisabledFacet disabledFacet=disabledFacet();
  FacetUtil.addFacet(notPersistedFacet);
  FacetUtil.addFacet(disabledFacet);
  FacetUtil.copyFacets(mixinAction.getFacetedMethod(),facetHolder);
  final String name=getName();
  if (Objects.equal(name,"_")) {
    String memberName=ObjectActionMixedIn.determineNameFrom(mixinAction);
    FacetUtil.addFacet(new NamedFacetInferred(memberName,facetHolder));
  }
  final Identifier mixinIdentifier=mixinAction.getFacetedMethod().getIdentifier();
  List<String> memberParameterNames=mixinIdentifier.getMemberParameterNames();
  identifier=Identifier.actionIdentifier(mixedInType.getCorrespondingClass().getName(),getId(),memberParameterNames);
}
