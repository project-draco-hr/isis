{
  if (!objectAdapter.representsPersistent()) {
    return;
  }
  final JsonRepresentation link=linkTo.memberBuilder(Rel.DETAILS,objectMemberType,objectMember).build();
  getLinks().arrayAdd(link);
  final LinkFollowSpecs membersLinkFollower=getLinkFollowSpecs();
  final LinkFollowSpecs detailsLinkFollower=membersLinkFollower.follow("links");
  final JsonRepresentation memberMap=JsonRepresentation.newMap();
  memberMap.mapPut(getMemberId(),representation);
  if (membersLinkFollower.matches(memberMap) && detailsLinkFollower.matches(link)) {
    followDetailsLink(link);
  }
  return;
}
