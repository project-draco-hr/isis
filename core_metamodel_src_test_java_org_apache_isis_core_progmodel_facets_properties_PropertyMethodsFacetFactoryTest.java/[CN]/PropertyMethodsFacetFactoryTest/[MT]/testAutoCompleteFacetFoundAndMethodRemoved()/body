{
  final PropertyAutoCompleteFacetFactory facetFactory=new PropertyAutoCompleteFacetFactory();
  facetFactory.setSpecificationLookup(reflector);
class Customer {
    @SuppressWarnings("unused") public String getFirstName(){
      return null;
    }
    @SuppressWarnings("unused") public Object[] autoCompleteFirstName(    String searchArg){
      return null;
    }
  }
  final Method propertyAccessorMethod=findMethod(Customer.class,"getFirstName");
  final Method propertyAutoCompleteMethod=findMethod(Customer.class,"autoCompleteFirstName",new Class[]{String.class});
  facetFactory.process(new ProcessMethodContext(Customer.class,null,null,propertyAccessorMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(PropertyAutoCompleteFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof PropertyAutoCompleteFacetViaMethod);
  final PropertyAutoCompleteFacetViaMethod propertyAutoCompleteFacet=(PropertyAutoCompleteFacetViaMethod)facet;
  assertEquals(propertyAutoCompleteMethod,propertyAutoCompleteFacet.getMethods().get(0));
  assertTrue(methodRemover.getRemovedMethodMethodCalls().contains(propertyAutoCompleteMethod));
}
