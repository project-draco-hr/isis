{
  final String whenNoSessionStr=config.getInitParameter(WHEN_NO_SESSION_KEY);
  final String logonPage=config.getInitParameter(LOGON_PAGE_KEY);
  if (logonPage != null) {
    if (whenNoSessionStr != null) {
      throw new IllegalStateException(String.format("The init-param '%s' is only provided for backwards compatibility; " + "remove if the init-param '%s' has been specified",LOGON_PAGE_KEY,WHEN_NO_SESSION_KEY));
    }
 else {
      whenNotAuthenticated=WhenNoSession.RESTRICTED;
      this.restrictedPaths=Lists.newArrayList(logonPage);
      return;
    }
  }
  whenNotAuthenticated=WhenNoSession.lookup(whenNoSessionStr);
  if (whenNotAuthenticated == WhenNoSession.RESTRICTED) {
    final String restrictedPathsStr=config.getInitParameter(RESTRICTED_KEY);
    if (restrictedPathsStr == null) {
      throw new IllegalStateException(String.format("Require an init-param of '%s' key to be set.",RESTRICTED_KEY));
    }
    this.restrictedPaths=Lists.newArrayList(Splitter.on(",").split(restrictedPathsStr));
  }
}
