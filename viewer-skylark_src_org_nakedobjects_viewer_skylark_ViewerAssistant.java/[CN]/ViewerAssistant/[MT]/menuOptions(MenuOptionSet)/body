{
  options.add(MenuOptionSet.VIEW,new MenuOption("Quit"){
    public void execute(    Workspace frame,    View view,    Location at){
      viewer.close();
    }
  }
);
  String debug="Debug graphics " + (AbstractView.DEBUG ? "off" : "on");
  options.add(MenuOptionSet.DEBUG,new MenuOption(debug){
    public void execute(    Workspace frame,    View view,    Location at){
      AbstractView.DEBUG=!AbstractView.DEBUG;
      view.markDamaged();
    }
  }
);
  options.add(MenuOptionSet.DEBUG,new MenuOption("Vew context details..."){
    public void execute(    Workspace frame,    View view,    Location at){
      DebugFrame f=new DebugFrame();
      f.setInfo(ClientSession.getSession());
      f.show(at.x + 50,frame.getBounds().y + 6);
    }
  }
);
  options.add(MenuOptionSet.DEBUG,new MenuOption("List prototypes..."){
    public void execute(    Workspace frame,    View view,    Location at){
      DebugFrame f=new DebugFrame();
      f.setInfo(ViewFactory.getViewFactory());
      f.show(at.x + 50,frame.getBounds().y + 6);
    }
  }
);
  options.add(MenuOptionSet.DEBUG,new MenuOption("List notification receivers..."){
    public void execute(    Workspace frame,    View view,    Location at){
      DebugFrame f=new DebugFrame();
      f.setInfo(updateNotifier);
      f.show(at.x + 50,frame.getBounds().y + 6);
    }
  }
);
  options.add(MenuOptionSet.DEBUG,loggingOption("Error",Level.ERROR));
  options.add(MenuOptionSet.DEBUG,loggingOption("Info",Level.INFO));
  options.add(MenuOptionSet.DEBUG,loggingOption("Debug",Level.DEBUG));
  options.add(MenuOptionSet.DEBUG,loggingOption("Off",Level.OFF));
}
