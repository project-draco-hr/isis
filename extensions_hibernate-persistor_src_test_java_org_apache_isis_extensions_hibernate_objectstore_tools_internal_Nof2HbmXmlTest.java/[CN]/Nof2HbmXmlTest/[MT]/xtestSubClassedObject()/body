{
  final PersistentSpecifications classes=PersistentSpecifications.buildPersistentSpecifications(Boolean.TRUE);
  final Nof2HbmXml nof2HbmXml=new Nof2HbmXml();
  final Document subClassDoc=nof2HbmXml.createDocument(classes.getPersistentClass(SimpleObject.class.getName()));
  final Element classNode=subClassDoc.getRootElement().element("class");
  assertNotNull("class node",classNode);
  assertEquals(SimpleObject.class.getName(),classNode.attribute("name").getData());
  assertEquals("SIMPLEOBJECT",classNode.attribute("table").getData());
  assertEquals("org.apache.isis.nos.store.hibernate.testobjects.SimpleObject",classNode.attribute("discriminator-value").getData());
  checkIdVersionInfo(classNode,"PKsimpleobjectID","java.lang.Long",null);
  assertEquals("property element count",7,classNode.elements("property").size());
  final Element titleStringProperty=(Element)classNode.elements("property").get(2);
  assertEquals("title",titleStringProperty.attribute("column").getData());
  assertEquals("string",titleStringProperty.attribute("type").getData());
  assertEquals("title",titleStringProperty.attribute("name").getData());
  final Element stringProperty=(Element)classNode.elements("property").get(3);
  assertEquals("string",stringProperty.attribute("column").getData());
  assertEquals(String.class.getName(),stringProperty.attribute("type").getData());
  assertEquals("string",stringProperty.attribute("name").getData());
  final Element someDateProperty=(Element)classNode.elements("property").get(4);
  assertEquals("someDate",someDateProperty.attribute("column").getData());
  assertEquals(DateType.class.getName(),someDateProperty.attribute("type").getData());
  assertNull("access",someDateProperty.attribute("access"));
  assertEquals("someDate",someDateProperty.attribute("name").getData());
  final Element someTimeProperty=(Element)classNode.elements("property").get(5);
  assertEquals("someTime",someTimeProperty.attribute("column").getData());
  assertEquals(TimeType.class.getName(),someTimeProperty.attribute("type").getData());
  assertNull("access",someTimeProperty.attribute("access"));
  assertEquals("someTime",someTimeProperty.attribute("name").getData());
  final Element longFieldProperty=(Element)classNode.elements("property").get(6);
  assertEquals("longField",longFieldProperty.attribute("column").getData());
  assertEquals("long",longFieldProperty.attribute("type").getData());
  assertNull("access",longFieldProperty.attribute("access"));
  assertEquals("longField",longFieldProperty.attribute("name").getData());
}
