{
  final ListRepresentation subListRepr=givenSublistActionInvoked(0,1);
  assertThat(subListRepr.getValue().size(),is(1));
  LinkRepresentation firstEntityLink=subListRepr.getValue().arrayGet(0).asLink();
  final JsonRepresentation containsAction=Util.givenAction(client,"ActionsEntities","contains");
  final ObjectActionRepresentation containsActionRepr=containsAction.as(ObjectActionRepresentation.class);
  final LinkRepresentation invokeLink=containsActionRepr.getInvoke();
  final JsonRepresentation args=invokeLink.getArguments();
  assertThat(args.size(),is(3));
  args.mapPut("searchFor.value",firstEntityLink);
  args.mapPut("from.value",0);
  args.mapPut("to.value",3);
  RestfulResponse<ActionResultRepresentation> restfulResponse=client.followT(invokeLink,args);
  thenResponseIsScalarValueOf(restfulResponse,true);
  args.mapPut("searchFor.value",firstEntityLink);
  args.mapPut("from.value",3);
  args.mapPut("to.values",5);
  restfulResponse=client.followT(invokeLink,args);
  thenResponseIsScalarValueOf(restfulResponse,false);
}
