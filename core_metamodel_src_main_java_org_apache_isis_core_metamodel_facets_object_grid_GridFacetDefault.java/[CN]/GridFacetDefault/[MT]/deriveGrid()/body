{
  final BS3Grid bs3Grid=new BS3Grid();
  bs3Grid.setDomainClass(getSpecification().getCorrespondingClass());
  final BS3Row headerRow=new BS3Row();
  bs3Grid.getRows().add(headerRow);
  final BS3Col headerRowCol=new BS3Col();
  headerRowCol.setSpan(12);
  headerRowCol.setUnreferencedActions(true);
  headerRowCol.setDomainObject(new DomainObjectLayoutData());
  headerRow.getCols().add(headerRowCol);
  final BS3Row propsRow=new BS3Row();
  bs3Grid.getRows().add(propsRow);
  final MemberGroupLayoutFacet memberGroupLayoutFacet=getSpecification().getFacet(MemberGroupLayoutFacet.class);
  if (memberGroupLayoutFacet != null) {
    final MemberGroupLayout.ColumnSpans columnSpans=memberGroupLayoutFacet.getColumnSpans();
    addFieldSetsToColumn(propsRow,columnSpans.getLeft(),memberGroupLayoutFacet.getLeft(),true);
    addFieldSetsToColumn(propsRow,columnSpans.getMiddle(),memberGroupLayoutFacet.getMiddle(),false);
    addFieldSetsToColumn(propsRow,columnSpans.getRight(),memberGroupLayoutFacet.getRight(),false);
    final BS3Col col=new BS3Col();
    final int collectionSpan=columnSpans.getCollections();
    col.setUnreferencedCollections(true);
    col.setSpan(collectionSpan > 0 ? collectionSpan : 12);
    propsRow.getCols().add(col);
    final List<OneToManyAssociation> collections=getSpecification().getCollections(Contributed.INCLUDED);
    for (    OneToManyAssociation collection : collections) {
      col.getCollections().add(new CollectionLayoutData(collection.getId()));
    }
  }
 else {
    addFieldSetsToColumn(propsRow,4,Arrays.asList("General"),true);
    final BS3Col col=new BS3Col();
    col.setUnreferencedCollections(true);
    col.setSpan(12);
    propsRow.getCols().add(col);
  }
  return bs3Grid;
}
