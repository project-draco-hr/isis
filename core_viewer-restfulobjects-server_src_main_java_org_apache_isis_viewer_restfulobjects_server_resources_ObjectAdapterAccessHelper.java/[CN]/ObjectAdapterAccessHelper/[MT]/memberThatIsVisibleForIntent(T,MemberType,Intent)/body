{
  final Where where=resourceContext.getWhere();
  final String memberId=objectMember.getId();
  final AuthenticationSession authenticationSession=resourceContext.getAuthenticationSession();
  if (objectMember.isVisible(authenticationSession,objectAdapter,where).isVetoed()) {
    Util.throwNotFoundException(memberId,memberType);
  }
  if (intent.isMutate()) {
    final Consent usable=objectMember.isUsable(authenticationSession,objectAdapter,where);
    if (usable.isVetoed()) {
      throw RestfulObjectsApplicationException.createWithMessage(RestfulResponse.HttpStatusCode.FORBIDDEN,usable.getReason());
    }
  }
  return objectMember;
}
