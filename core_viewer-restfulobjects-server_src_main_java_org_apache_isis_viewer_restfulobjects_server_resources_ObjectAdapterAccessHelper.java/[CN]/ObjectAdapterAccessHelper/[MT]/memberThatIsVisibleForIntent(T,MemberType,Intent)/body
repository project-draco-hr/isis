{
  final Where where=rendererContext.getWhere();
  final String memberId=objectMember.getId();
  final Consent visibilityConsent=objectMember.isVisible(objectAdapter,InteractionInitiatedBy.USER,where);
  if (visibilityConsent.isVetoed()) {
    throwNotFoundException(memberId,memberType);
  }
  if (intent.isMutate()) {
    final Consent usabilityConsent=objectMember.isUsable(objectAdapter,InteractionInitiatedBy.USER,where);
    if (usabilityConsent.isVetoed()) {
      throw RestfulObjectsApplicationException.createWithMessage(RestfulResponse.HttpStatusCode.FORBIDDEN,usabilityConsent.getReason());
    }
  }
  return objectMember;
}
