{
  transactionManager.executeWithinTransaction(new TransactionalClosure(){
    @Override public void execute(){
      commandContext.setCommand(command);
      try {
        command.setStartedAt(Clock.getTimeAsJavaSqlTimestamp());
        command.setExecutor(Executor.BACKGROUND);
        final String memento=command.getMemento();
        final ActionInvocationMemento aim=new ActionInvocationMemento(mementoService,memento);
        final String actionId=aim.getActionId();
        final Bookmark targetBookmark=aim.getTarget();
        final Object targetObject=bookmarkService.lookup(targetBookmark);
        final ObjectAdapter targetAdapter=adapterFor(targetObject);
        final ObjectSpecification specification=targetAdapter.getSpecification();
        final ObjectAction objectAction=findAction(specification,actionId);
        if (objectAction == null) {
          throw new Exception("Unknown action '" + actionId + "'");
        }
        final ObjectAdapter[] argAdapters=argAdaptersFor(aim);
        final ObjectAdapter resultAdapter=objectAction.execute(targetAdapter,argAdapters,InteractionInitiatedBy.FRAMEWORK);
        if (resultAdapter != null) {
          Bookmark resultBookmark=CommandUtil.bookmarkFor(resultAdapter);
          command.setResult(resultBookmark);
        }
      }
 catch (      Exception e) {
        command.setException(Throwables.getStackTraceAsString(e));
      }
 finally {
        command.setCompletedAt(Clock.getTimeAsJavaSqlTimestamp());
      }
    }
  }
);
}
