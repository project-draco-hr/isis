{
  getViewManager().getSpy().addTrace(this,"mouse location within view",location);
  getViewManager().getSpy().addTrace(this,"view location within parent",getLocation());
  getViewManager().getSpy().addTrace(this,"offset",offset);
  Location locationWithinContent=new Location(location);
  locationWithinContent.translate(offset);
  getViewManager().getSpy().addTrace(this,"mouse location within content area",locationWithinContent);
  View views[]=getSubviews();
  for (int i=views.length - 1; i >= 0; i--) {
    View subview=views[i];
    if (subview.getBounds().contains(locationWithinContent)) {
      getViewManager().getSpy().addTrace(this,"identified subview",subview);
      locationWithinContent.move(-subview.getLocation().getX(),-subview.getLocation().getY());
      getViewManager().getSpy().addTrace(this,"mouse location within subview",locationWithinContent);
      getViewManager().getSpy().addTrace("--> subview: " + subview);
      IdentifiedView identified=subview.identify3(locationWithinContent,new Offset(0,0));
      identified.translate(getLocation());
      getViewManager().getSpy().addTrace("....");
      Padding padding=getView().getPadding();
      getViewManager().getSpy().addTrace(this,"offset by (parent location)",getLocation());
      identified.translate(padding.getLeft(),padding.getTop());
      getViewManager().getSpy().addTrace(this,"offset by (parent padding)",padding);
      return identified;
    }
  }
  getViewManager().getSpy().addTrace("----");
  getViewManager().getSpy().addTrace(this,"mouse location within composite view",location);
  return new IdentifiedView(getView(),location,getLocation());
}
