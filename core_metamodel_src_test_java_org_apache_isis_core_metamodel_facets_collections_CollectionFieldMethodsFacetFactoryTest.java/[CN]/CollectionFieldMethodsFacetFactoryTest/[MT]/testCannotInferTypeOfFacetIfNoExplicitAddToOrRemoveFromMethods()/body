{
  final CollectionAddToRemoveFromAndValidateFacetFactory facetFactory=new CollectionAddToRemoveFromAndValidateFacetFactory();
  facetFactory.setSpecificationLoader(programmableReflector);
  facetFactory.setDeploymentCategory(DeploymentCategory.PRODUCTION);
  facetFactory.setAuthenticationSessionProvider(mockAuthenticationSessionProvider);
@SuppressWarnings("hiding") class Order {
  }
class Customer {
    @SuppressWarnings("unused") public Collection<Order> getOrders(){
      return null;
    }
  }
  final Method collectionAccessorMethod=findMethod(Customer.class,"getOrders");
  facetFactory.process(new ProcessMethodContext(Customer.class,null,null,collectionAccessorMethod,methodRemover,facetedMethod));
  assertNull(facetedMethod.getFacet(TypeOfFacet.class));
}
