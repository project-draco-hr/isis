{
  final CollectionClearFacetFactory facetFactory=new CollectionClearFacetFactory();
  facetFactory.setSpecificationLoader(programmableReflector);
  facetFactory.setDeploymentCategory(DeploymentCategory.PRODUCTION);
  facetFactory.setAuthenticationSessionProvider(mockAuthenticationSessionProvider);
@SuppressWarnings({"hiding","unused"}) class Order {
  }
class Customer {
    @SuppressWarnings({"rawtypes","unused"}) public Collection getOrders(){
      return null;
    }
  }
  final Method collectionAccessorMethod=findMethod(Customer.class,"getOrders");
  facetFactory.process(new ProcessMethodContext(Customer.class,null,null,collectionAccessorMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(CollectionClearFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof CollectionClearFacetViaAccessor);
  final CollectionClearFacetViaAccessor collectionClearFacetViaAccessor=(CollectionClearFacetViaAccessor)facet;
  assertEquals(collectionAccessorMethod,collectionClearFacetViaAccessor.getMethods().get(0));
}
