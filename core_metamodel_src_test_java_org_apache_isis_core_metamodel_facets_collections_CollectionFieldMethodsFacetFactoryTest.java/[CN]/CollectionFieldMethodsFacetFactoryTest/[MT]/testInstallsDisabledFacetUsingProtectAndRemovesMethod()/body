{
  final DisabledFacetStaticMethodFacetFactory facetFactory=new DisabledFacetStaticMethodFacetFactory();
  facetFactory.setServicesInjector(stubServicesInjector);
  final Method collectionAccessorMethod=findMethod(CustomerStatic.class,"getOrders");
  final Method protectMethod=findMethod(CustomerStatic.class,"protectOrders");
  facetFactory.process(new ProcessMethodContext(CustomerStatic.class,null,null,collectionAccessorMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(DisabledFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof DisabledFacetAbstractAlwaysEverywhere);
  final DisabledFacetAbstractAlwaysEverywhere disabledFacetAlways=(DisabledFacetAbstractAlwaysEverywhere)facet;
  assertEquals(When.ALWAYS,disabledFacetAlways.when());
  assertTrue(methodRemover.getRemovedMethodMethodCalls().contains(protectMethod));
}
