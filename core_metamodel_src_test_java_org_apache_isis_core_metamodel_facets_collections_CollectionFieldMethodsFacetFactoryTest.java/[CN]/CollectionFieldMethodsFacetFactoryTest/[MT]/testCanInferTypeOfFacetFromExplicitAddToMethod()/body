{
  final CollectionAddToRemoveFromAndValidateFacetFactory facetFactory=new CollectionAddToRemoveFromAndValidateFacetFactory();
  facetFactory.setServicesInjector(stubServicesInjector);
@SuppressWarnings("hiding") class Order {
  }
class Customer {
    @SuppressWarnings("unused") public Collection<Order> getOrders(){
      return null;
    }
    @SuppressWarnings("unused") public void addToOrders(    final Order o){
    }
  }
  final Method collectionAccessorMethod=findMethod(Customer.class,"getOrders");
  facetFactory.process(new ProcessMethodContext(Customer.class,null,null,collectionAccessorMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(TypeOfFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof TypeOfFacetInferredFromSupportingMethods);
  final TypeOfFacetInferredFromSupportingMethods typeOfFacetInferredFromSupportingMethods=(TypeOfFacetInferredFromSupportingMethods)facet;
  assertEquals(Order.class,typeOfFacetInferredFromSupportingMethods.value());
}
