{
  String childElementOid=nofMeta.getAttribute(childElement,"oid");
  if (childElementOid != null) {
    Vector existingChildElements=elementsUnder(parentElement,childElement.getLocalName());
    for (Enumeration childEnum=existingChildElements.elements(); childEnum.hasMoreElements(); ) {
      Element possibleMatchingElement=(Element)childEnum.nextElement();
      String possibleMatchOid=nofMeta.getAttribute(possibleMatchingElement,"oid");
      if (possibleMatchOid == null || !possibleMatchOid.equals(childElementOid)) {
        continue;
      }
      Element existingChildElement=possibleMatchingElement;
      Vector grandchildrenElements=elementsUnder(childElement,"*");
      for (Enumeration grandchildEnum=grandchildrenElements.elements(); grandchildEnum.hasMoreElements(); ) {
        Element grandchildElement=(Element)grandchildEnum.nextElement();
        childElement.removeChild(grandchildElement);
        mergeTree(existingChildElement,grandchildElement);
      }
      return existingChildElement;
    }
  }
  parentElement.appendChild(childElement);
  return childElement;
}
