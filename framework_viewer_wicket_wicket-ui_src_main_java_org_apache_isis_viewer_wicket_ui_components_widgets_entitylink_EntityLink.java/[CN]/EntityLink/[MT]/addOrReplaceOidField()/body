{
  pendingOid=new TextField<ObjectAdapterMemento>(ID_ENTITY_OID,new Model<ObjectAdapterMemento>(){
    private static final long serialVersionUID=1L;
    @Override public ObjectAdapterMemento getObject(){
      if (hasPending) {
        return pending;
      }
      final ObjectAdapter adapter=EntityLink.this.getModelObject();
      return ObjectAdapterMemento.createOrNull(adapter);
    }
    @Override public void setObject(    final ObjectAdapterMemento adapterMemento){
      pending=adapterMemento;
      hasPending=true;
    }
  }
){
    private static final long serialVersionUID=1L;
    @Override protected void onModelChanged(){
      super.onModelChanged();
      syncWithInput();
    }
  }
;
  pendingOid.setType(ObjectAdapterMemento.class);
  addOrReplace(pendingOid);
  pendingOid.setVisible(false);
}
