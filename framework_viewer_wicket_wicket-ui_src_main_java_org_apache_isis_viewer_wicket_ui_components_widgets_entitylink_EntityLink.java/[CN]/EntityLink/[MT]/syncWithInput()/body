{
  final ObjectAdapter adapter=getPendingElseCurrentAdapter();
  final IModel<List<? extends ObjectAdapterMemento>> choicesMementos=getChoicesModel();
  if (choicesMementos != null) {
    final IModel<ObjectAdapterMemento> modelObject=pendingOid.getModel();
    final DropDownChoicesForObjectAdapterMementos dropDownChoices=new DropDownChoicesForObjectAdapterMementos(ID_CHOICES,modelObject,choicesMementos);
    addOrReplace(dropDownChoices);
    dropDownChoices.setEnabled(getEntityModel().isEditMode());
    permanentlyHide(ID_ENTITY_ICON_AND_TITLE);
    permanentlyHide(ID_ENTITY_TITLE_NULL);
    permanentlyHide(ID_FIND_USING,ID_ENTITY_CLEAR_LINK);
    doSyncWithInputWhenChoices();
  }
 else {
    permanentlyHide(ID_CHOICES);
    syncLinkWithInput(adapter);
    syncEntityTitleNullWithInput(adapter);
    syncEntityClearLinksWithInput(adapter);
  }
  doSyncWithInputOther();
  syncEntityDetailsLinksWithInput(adapter);
  syncEntityDetailsWithInput(adapter);
  syncVisibilityAndUsability();
}
