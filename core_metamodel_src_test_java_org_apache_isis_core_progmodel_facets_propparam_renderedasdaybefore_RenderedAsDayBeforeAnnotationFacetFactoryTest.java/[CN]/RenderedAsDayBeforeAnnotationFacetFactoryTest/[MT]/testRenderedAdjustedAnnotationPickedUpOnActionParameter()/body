{
  final RenderedAsDayBeforeAnnotationOnParameterFacetFactory facetFactory=new RenderedAsDayBeforeAnnotationOnParameterFacetFactory();
class Customer {
    @SuppressWarnings("unused") public void someAction(    @RenderedAsDayBefore @Named("End Date") final LocalDate endDate){
    }
  }
  final Method method=findMethod(Customer.class,"someAction",new Class[]{LocalDate.class});
  facetFactory.processParams(new ProcessParameterContext(method,0,facetedMethodParameter));
  final Facet facet=facetedMethodParameter.getFacet(RenderedAdjustedFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof RenderedAsDayBeforeFacetAnnotationOnParameter);
  final RenderedAsDayBeforeFacetAnnotationOnParameter facetAnnotation=(RenderedAsDayBeforeFacetAnnotationOnParameter)facet;
  assertEquals(-1,facetAnnotation.value());
}
