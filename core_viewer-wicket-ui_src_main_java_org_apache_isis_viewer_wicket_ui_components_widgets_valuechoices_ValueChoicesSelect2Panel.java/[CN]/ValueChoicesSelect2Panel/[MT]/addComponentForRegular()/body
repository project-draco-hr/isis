{
  final IModel<ObjectAdapterMemento> modelObject=ScalarModelWithPending.Util.createModel(this);
  final ObjectAdapter[] actionArgsHint=getScalarModel().getActionArgsHint();
  if (select2Field == null) {
    select2Field=Select2ChoiceUtil.newSelect2Choice(ID_SCALAR_VALUE,modelObject,getScalarModel());
    setChoices(actionArgsHint);
    addStandardSemantics();
  }
 else {
    select2Field.clearInput();
  }
  final MarkupContainer labelIfRegular=createFormComponentLabel();
  if (getModel().isRequired()) {
    labelIfRegular.add(new CssClassAppender("mandatory"));
  }
  addOrReplace(labelIfRegular);
  final Label scalarName=new Label(ID_SCALAR_NAME,getRendering().getLabelCaption(select2Field));
  labelIfRegular.addOrReplace(scalarName);
  NamedFacet namedFacet=getModel().getFacet(NamedFacet.class);
  if (namedFacet != null) {
    scalarName.setEscapeModelStrings(namedFacet.escaped());
  }
  final List<LinkAndLabel> entityActions=EntityActionUtil.getEntityActionLinksForAssociation(this.scalarModel,getDeploymentType());
  addPositioningCssTo(labelIfRegular,entityActions);
  addFeedbackTo(labelIfRegular,select2Field);
  addEntityActionLinksBelowAndRight(labelIfRegular,entityActions);
  return labelIfRegular;
}
