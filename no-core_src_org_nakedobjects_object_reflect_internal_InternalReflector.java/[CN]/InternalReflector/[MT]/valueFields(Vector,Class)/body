{
  Vector v=findPrefixedMethods(OBJECT,GET_PREFIX,type,0);
  Enumeration e=v.elements();
  while (e.hasMoreElements()) {
    Method getMethod=(Method)e.nextElement();
    Class returnType=getMethod.getReturnType();
    String name=getMethod.getName().substring(GET_PREFIX.length());
    Method aboutMethod=findMethod(OBJECT,ABOUT_PREFIX + name,null,new Class[]{InternalAbout.class,returnType});
    if (aboutMethod == null) {
      aboutMethod=defaultAboutFieldMethod;
    }
    Method setMethod=findMethod(OBJECT,SET_PREFIX + name,null,new Class[]{returnType});
    Class[] params=new Class[]{returnType};
    if ((findMethod(OBJECT,SET_PREFIX + name,void.class,params) != null)) {
      LOG.error("The method set" + name + " is not needed for the NakedValue class "+ className());
    }
    if (findMethod(OBJECT,"associate" + name,void.class,params) != null) {
      LOG.error("The method associate" + name + " is not needed for the NakedValue class "+ className());
    }
    LOG.info("Value " + name + " ->"+ getMethod);
    InternalOneToOneAssociation association=new InternalOneToOneAssociation(name,getMethod.getReturnType(),getMethod,setMethod,null,null,aboutMethod);
    fields.addElement(association);
  }
  return fields;
}
