{
  if (alreadyPersistedOrNotPersistableOrServiceOrStandalone(object)) {
    return;
  }
  final List<ObjectAssociation> fields=object.getSpecification().getAssociations();
  if (!object.getSpecification().isEncodeable() && fields.size() > 0) {
    LOG.info("persist " + object);
    CallbackUtils.callCallback(object,PersistingCallbackFacet.class);
    toPersistObjectSet.remapAsPersistent(object);
    for (int i=0; i < fields.size(); i++) {
      final ObjectAssociation field=fields.get(i);
      if (field.isNotPersisted()) {
        continue;
      }
 else       if (field.isOneToManyAssociation()) {
        continue;
      }
 else {
        final ObjectAdapter fieldValue=field.get(object);
        if (fieldValue == null) {
          continue;
        }
        makePersistent(fieldValue,toPersistObjectSet);
      }
    }
    for (int i=0; i < fields.size(); i++) {
      final ObjectAssociation field=fields.get(i);
      if (field.isNotPersisted()) {
        continue;
      }
 else       if (field instanceof OneToManyAssociation) {
        final ObjectAdapter collection=field.get(object);
        makeCollectionPersistent(collection,toPersistObjectSet);
      }
 else {
        continue;
      }
    }
    toPersistObjectSet.addPersistedObject(object);
    CallbackUtils.callCallback(object,PersistedCallbackFacet.class);
  }
}
