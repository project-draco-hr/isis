{
  if (field == null) {
    super.resolve(parent);
    return;
  }
  final ObjectAdapter adapter=getRuntimeContext().getAdapterFor(parent);
  final ResolveState resolveState=adapter.getResolveState();
  if (!resolveState.isResolvable(ResolveState.RESOLVING)) {
    return;
  }
  if (Hibernate.isInitialized(field)) {
    return;
  }
  getTransactionManager().startTransaction();
  try {
    final Session session=HibernateUtil.getCurrentSession();
    if (field instanceof org.hibernate.collection.PersistentCollection) {
      session.lock(parent,org.hibernate.LockMode.NONE);
      Hibernate.initialize(field);
    }
 else {
      final LazyInitializer lazy=((HibernateProxy)field).getHibernateLazyInitializer();
      lazy.setSession((SessionImplementor)session);
      lazy.initialize();
    }
  }
 catch (  final RuntimeException e) {
    getTransactionManager().abortTransaction();
    throw e;
  }
  getTransactionManager().endTransaction();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Container resolved field of type " + field.getClass() + " for parent "+ parent+ ", state="+ resolveState);
  }
}
