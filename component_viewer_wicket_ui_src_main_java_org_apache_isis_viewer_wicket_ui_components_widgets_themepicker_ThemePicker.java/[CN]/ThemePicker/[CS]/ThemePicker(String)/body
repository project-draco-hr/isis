{
  super(id);
  ListView<String> themesView=new ListView<String>("themes",getThemeNames()){
    @Override protected void populateItem(    ListItem<String> item){
      final String themeName=item.getModelObject();
      if (themeName.equals(getActiveThemeProvider().getActiveTheme().name())) {
        item.add(AttributeModifier.append("class","active"));
      }
      item.add(new AjaxLink<Void>("themeLink"){
        @Override public void onClick(        AjaxRequestTarget target){
          IBootstrapSettings bootstrapSettings=Bootstrap.getSettings();
          ITheme theme=getTheme(themeName);
          getActiveThemeProvider().setActiveTheme(theme);
          if (theme instanceof BootstrapThemeTheme) {
            bootstrapSettings.setThemeProvider(new SingleThemeProvider(theme));
          }
 else           if (theme instanceof BootswatchTheme) {
            bootstrapSettings.setThemeProvider(new BootswatchThemeProvider((BootswatchTheme)theme));
          }
 else           if (theme instanceof VegibitTheme) {
            bootstrapSettings.setThemeProvider(new VegibitThemeProvider((VegibitTheme)theme));
          }
          target.add(getPage());
        }
      }
.setBody(Model.of(themeName)));
    }
  }
;
  add(themesView);
}
