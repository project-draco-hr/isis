{
  withLogging(pojo,new Runnable(){
    @Override public void run(){
      final Version datastoreVersion=getVersionIfAny(pojo);
      final RootOid oid;
      ObjectAdapter adapter=getAdapterManager().getAdapterFor(pojo);
      if (adapter != null) {
        ensureRootObject(pojo);
        oid=(RootOid)adapter.getOid();
        final Version previousVersion=adapter.getVersion();
        getPersistenceSession().remapRecreatedPojo(adapter,pojo);
        if (previousVersion != null && datastoreVersion != null) {
          if (previousVersion.different(datastoreVersion)) {
            getCurrentTransaction().addException(new ConcurrencyException(getAuthenticationSession().getUserName(),oid,previousVersion,datastoreVersion));
          }
        }
      }
 else {
        final OidGenerator oidGenerator=getOidGenerator();
        oid=oidGenerator.createPersistent(pojo,null);
        adapter=getAdapterManager().getAdapterFor(oid);
        if (adapter != null) {
          getPersistenceSession().remapRecreatedPojo(adapter,pojo);
        }
 else {
          adapter=getPersistenceSession().mapRecreatedPojo(oid,pojo);
        }
      }
      if (!adapter.isResolved()) {
        PersistorUtil.startResolving(adapter);
        PersistorUtil.toEndState(adapter);
      }
      adapter.setVersion(datastoreVersion);
      ensureFrameworksInAgreement(pojo);
    }
  }
,calledFrom);
}
