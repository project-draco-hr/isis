{
  mockery.checking(new Expectations(){
{
      allowing(mockContext).getPersistenceState(with(any(Employee.class)));
      will(returnValue(persistentState));
    }
  }
);
  mockery.checking(new Expectations(){
{
      allowing(mockContext).getPersistenceState(with(any(String.class)));
      will(returnValue(PersistenceState.STANDALONE));
      allowing(mockContext).getAuthenticationSession();
      will(returnValue(mockAuthenticationSession));
    }
  }
);
  metaModel=new IsisMetaModel(mockContext,employeeRepository,claimRepository);
  metaModel.init();
  wrapperFactory=metaModel.getWrapperFactory();
  employeeWO=wrapperFactory.wrap(employeeDO);
}
