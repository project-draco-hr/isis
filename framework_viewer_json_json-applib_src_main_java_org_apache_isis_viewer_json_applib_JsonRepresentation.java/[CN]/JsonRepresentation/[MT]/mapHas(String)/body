{
  if (!isMap()) {
    throw new IllegalStateException("does not represent map");
  }
  ObjectNode node=asObjectNode();
  final String[] paths=key.split("\\.");
  for (int i=0; i < paths.length; i++) {
    final String path=paths[i];
    final boolean has=node.has(path);
    if (!has) {
      return false;
    }
    if (i + 1 < paths.length) {
      final JsonNode subNode=node.get(path);
      if (!subNode.isObject()) {
        return false;
      }
      node=(ObjectNode)subNode;
    }
  }
  return true;
}
