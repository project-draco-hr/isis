{
  Function<JsonNode,?> transformer=REPRESENTATION_INSTANTIATORS.get(representationType);
  if (transformer == null) {
    transformer=new Function<JsonNode,T>(){
      @Override public T apply(      final JsonNode input){
        try {
          final Constructor<T> constructor=representationType.getConstructor(JsonNode.class);
          return constructor.newInstance(input);
        }
 catch (        final Exception e) {
          throw new IllegalArgumentException("Conversions from JsonNode to " + representationType + " are not supported");
        }
      }
    }
;
    REPRESENTATION_INSTANTIATORS.put(representationType,transformer);
  }
  return transformer;
}
