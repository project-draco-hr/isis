{
  debugBuilder.appendln((count + 1) + "." + objectAction.getId()+ " ("+ objectAction.getClass().getName()+ ")");
  debugBuilder.indent();
  final int newIndent=indent + 4;
  try {
    final List<ObjectAction> debActions=objectAction.getActions();
    if (debActions.size() > 0) {
      for (int i=0; i < debActions.size(); i++) {
        actionDetails(debActions.get(i),newIndent,i,debugBuilder);
      }
    }
 else {
      if (objectAction.getDescription() != null && !objectAction.getDescription().equals("")) {
        debugBuilder.appendln("Description",objectAction.getDescription());
      }
      debugBuilder.appendln("ID",objectAction.getId());
      debugBuilder.appendln(objectAction.debugData());
      debugBuilder.appendln("Target",objectAction.getTarget());
      debugBuilder.appendln("On type",objectAction.getOnType());
      final Class<? extends Facet>[] facets=objectAction.getFacetTypes();
      if (facets.length > 0) {
        debugBuilder.appendln("Facets");
        debugBuilder.indent();
        for (int j=0; j < facets.length; j++) {
          debugBuilder.appendln(objectAction.getFacet(facets[j]).toString());
        }
        debugBuilder.unindent();
      }
      final ObjectSpecification returnType=objectAction.getReturnType();
      debugBuilder.appendln("Returns",returnType == null ? "VOID" : returnType.toString());
      final List<ObjectActionParameter> parameters=objectAction.getParameters();
      if (parameters.size() == 0) {
        debugBuilder.appendln("Parameters","none");
      }
 else {
        debugBuilder.appendln("Parameters");
        debugBuilder.indent();
        final List<ObjectActionParameter> p=objectAction.getParameters();
        for (int j=0; j < parameters.size(); j++) {
          debugBuilder.append(p.get(j).getName());
          debugBuilder.append(" (");
          debugBuilder.append(parameters.get(j).getSpecification().getFullIdentifier());
          debugBuilder.appendln(")");
          debugBuilder.indent();
          final Class<? extends Facet>[] parameterFacets=p.get(j).getFacetTypes();
          for (int i=0; i < parameterFacets.length; i++) {
            debugBuilder.appendln(p.get(j).getFacet(parameterFacets[i]).toString());
          }
          debugBuilder.unindent();
        }
        debugBuilder.unindent();
      }
    }
  }
 catch (  final RuntimeException e) {
    debugBuilder.appendException(e);
  }
  debugBuilder.unindent();
}
