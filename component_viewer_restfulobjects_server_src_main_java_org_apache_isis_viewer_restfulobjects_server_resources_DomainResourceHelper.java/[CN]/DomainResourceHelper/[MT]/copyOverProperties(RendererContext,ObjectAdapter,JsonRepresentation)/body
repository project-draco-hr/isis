{
  final ObjectSpecification objectSpec=objectAdapter.getSpecification();
  final List<ObjectAssociation> properties=objectSpec.getAssociations(ObjectAssociationFilters.PROPERTIES);
  boolean allOk=true;
  for (  final ObjectAssociation association : properties) {
    final OneToOneAssociation property=(OneToOneAssociation)association;
    final ObjectSpecification propertySpec=property.getSpecification();
    final String id=property.getId();
    final JsonRepresentation propertyRepr=propertiesList.getRepresentation(id);
    if (propertyRepr == null) {
      if (property.isMandatory()) {
        throw new IllegalArgumentException(String.format("Mandatory field %s missing",property.getName()));
      }
      continue;
    }
    final Consent usable=property.isUsable(resourceContext.getAuthenticationSession(),objectAdapter,resourceContext.getWhere());
    if (usable.isVetoed()) {
      propertyRepr.mapPut("invalidReason",usable.getReason());
      allOk=false;
      continue;
    }
    final ObjectAdapter valueAdapter;
    try {
      valueAdapter=objectAdapterFor(resourceContext,propertySpec,propertyRepr);
    }
 catch (    IllegalArgumentException ex) {
      propertyRepr.mapPut("invalidReason",ex.getMessage());
      allOk=false;
      continue;
    }
    final Consent consent=property.isAssociationValid(objectAdapter,valueAdapter);
    if (consent.isAllowed()) {
      try {
        property.set(objectAdapter,valueAdapter);
      }
 catch (      final IllegalArgumentException ex) {
        propertyRepr.mapPut("invalidReason",ex.getMessage());
        allOk=false;
      }
    }
 else {
      propertyRepr.mapPut("invalidReason",consent.getReason());
      allOk=false;
    }
  }
  return allOk;
}
