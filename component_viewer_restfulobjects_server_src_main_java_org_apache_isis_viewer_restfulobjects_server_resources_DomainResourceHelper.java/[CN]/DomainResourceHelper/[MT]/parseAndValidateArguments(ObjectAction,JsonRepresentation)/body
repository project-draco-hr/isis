{
  final List<JsonRepresentation> argList=argListFor(action,arguments);
  final List<ObjectAdapter> argAdapters=Lists.newArrayList();
  final List<ObjectActionParameter> parameters=action.getParameters();
  final StringBuilder invalidReasonBuf=new StringBuilder();
  for (int i=0; i < argList.size(); i++) {
    final JsonRepresentation argRepr=argList.get(i);
    final ObjectSpecification paramSpec=parameters.get(i).getSpecification();
    try {
      final ObjectAdapter argAdapter=objectAdapterFor(resourceContext,paramSpec,argRepr);
      argAdapters.add(argAdapter);
      final ObjectActionParameter parameter=parameters.get(i);
      if (argAdapter == null) {
        continue;
      }
      if (argAdapter.getSpecification().containsFacet(ValueFacet.class)) {
        final Object argPojo=argAdapter.getObject();
        final String reasonNotValid=parameter.isValid(objectAdapter,argPojo,null);
        if (reasonNotValid != null) {
          argRepr.mapPut("invalidReason",reasonNotValid);
          appendReasonTo(invalidReasonBuf,"Validation failed, see body for details");
        }
      }
    }
 catch (    final IllegalArgumentException e) {
      String reason=e.getMessage();
      appendReasonTo(invalidReasonBuf,reason);
    }
  }
  final ObjectAdapter[] argArray=argAdapters.toArray(new ObjectAdapter[0]);
  final Consent consent=action.isProposedArgumentSetValid(objectAdapter,argArray);
  if (consent.isVetoed()) {
    arguments.mapPut("x-ro-invalidReason",consent.getReason());
    appendReasonTo(invalidReasonBuf,"Validation failed, see body for details");
  }
  if (invalidReasonBuf.length() > 0) {
    throw RestfulObjectsApplicationException.createWithBody(HttpStatusCode.VALIDATION_FAILED,arguments,invalidReasonBuf.toString());
  }
  return argAdapters;
}
