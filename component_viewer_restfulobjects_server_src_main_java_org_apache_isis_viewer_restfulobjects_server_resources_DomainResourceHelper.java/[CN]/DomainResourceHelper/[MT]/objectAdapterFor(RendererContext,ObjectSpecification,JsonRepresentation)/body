{
  if (argRepr == null) {
    return null;
  }
  if (objectSpec.isEncodeable()) {
    try {
      return JsonValueEncoder.asAdapter(objectSpec,argRepr);
    }
 catch (    IllegalArgumentException ex) {
      throw ex;
    }
catch (    Exception ex) {
      StringBuilder buf=new StringBuilder("Failed to parse representation ");
      try {
        final String reprStr=argRepr.getString("value");
        buf.append("'").append(reprStr).append("' ");
      }
 catch (      Exception ex2) {
      }
      buf.append("as value of type '").append(objectSpec.getShortIdentifier()).append("'");
      String reason=buf.toString();
      argRepr.mapPut("invalidReason",reason);
      throw new IllegalArgumentException(reason);
    }
  }
  final JsonRepresentation argValueRepr=argRepr.getRepresentation("value");
  if (argValueRepr == null) {
    String reason="No 'value' key";
    argRepr.mapPut("invalidReason",reason);
    throw new IllegalArgumentException(reason);
  }
  if (!argValueRepr.isLink()) {
    final String reason="Expected a link (because this object's type is not a value) but found no 'href'";
    argRepr.mapPut("invalidReason",reason);
    throw new IllegalArgumentException(reason);
  }
  final String oidFromHref=UrlParserUtils.encodedOidFromLink(argValueRepr);
  if (oidFromHref == null) {
    final String reason="Could not parse 'href' to identify the object's OID";
    argRepr.mapPut("invalidReason",reason);
    throw new IllegalArgumentException(reason);
  }
  final ObjectAdapter objectAdapter=OidUtils.getObjectAdapterElseNull(resourceContext,oidFromHref);
  if (objectAdapter == null) {
    final String reason="'href' does not reference a known entity";
    argRepr.mapPut("invalidReason",reason);
    throw new IllegalArgumentException(reason);
  }
  return objectAdapter;
}
