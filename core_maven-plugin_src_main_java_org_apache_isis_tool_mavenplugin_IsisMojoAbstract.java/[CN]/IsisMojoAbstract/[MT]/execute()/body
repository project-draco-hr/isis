{
  final ContextForMojo context=new ContextForMojo(mavenProject,getLog());
  final Plugin plugin=MavenProjects.lookupPlugin(mavenProject,CURRENT_PLUGIN_KEY);
  final AppManifest manifest=InstanceUtil.createInstance(this.appManifest,AppManifest.class);
  final IsisSessionFactoryBuilder isisSessionFactoryBuilder=new IsisSessionFactoryBuilder(manifest);
  IsisSessionFactory isisSessionFactory=null;
  try {
    isisSessionFactory=isisSessionFactoryBuilder.buildSessionFactory();
    if (!isisSessionFactoryBuilder.isMetaModelValid()) {
      MetaModelInvalidException metaModelInvalidException=IsisContext.getMetaModelInvalidExceptionIfAny();
      Set<String> validationErrors=metaModelInvalidException.getValidationErrors();
      context.throwFailureException(validationErrors.size() + " meta-model problems found.",validationErrors);
      return;
    }
    final IsisSessionFactory isisSessionFactoryFinal=isisSessionFactory;
    isisSessionFactory.doInSession(new Runnable(){
      @Override public void run(){
        try {
          doExecute(context,isisSessionFactoryFinal);
        }
 catch (        IOException e) {
          ;
        }
catch (        MojoFailureException e) {
          throw new RuntimeException(e);
        }
      }
    }
);
  }
 catch (  RuntimeException e) {
    if (e.getCause() instanceof MojoFailureException) {
      throw (MojoFailureException)e.getCause();
    }
    throw e;
  }
 finally {
    if (isisSessionFactory != null) {
      isisSessionFactory.destroyServicesAndShutdown();
    }
  }
}
