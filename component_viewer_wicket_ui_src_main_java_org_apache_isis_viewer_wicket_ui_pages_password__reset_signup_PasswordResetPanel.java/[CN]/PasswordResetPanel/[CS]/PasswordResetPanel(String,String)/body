{
  super(id);
  addOrReplace(new NotificationPanel("feedback"));
  StatelessForm<Void> form=new StatelessForm<>("passwordResetForm");
  addOrReplace(form);
  final PasswordTextField passwordField=new PasswordTextField("password",Model.of(""));
  passwordField.setLabel(new ResourceModel("passwordLabel"));
  form.add(passwordField);
  final PasswordTextField confirmPasswordField=new PasswordTextField("confirmPassword",Model.of(""));
  confirmPasswordField.setLabel(new ResourceModel("confirmPasswordLabel"));
  form.add(confirmPasswordField);
  form.add(new EqualPasswordInputValidator(passwordField,confirmPasswordField));
  Button signUpButton=new Button("passwordResetSubmit"){
    @Override public void onSubmit(){
      super.onSubmit();
      String email=confirmPasswordField.getModelObject();
      String confirmationUrl=createUrl(email);
      boolean emailSent=emailService.send(new EmailRegistrationEvent(email,confirmationUrl));
      if (emailSent) {
        Map<String,String> map=new HashMap<>();
        map.put("email",email);
        IModel<Map<String,String>> model=Model.ofMap(map);
        String emailSentMessage=getString("emailSentMessage",model);
        success(emailSentMessage);
      }
    }
  }
;
  form.add(signUpButton);
}
