{
  final Method getMethod=processMethodContext.getMethod();
  final String capitalizedName=NameUtils.javaBaseName(getMethod.getName());
  Class<?> cls=processMethodContext.getCls();
  final Class<?>[] paramTypes=MethodFinderUtils.paramTypesOrNull(collectionType);
  Method validateRemoveFromMethod=MethodFinderUtils.findMethod(cls,MethodScope.OBJECT,MethodPrefixConstants.VALIDATE_REMOVE_FROM_PREFIX + capitalizedName,String.class,paramTypes);
  if (validateRemoveFromMethod == null) {
    validateRemoveFromMethod=MethodFinderUtils.findMethod(cls,MethodScope.OBJECT,MethodPrefixConstants.VALIDATE_REMOVE_FROM_PREFIX_2 + capitalizedName,String.class,MethodFinderUtils.paramTypesOrNull(collectionType));
  }
  if (validateRemoveFromMethod == null) {
    return;
  }
  processMethodContext.removeMethod(validateRemoveFromMethod);
  final FacetHolder collection=processMethodContext.getFacetHolder();
  FacetUtil.addFacet(new CollectionValidateRemoveFromFacetViaMethod(validateRemoveFromMethod,collection));
}
