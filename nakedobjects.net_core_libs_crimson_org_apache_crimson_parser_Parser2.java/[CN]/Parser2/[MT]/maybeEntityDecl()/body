{
  InputEntity start=peekDeclaration("!ENTITY");
  if (start == null)   return false;
  String entityName;
  SimpleHashtable defns;
  ExternalEntity externalId;
  boolean doStore;
  doLexicalPE=false;
  whitespace("F-005");
  if (in.peekc('%')) {
    whitespace("F-006");
    defns=params;
  }
 else   defns=entities;
  ungetc();
  doLexicalPE=true;
  entityName=getMarkupDeclname("F-017",false);
  whitespace("F-007");
  externalId=maybeExternalID();
  doStore=(defns.get(entityName) == null);
  if (!doStore && defns == entities)   warning("P-054",new Object[]{entityName});
  doStore&=!ignoreDeclarations;
  if (externalId == null) {
    char value[];
    InternalEntity entity;
    doLexicalPE=false;
    parseLiteral(true);
    doLexicalPE=true;
    if (doStore) {
      value=new char[strTmp.length()];
      if (value.length != 0)       strTmp.getChars(0,value.length,value,0);
      entity=new InternalEntity(entityName,value);
      entity.isPE=(defns == params);
      entity.isFromInternalSubset=!inExternalPE;
      defns.put(entityName,entity);
      if (defns == params) {
        entityName="%" + entityName;
      }
      declHandler.internalEntityDecl(entityName,new String(value));
    }
  }
 else {
    if (defns == entities && maybeWhitespace() && peek("NDATA")) {
      externalId.notation=getMarkupDeclname("F-018",false);
      if (supportValidation && isValidating && notations.get(externalId.notation) == null)       notations.put(externalId.notation,Boolean.TRUE);
    }
    externalId.name=entityName;
    externalId.isPE=(defns == params);
    externalId.isFromInternalSubset=!inExternalPE;
    if (doStore) {
      defns.put(entityName,externalId);
      if (externalId.notation != null) {
        dtdHandler.unparsedEntityDecl(entityName,externalId.publicId,externalId.systemId,externalId.notation);
      }
 else {
        if (defns == params) {
          entityName="%" + entityName;
        }
        declHandler.externalEntityDecl(entityName,externalId.publicId,externalId.systemId);
      }
    }
  }
  maybeWhitespace();
  nextChar('>',"F-031",entityName);
  if (supportValidation && isValidating && start != in)   error("V-013",null);
  return true;
}
