{
  final DisabledFacetViaProtectMethodFacetFactory facetFactory=new DisabledFacetViaProtectMethodFacetFactory();
  facetFactory.setSpecificationLookup(reflector);
  reflector.setLoadSpecificationStringReturn(voidSpec);
  final Method actionMethod=findMethod(CustomerStatic.class,"someAction",new Class[]{int.class,Long.class});
  final Method protectMethod=findMethod(CustomerStatic.class,"protectSomeAction",new Class[]{});
  facetFactory.process(new ProcessMethodContext(CustomerStatic.class,actionMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(DisabledFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof DisabledFacetAbstract);
  final DisabledFacetAbstract disabledFacetAbstract=(DisabledFacetAbstract)facet;
  assertEquals(When.ALWAYS,disabledFacetAbstract.value());
  assertTrue(methodRemover.getRemovedMethodMethodCalls().contains(protectMethod));
}
