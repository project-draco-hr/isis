{
  final Class<? extends Facet> facetType=facet.facetType();
  if (facetType == ActionInvocationFacet.class) {
    final ActionInvocationFacet decoratedFacet=(ActionInvocationFacet)facet;
    final Facet decoratingFacet=new ActionInvocationFacetWrapTransaction(decoratedFacet);
    requiredHolder.addFacet(decoratingFacet);
    return decoratingFacet;
  }
  if (facetType == CollectionAddToFacet.class) {
    final CollectionAddToFacet decoratedFacet=(CollectionAddToFacet)facet;
    final Facet decoratingFacet=new CollectionAddToFacetWrapTransaction(decoratedFacet);
    requiredHolder.addFacet(decoratingFacet);
    return decoratingFacet;
  }
  if (facetType == CollectionClearFacet.class) {
    final CollectionClearFacet decoratedFacet=(CollectionClearFacet)facet;
    final Facet decoratingFacet=new CollectionClearFacetWrapTransaction(decoratedFacet);
    requiredHolder.addFacet(decoratingFacet);
    return decoratingFacet;
  }
  if (facetType == CollectionRemoveFromFacet.class) {
    final CollectionRemoveFromFacet decoratedFacet=(CollectionRemoveFromFacet)facet;
    final Facet decoratingFacet=new CollectionRemoveFromFacetWrapTransaction(decoratedFacet);
    requiredHolder.addFacet(decoratingFacet);
    return decoratingFacet;
  }
  if (facetType == PropertyClearFacet.class) {
    final PropertyClearFacet decoratedFacet=(PropertyClearFacet)facet;
    final Facet decoratingFacet=new PropertyClearFacetWrapTransaction(decoratedFacet);
    requiredHolder.addFacet(decoratingFacet);
    return decoratingFacet;
  }
  if (facetType == PropertySetterFacet.class) {
    final PropertySetterFacet decoratedFacet=(PropertySetterFacet)facet;
    final Facet decoratingFacet=new PropertySetterFacetWrapTransaction(decoratedFacet);
    requiredHolder.addFacet(decoratingFacet);
    return decoratingFacet;
  }
  return facet;
}
