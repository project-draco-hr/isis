{
  final FacetHolder holder=processMethodContext.getFacetHolder();
  Properties properties=processMethodContext.metadataProperties("collectionLayout");
  if (properties == null) {
    properties=processMethodContext.metadataProperties("layout");
  }
  final CollectionLayout collectionLayout=Annotations.getAnnotation(processMethodContext.getMethod(),CollectionLayout.class);
  CssClassFacet cssClassFacet=CssClassFacetOnCollectionFromLayoutProperties.create(properties,holder);
  if (cssClassFacet == null) {
    cssClassFacet=CssClassFacetForCollectionLayoutAnnotation.create(collectionLayout,holder);
  }
  FacetUtil.addFacet(cssClassFacet);
  DescribedAsFacet describedAsFacet=DescribedAsFacetOnCollectionFromLayoutProperties.create(properties,holder);
  if (describedAsFacet == null) {
    describedAsFacet=DescribedAsFacetForCollectionLayoutAnnotation.create(collectionLayout,holder);
  }
  FacetUtil.addFacet(describedAsFacet);
  HiddenFacet hiddenFacet=HiddenFacetOnCollectionFromLayoutProperties.create(properties,holder);
  if (hiddenFacet == null) {
    hiddenFacet=HiddenFacetForCollectionLayoutAnnotation.create(collectionLayout,holder);
  }
  FacetUtil.addFacet(hiddenFacet);
  NamedFacet namedFacet=NamedFacetOnCollectionFromLayoutProperties.create(properties,holder);
  if (namedFacet == null) {
    namedFacet=NamedFacetForCollectionLayoutAnnotation.create(collectionLayout,holder);
  }
  FacetUtil.addFacet(namedFacet);
  PagedFacet pagedFacet=PagedFacetOnCollectionFromLayoutProperties.create(properties,holder);
  if (pagedFacet == null) {
    pagedFacet=PagedFacetForCollectionLayoutAnnotation.create(collectionLayout,holder);
  }
  FacetUtil.addFacet(pagedFacet);
  RenderFacet renderFacet=RenderFacetOnCollectionFromLayoutProperties.create(properties,holder);
  if (renderFacet == null) {
    renderFacet=RenderFacetForCollectionLayoutAnnotation.create(collectionLayout,holder);
  }
  FacetUtil.addFacet(renderFacet);
  SortedByFacet sortedByFacet=SortedByFacetOnCollectionFromLayoutProperties.create(properties,holder);
  if (sortedByFacet == null) {
    sortedByFacet=SortedByFacetForCollectionLayoutAnnotation.create(collectionLayout,holder);
  }
  FacetUtil.addFacet(sortedByFacet);
}
