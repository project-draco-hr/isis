{
  final ObjectSpecification returnType=this.action.getReturnType();
  if (returnType.getCorrespondingClass() == void.class) {
    return ResultType.VOID;
  }
  final CollectionFacet collectionFacet=returnType.getFacet(CollectionFacet.class);
  if (collectionFacet != null) {
    if (returnedAdapter != null) {
      final Collection<ObjectAdapter> collectionAdapters=collectionFacet.collection(returnedAdapter);
      final ListReprRenderer renderer=new ListReprRenderer(rendererContext,null,result);
      renderer.with(collectionAdapters).withReturnType(action.getReturnType()).withElementType(returnedAdapter.getElementSpecification());
      renderer.render();
    }
    return ResultType.LIST;
  }
  final EncodableFacet encodableFacet=returnType.getFacet(EncodableFacet.class);
  if (encodableFacet != null) {
    if (returnedAdapter != null) {
      final ScalarValueReprRenderer renderer=new ScalarValueReprRenderer(rendererContext,null,result);
      renderer.with(returnedAdapter).withReturnType(action.getReturnType());
      renderer.render();
    }
    return ResultType.SCALAR_VALUE;
  }
{
    if (returnedAdapter != null) {
      final DomainObjectReprRenderer renderer=new DomainObjectReprRenderer(rendererContext,null,result);
      renderer.with(returnedAdapter).includesSelf();
      renderer.render();
    }
    return ResultType.DOMAIN_OBJECT;
  }
}
