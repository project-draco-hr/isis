{
  return new SaveObjectCommand(){
    @Override public void execute(    final PersistenceCommandContext context){
      final DatabaseConnector connection=((SqlExecutionContext)context).getConnection();
      LOG.debug("  save object " + object);
      if (object.getSpecification().isCollectionOrIsAggregated()) {
        ObjectAdapter parent=object.getAggregateRoot();
        LOG.debug("change to internal collection being persisted through parent");
        Oid oid=object.getOid();
        if (oid instanceof AggregatedOid) {
          AggregatedOid aoid=(AggregatedOid)oid;
          final ObjectMapping mapping2=objectMappingLookup.getMapping(parent,connection);
          if (mapping2.saveCollection(connection,parent,aoid.getId()) == false) {
            final ObjectMapping mapping=objectMappingLookup.getMapping(parent,connection);
            mapping.save(connection,object);
          }
          connectionPool.release(connection);
        }
 else {
          throw new NotYetImplementedException(object.toString());
        }
      }
 else {
        final ObjectMapping mapping=objectMappingLookup.getMapping(object,connection);
        mapping.save(connection,object);
        connectionPool.release(connection);
      }
    }
    @Override public ObjectAdapter onObject(){
      return object;
    }
    @Override public String toString(){
      return "SaveObjectCommand [object=" + object + "]";
    }
  }
;
}
