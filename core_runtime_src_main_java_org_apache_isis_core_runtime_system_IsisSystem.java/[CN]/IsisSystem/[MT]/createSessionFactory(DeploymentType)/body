{
  final IsisConfigurationDefault configuration=isisComponentProvider.getConfiguration();
  final List<Object> services=isisComponentProvider.provideServices();
  ServicesInjectorSpi servicesInjectorSpi=new ServicesInjectorDefault(services);
  servicesInjectorSpi.addFallbackIfRequired(FixtureScripts.class,new FixtureScriptsDefault());
  servicesInjectorSpi.validateServices();
  final RuntimeContextFromSession runtimeContext=new RuntimeContextFromSession(deploymentType.getDeploymentCategory(),configuration,servicesInjectorSpi);
  final PersistenceSessionFactory persistenceSessionFactory=isisComponentProvider.providePersistenceSessionFactory(deploymentType,servicesInjectorSpi,runtimeContext);
  final AuthenticationManager authenticationManager=isisComponentProvider.provideAuthenticationManager(deploymentType);
  final AuthorizationManager authorizationManager=isisComponentProvider.provideAuthorizationManager(deploymentType);
  final Collection<MetaModelRefiner> metaModelRefiners=refiners(authenticationManager,authorizationManager,persistenceSessionFactory);
  final SpecificationLoaderSpi specificationLoader=isisComponentProvider.provideSpecificationLoaderSpi(metaModelRefiners);
  runtimeContext.injectInto(specificationLoader);
  return new IsisSessionFactory(deploymentType,configuration,specificationLoader,authenticationManager,authorizationManager,persistenceSessionFactory);
}
