{
  ObjectAdapter onAdapter=null;
  try {
    onAdapter=getPeer().validateOnObject();
  }
 catch (  StoryBoundValueException ex) {
    FitnesseUtil.exception(this,ex);
    return;
  }
  String aliasAs=null;
  try {
    aliasAs=getPeer().validateAliasAs();
  }
 catch (  StoryBoundValueException ex) {
    FitnesseUtil.exception(this,ex);
    return;
  }
  Perform performCommand=null;
  try {
    performCommand=getPeer().validatePerform();
  }
 catch (  StoryBoundValueException ex) {
    FitnesseUtil.exception(this,ex);
    return;
  }
  ObjectMember objectMember=null;
  if (performCommand.requiresMember()) {
    try {
      objectMember=getPeer().validateOnMember(onAdapter);
    }
 catch (    StoryBoundValueException ex) {
      FitnesseUtil.exception(this,ex);
      return;
    }
  }
  try {
    List<StoryCell> argumentStoryCells=asValues(argumentCells);
    getPeer().performCommand(onAdapter,aliasAs,objectMember,performCommand,argumentStoryCells);
  }
 catch (  StoryBoundValueException ex) {
    FitnesseUtil.exception(this,ex);
    return;
  }
  rightMemberElseOnObjectCell();
}
