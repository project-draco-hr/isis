{
  LOG.debug("execute client action for " + session);
  LOG.debug("start transaction");
  NakedObjectPersistor persistor=persistor();
  persistor.startTransaction();
  try {
    KnownTransients knownObjects=ObjectDecoder.createKnownTransients();
    NakedObject[] persistedObjects=new NakedObject[persisted.length];
    for (int i=0; i < persisted.length; i++) {
      NakedObject object=(NakedObject)ObjectDecoder.restore(persisted[i],knownObjects);
      persistedObjects[i]=object;
      if (object.getOid() == null) {
        LOG.debug("  makePersistent " + persisted[i]);
        persistor.makePersistent(object);
      }
    }
    NakedObject[] changedObjects=new NakedObject[changed.length];
    for (int i=0; i < changed.length; i++) {
      LOG.debug("  objectChanged " + changed[i]);
      NakedObject object=(NakedObject)ObjectDecoder.restore(changed[i],knownObjects);
      persistor.objectChanged(object);
      changedObjects[i]=object;
    }
    for (int i=0; i < deleted.length; i++) {
      LOG.debug("  destroyObject " + deleted[i] + " for "+ session);
      NakedObject inObject=getPersistentNakedObject(session,(IdentityData)deleted[i]);
      persistor.destroyObject(inObject);
    }
    LOG.debug("  end transaction");
    persistor.endTransaction();
    ObjectData[] madePersistent=new ObjectData[persisted.length];
    for (int i=0; i < persisted.length; i++) {
      madePersistent[i]=encoder.createMadePersistentGraph(persisted[i],persistedObjects[i],updateNotifier);
    }
    Version[] changedVersion=new Version[changed.length];
    for (int i=0; i < changed.length; i++) {
      changedVersion[i]=changedObjects[i].getVersion();
    }
    return encoder.createClientActionResult(madePersistent,changedVersion);
  }
 catch (  RuntimeException e) {
    LOG.info("abort transaction",e);
    persistor.abortTransaction();
    throw e;
  }
}
