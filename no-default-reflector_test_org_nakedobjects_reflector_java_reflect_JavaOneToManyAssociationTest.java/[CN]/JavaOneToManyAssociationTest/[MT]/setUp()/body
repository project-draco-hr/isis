{
  Logger.getRootLogger().setLevel(Level.OFF);
  system=new TestSystem();
  system.addSpecification(new DummyNakedObjectSpecification(JavaObjectWithVector.class.getName()));
  system.addSpecification(new DummyNakedObjectSpecification(JavaReferencedObject.class.getName()));
  system.addSpecification(new DummyNakedObjectSpecification(InternalCollection.class.getName()));
  system.init();
  objectWithVector=new JavaObjectWithVector();
  nakedObject=system.createAdapterForTransient(objectWithVector);
  elements=new JavaReferencedObject[3];
  for (int i=0; i < elements.length; i++) {
    elements[i]=new JavaReferencedObject();
  }
  Class cls=JavaObjectWithVector.class;
  Method get=cls.getDeclaredMethod("getMethod",new Class[0]);
  Method add=cls.getDeclaredMethod("addToMethod",new Class[]{JavaReferencedObject.class});
  Method remove=cls.getDeclaredMethod("removeFromMethod",new Class[]{JavaReferencedObject.class});
  collectionField=new JavaOneToManyAssociation(MEMBERS_FIELD_NAME,InternalCollection.class,get,add,remove,null);
}
