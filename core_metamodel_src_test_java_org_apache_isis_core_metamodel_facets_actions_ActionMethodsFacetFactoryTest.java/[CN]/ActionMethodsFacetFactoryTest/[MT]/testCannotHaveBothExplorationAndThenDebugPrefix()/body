{
  final ActionNamedDebugExplorationFacetFactory facetFactory=new ActionNamedDebugExplorationFacetFactory();
  facetFactory.setSpecificationLookup(programmableReflector);
  programmableReflector.setLoadSpecificationStringReturn(voidSpec);
class Customer {
    @SuppressWarnings("unused") public void explorationDebugAnActionWithExplorationAndDebugPrefix(){
    }
  }
  final Method method=findMethod(Customer.class,"explorationDebugAnActionWithExplorationAndDebugPrefix");
  facetFactory.process(new ProcessMethodContext(Customer.class,null,null,method,methodRemover,facetedMethod));
  Facet facet=facetedMethod.getFacet(ExplorationFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof ExplorationFacet);
  facet=facetedMethod.getFacet(DebugFacet.class);
  assertNull(facet);
}
