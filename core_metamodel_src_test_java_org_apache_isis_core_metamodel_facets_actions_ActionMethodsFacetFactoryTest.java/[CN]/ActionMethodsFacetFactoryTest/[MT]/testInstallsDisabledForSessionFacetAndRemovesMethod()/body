{
  final DisableForSessionFacetViaMethodFactory facetFactory=new DisableForSessionFacetViaMethodFactory();
  facetFactory.setSpecificationLoader(mockSpecificationLoader);
  facetFactory.setServicesInjector(mockServicesInjector);
  allowing_specificationLoader_loadSpecification_any_willReturn(this.voidSpec);
  final Method actionMethod=findMethod(CustomerStatic.class,"someAction",new Class[]{int.class,Long.class});
  final Method disableMethod=findMethod(CustomerStatic.class,"disableSomeAction",new Class[]{UserMemento.class});
  facetFactory.process(new ProcessMethodContext(CustomerStatic.class,null,null,actionMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(DisableForSessionFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof DisableForSessionFacetViaMethod);
  final DisableForSessionFacetViaMethod disableForSessionFacetViaMethod=(DisableForSessionFacetViaMethod)facet;
  assertEquals(disableMethod,disableForSessionFacetViaMethod.getMethods().get(0));
  assertTrue(methodRemover.getRemovedMethodMethodCalls().contains(disableMethod));
}
