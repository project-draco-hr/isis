{
  final ActionValidationFacetViaMethodFactory facetFactory=new ActionValidationFacetViaMethodFactory();
  facetFactory.setSpecificationLookup(reflector);
  reflector.setLoadSpecificationStringReturn(voidSpec);
class Customer {
    @SuppressWarnings("unused") public void someAction(){
    }
    @SuppressWarnings("unused") public String validateSomeAction(){
      return null;
    }
  }
  final Method actionMethod=findMethod(Customer.class,"someAction");
  final Method validateMethod=findMethod(Customer.class,"validateSomeAction");
  facetFactory.process(new ProcessMethodContext(Customer.class,null,null,actionMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(ActionValidationFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof ActionValidationFacetViaMethod);
  final ActionValidationFacetViaMethod actionValidationFacetViaMethod=(ActionValidationFacetViaMethod)facet;
  assertEquals(validateMethod,actionValidationFacetViaMethod.getMethods().get(0));
  assertTrue(methodRemover.getRemovedMethodMethodCalls().contains(validateMethod));
}
