{
  final ActionNamedDebugExplorationFacetFactory facetFactory=new ActionNamedDebugExplorationFacetFactory();
  facetFactory.setSpecificationLookup(reflector);
  reflector.setLoadSpecificationStringReturn(voidSpec);
class Customer {
    @SuppressWarnings("unused") public void someAction(){
    }
  }
  final Method actionMethod=findMethod(Customer.class,"someAction");
  facetFactory.process(new ProcessMethodContext(Customer.class,null,null,actionMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(ActionInvocationFacet.class);
  final ActionInvocationFacetForInteractionAbstract actionInvocationFacetViaMethod=(ActionInvocationFacetForInteractionAbstract)facet;
  assertEquals(voidSpec,actionInvocationFacetViaMethod.getReturnType());
}
