{
  final ActionNamedDebugExplorationFacetFactory facetFactory=new ActionNamedDebugExplorationFacetFactory();
  injectServicesIntoAndAllowingServiceInjectorLookups(facetFactory);
  programmableReflector.setLoadSpecificationStringReturn(voidSpec);
class Customer {
    @SuppressWarnings("unused") public void debugExplorationAnActionWithDebugAndExplorationPrefix(){
    }
  }
  final Method method=findMethod(Customer.class,"debugExplorationAnActionWithDebugAndExplorationPrefix");
  facetFactory.process(new ProcessMethodContext(Customer.class,null,null,method,methodRemover,facetedMethod));
  Facet facet=facetedMethod.getFacet(DebugFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof DebugFacet);
  facet=facetedMethod.getFacet(ExplorationFacet.class);
  assertNull(facet);
}
