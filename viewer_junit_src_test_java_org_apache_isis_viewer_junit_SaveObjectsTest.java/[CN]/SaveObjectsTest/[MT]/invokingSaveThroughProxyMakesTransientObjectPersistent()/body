{
  final Customer newCustomer=getDomainObjectContainer().newTransientInstance(Customer.class);
  assertThat(getDomainObjectContainer().isPersistent(newCustomer),is(false));
  final Customer newCustomerViewObject=getWrapperFactory().wrap(newCustomer);
  newCustomerViewObject.setCustomerNumber(123);
  newCustomerViewObject.setLastName("Smith");
  newCustomerViewObject.setMandatoryAssociation(countryGbrDO);
  newCustomerViewObject.setMandatoryValue("foo");
  newCustomerViewObject.setMaxLengthField("abc");
  newCustomerViewObject.setRegExCaseInsensitiveField("ABCd");
  newCustomerViewObject.setRegExCaseSensitiveField("abcd");
  final WrappedObject<Customer> proxyNewCustomer=asViewObject(newCustomerViewObject);
  proxyNewCustomer.save();
  assertThat(getDomainObjectContainer().isPersistent(newCustomer),is(true));
}
