{
  Class<? extends T> defaultType=null;
  if (defaultTypeName != null) {
    defaultType=loadClass(defaultTypeName,requiredType);
    try {
      defaultType=CastUtils.cast(Thread.currentThread().getContextClassLoader().loadClass(defaultTypeName));
      if (defaultType == null) {
        throw new InstanceCreationClassException("Failed to load default type '" + defaultTypeName + "'");
      }
    }
 catch (    final ClassNotFoundException e) {
      throw new UnavailableClassException("The default type '" + defaultTypeName + "' cannot be found");
    }
catch (    final NoClassDefFoundError e) {
      throw new InstanceCreationClassException("Default type '" + defaultTypeName + "' found, but is missing a dependent class: "+ e.getMessage(),e);
    }
  }
  return createInstance(cls,defaultType,requiredType);
}
