{
  ViewFactory viewFactory=Skylark.getViewFactory();
  LOG.debug("setting up default views (provided by the framework)");
  viewFactory.addValueFieldSpecification(loadSpecification("field.color",ColorField.Specification.class));
  viewFactory.addValueFieldSpecification(loadSpecification("field.checkbox",CheckboxField.Specification.class));
  viewFactory.addValueFieldSpecification(loadSpecification("field.password",PasswordFieldSpecification.class));
  viewFactory.addValueFieldSpecification(loadSpecification("field.wrappedtext",WrappedTextFieldSpecification.class));
  viewFactory.addValueFieldSpecification(loadSpecification("field.text",TextFieldSpecification.class));
  viewFactory.addRootWorkspaceSpecification(new org.nakedobjects.viewer.skylark.metal.WorkspaceSpecification());
  viewFactory.addWorkspaceSpecification(new InnerWorkspaceSpecification());
  if (NakedObjects.getConfiguration().getBoolean(SPECIFICATION_BASE + "defaults",true)) {
    viewFactory.addCompositeRootViewSpecification(new FormSpecification());
    viewFactory.addCompositeRootViewSpecification(new DataFormSpecification());
    viewFactory.addCompositeRootViewSpecification(new ListSpecification());
    viewFactory.addCompositeRootViewSpecification(new TableSpecification());
    viewFactory.addCompositeRootViewSpecification(new TreeBrowserSpecification());
  }
  viewFactory.addCompositeRootViewSpecification(new MessageDialogSpecification());
  viewFactory.addCompositeRootViewSpecification(new DetailedMessageViewSpecification());
  viewFactory.addEmptyFieldSpecification(loadSpecification("field.empty",EmptyField.Specification.class));
  viewFactory.addSubviewIconSpecification(loadSpecification("icon.subview",SubviewIconSpecification.class));
  viewFactory.addObjectIconSpecification(loadSpecification("icon.object",RootIconSpecification.class));
  viewFactory.addClassIconSpecification(loadSpecification("icon.class",ClassIcon.Specification.class));
  String viewParams=NakedObjects.getConfiguration().getString(SPECIFICATION_BASE + "view");
  if (viewParams != null) {
    StringTokenizer st=new StringTokenizer(viewParams,",");
    while (st.hasMoreTokens()) {
      String specName=(String)st.nextToken();
      if (specName != null && !specName.trim().equals("")) {
        try {
          ViewSpecification spec;
          spec=(ViewSpecification)Class.forName(specName).newInstance();
          LOG.info("adding view specification: " + spec);
          viewFactory.addCompositeRootViewSpecification(spec);
        }
 catch (        ClassNotFoundException e) {
          LOG.error("failed to find view specification class " + specName);
        }
catch (        InstantiationException e1) {
          LOG.error("failed to instantiate view specification " + specName);
        }
catch (        IllegalAccessException e1) {
          e1.printStackTrace();
        }
      }
    }
  }
}
