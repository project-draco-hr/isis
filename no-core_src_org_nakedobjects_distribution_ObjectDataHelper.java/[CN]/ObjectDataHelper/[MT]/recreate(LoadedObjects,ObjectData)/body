{
  Oid oid=data.getOid();
  Object[] fieldContent=data.getFieldContent();
  String type=data.getType();
  NakedObject object;
  if (oid != null && loadedObjects.isLoaded(oid)) {
    object=loadedObjects.getLoadedObject(oid);
  }
 else {
    NakedObjectSpecification specification=NakedObjectSpecificationLoader.getInstance().loadSpecification(type);
    object=(NakedObject)specification.acquireInstance();
    if (oid != null) {
      object.setOid(oid);
      loadedObjects.loaded(object);
    }
  }
  if (!object.isResolved() && fieldContent != null) {
    object.setResolved();
    NakedObjectField[] fields=object.getSpecification().getFields();
    if (fields.length == 0) {
      for (int i=0; i < fieldContent.length; i++) {
      }
    }
 else {
      for (int i=0; i < fields.length; i++) {
        if (fields[i].isCollection()) {
          if (fieldContent[i] != null) {
            ObjectData collection=(ObjectData)fieldContent[i];
            NakedObject[] instances=new NakedObject[collection.getFieldContent().length];
            for (int j=0; j < instances.length; j++) {
              instances[j]=recreate(loadedObjects,((ObjectData)collection.getFieldContent()[j]));
            }
            object.initOneToManyAssociation((OneToManyAssociation)fields[i],instances);
          }
        }
 else         if (fields[i].isValue()) {
          object.initValue((OneToOneAssociation)fields[i],fieldContent[i]);
        }
 else {
          if (fieldContent[i] != null) {
            object.initAssociation((NakedObjectAssociation)fields[i],recreate(loadedObjects,((ObjectData)fieldContent[i])));
          }
        }
      }
    }
  }
  return object;
}
