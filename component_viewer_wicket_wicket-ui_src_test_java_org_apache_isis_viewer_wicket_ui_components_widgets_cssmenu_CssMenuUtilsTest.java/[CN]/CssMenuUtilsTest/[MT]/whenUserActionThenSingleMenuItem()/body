{
  new ActionFixtures(context).isVisible(mockUserAction,true);
  new ActionFixtures(context).isUsable(mockUserAction,true);
  new ActionFixtures(context).getName(mockUserAction,"findCustomers");
  new ActionFixtures(context).getParameterCount(mockUserAction,0);
  new AdapterFixtures(context).getOid(mockAdapter,mockOid);
  new ActionFixtures(context).getOnType(mockUserAction,mockUserActionOnTypeSpec);
  new SpecFixtures(context).getFullName(mockUserActionOnTypeSpec,Customers.class.getName());
  new ActionFixtures(context).getType(mockUserAction,ActionType.USER);
  new ActionFixtures(context).getIdentifier(context,mockUserAction,Identifier.actionIdentifier(Customers.class,"findCustomers",new Class[0]));
  new SystemFixtures(context).newLink(mockLinkBuilder,"linkId",mockAdapterMemento,mockUserAction,fakeLink);
  final CssMenuItem parentMenuItem=CssMenuItem.newMenuItem("parent").build();
  parentMenuItem.newSubMenuItem(mockAdapterMemento,mockUserAction,mockLinkBuilder).build();
  assertThat(parentMenuItem.hasSubMenuItems(),is(true));
  assertThat(parentMenuItem.getSubMenuItems().size(),is(1));
}
