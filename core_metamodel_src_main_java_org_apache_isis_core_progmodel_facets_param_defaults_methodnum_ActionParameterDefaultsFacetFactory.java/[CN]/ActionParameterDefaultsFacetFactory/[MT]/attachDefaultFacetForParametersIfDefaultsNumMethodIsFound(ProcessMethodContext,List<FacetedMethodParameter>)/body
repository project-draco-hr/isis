{
  if (parameters.isEmpty()) {
    return;
  }
  final Method actionMethod=processMethodContext.getMethod();
  final Class<?>[] paramTypes=actionMethod.getParameterTypes();
  for (int i=0; i < paramTypes.length; i++) {
    Method defaultMethod=findDefaultNumMethod(processMethodContext,i);
    if (defaultMethod == null) {
      continue;
    }
    processMethodContext.removeMethod(defaultMethod);
    final FacetedMethod facetedMethod=processMethodContext.getFacetHolder();
    if (facetedMethod.containsDoOpFacet(ActionDefaultsFacet.class)) {
      final Class<?> cls2=processMethodContext.getCls();
      throw new MetaModelException(cls2 + " uses both old and new default syntax for " + actionMethod.getName()+ "(...) - must use one or other");
    }
    final FacetedMethodParameter paramAsHolder=parameters.get(i);
    FacetUtil.addFacet(new ActionParameterDefaultsFacetViaMethod(defaultMethod,paramAsHolder));
  }
}
