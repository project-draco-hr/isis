{
  for (int i=0; i < fields.length; i++) {
    FieldEditState field=editState.getField(fields[i].getId());
    if (field == null) {
      continue;
    }
    String newEntry=field.getEntry();
    ObjectAdapter originalValue=fields[i].get(object);
    boolean isVisible=fields[i].isVisible(IsisContext.getAuthenticationSession(),object).isAllowed();
    boolean isUsable=fields[i].isUsable(IsisContext.getAuthenticationSession(),object).isAllowed();
    boolean bothEmpty=originalValue == null && newEntry.equals("");
    boolean bothSame=newEntry.equals(originalValue == null ? "" : originalValue.titleString());
    if ((!isVisible || !isUsable) || bothEmpty || bothSame) {
      if (fields[i].getSpecification().getFacet(ParseableFacet.class) == null) {
        context.getMappedObject(newEntry);
      }
      continue;
    }
    if (fields[i].getSpecification().containsFacet(ParseableFacet.class)) {
      ParseableFacet facet=(ParseableFacet)fields[i].getSpecification().getFacet(ParseableFacet.class);
      ObjectAdapter newValue=facet.parseTextEntry(originalValue,newEntry);
      ((OneToOneAssociation)fields[i]).setAssociation(object,newValue);
    }
 else {
      ((OneToOneAssociation)fields[i]).setAssociation(object,(ObjectAdapter)field.getValue());
    }
  }
}
