{
  final ObjectActionParameter parameter=getAction().getParameters().get(getNumber());
  final ObjectSpecification parameterSpecification=parameter.getSpecification();
  if (proposedValue == null) {
    return null;
  }
  ObjectAdapter proposedValueAdapter=getAdapterMap().adapterFor(proposedValue);
  final ObjectSpecification proposedValueSpec=proposedValueAdapter.getSpecification();
  if (proposedValueSpec.isOfType(proposedValueSpec)) {
  }
 else {
    if (!(parameter instanceof ParseableEntryActionParameter)) {
      return null;
    }
    if (!(proposedValue instanceof String)) {
      return null;
    }
    final String proposedString=(String)proposedValue;
    final ParseableFacet p=parameterSpecification.getFacet(ParseableFacet.class);
    proposedValueAdapter=p.parseTextEntry(null,proposedString,localization);
  }
  final ValidityContext<?> ic=parameter.createProposedArgumentInteractionContext(getAuthenticationSession(),InteractionInvocationMethod.BY_USER,adapter,arguments(proposedValueAdapter),getNumber());
  final InteractionResultSet buf=new InteractionResultSet();
  InteractionUtils.isValidResultSet(parameter,ic,buf);
  if (buf.isVetoed()) {
    return buf.getInteractionResult().getReason();
  }
  return null;
}
