{
  availableSpace.contract(getView().getPadding());
  final View[] subviews=getSubviews();
  final View left=subviews[0];
  final View right=subviews[1];
  final Size leftPanelRequiredSize=left.getRequiredSize(new Size(availableSpace));
  final Size rightPanelRequiredSize=right == null ? new Size() : right.getRequiredSize(new Size(availableSpace));
  final Size totalSize=new Size(leftPanelRequiredSize);
  totalSize.extendWidth(rightPanelRequiredSize.getWidth());
  totalSize.ensureHeight(rightPanelRequiredSize.getHeight());
  if (totalSize.getWidth() > availableSpace.getWidth()) {
    if (rightPanelRequiredSize.getWidth() <= MINIMUM_WIDTH) {
      leftPanelRequiredSize.setWidth(availableSpace.getWidth() - rightPanelRequiredSize.getWidth());
    }
 else {
      final int availableWidth=availableSpace.getWidth();
      final int requiredWidth=totalSize.getWidth();
      leftPanelRequiredSize.setWidth(leftPanelRequiredSize.getWidth() * availableWidth / requiredWidth);
      rightPanelRequiredSize.setWidth(rightPanelRequiredSize.getWidth() * availableWidth / requiredWidth);
    }
  }
  left.setSize(new Size(leftPanelRequiredSize.getWidth(),totalSize.getHeight()));
  left.layout();
  if (right != null) {
    right.setLocation(new Location(left.getSize().getWidth(),0));
    rightPanelRequiredSize.setHeight(totalSize.getHeight());
    right.setSize(rightPanelRequiredSize);
    right.layout();
  }
}
