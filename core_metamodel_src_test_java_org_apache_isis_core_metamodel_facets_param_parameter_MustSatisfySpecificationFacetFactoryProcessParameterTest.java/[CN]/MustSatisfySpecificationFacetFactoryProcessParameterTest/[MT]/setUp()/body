{
  stubConfiguration=new IsisConfigurationDefault();
  context.checking(new Expectations(){
{
      allowing(mockServicesInjector).lookupService(TranslationService.class);
      will(returnValue(mockTranslationService));
      allowing(mockServicesInjector).lookupService(ConfigurationServiceInternal.class);
      will(returnValue(stubConfiguration));
      allowing(mockServicesInjector).injectServicesInto(with(any(List.class)));
    }
  }
);
  domainObjectClassWithoutAnnotation=DomainObjectWithoutMustSatisfyAnnotations.class;
  domainObjectClassWithAnnotation=DomainObjectWithMustSatisfyAnnotations.class;
  changeLastNameMethodWithout=domainObjectClassWithoutAnnotation.getMethod("changeLastName",String.class);
  changeLastNameMethodWith=domainObjectClassWithAnnotation.getMethod("changeLastName",String.class);
  context.checking(new Expectations(){
{
      allowing(mockFacetedMethodParameter).getIdentifier();
      will(returnValue(Identifier.actionIdentifier(Customer.class,"foo")));
    }
  }
);
  facetFactory=new ParameterAnnotationFacetFactory();
  facetFactory.setServicesInjector(mockServicesInjector);
}
