{
  NakedObjectSpecification cls=object.getSpecification();
  String table=table(cls);
  String columns=columns(cls);
  String id=primaryKey(object.getOid());
  LOG.debug("loading data from SQL " + table + " for "+ object);
  String statement="select " + columns + " from "+ table+ " where id = "+ id;
  Results rs=connector.select(statement);
  if (rs.next()) {
    NakedObjectField[] fields=cls.getFields();
    for (int i=0; i < fields.length; i++) {
      if (fields[i].isDerived()) {
        continue;
      }
 else       if (fields[i].isCollection()) {
        DatabaseConnector connection=connector.getConnectionPool().acquire();
        loadInternalCollection(connection,id,fields[i],(InternalCollection)object.getField(fields[i]));
        connector.getConnectionPool().release(connection);
      }
 else       if (fields[i].isValue()) {
        ValueMapper mapper=ValueMapperLookup.getInstance().mapperFor(fields[i].getSpecification());
        mapper.setFromDBColumn(columnName(fields[i]),fields[i],object,rs);
      }
 else       if (fields[i].isObject()) {
        NakedObjectSpecification associatedCls=fields[i].getSpecification();
        NakedObject reference=setupReference(associatedCls,rs.getInt(columnName(fields[i])));
        object.setAssociation((NakedObjectAssociation)fields[i],reference);
      }
    }
    object.setResolved();
    rs.close();
  }
 else {
    rs.close();
    throw new SqlObjectStoreException("Unable to load data for " + id + " from "+ table);
  }
}
