{
  NakedClass cls=object.getNakedClass();
  String table=table(cls);
  String columns=columns(cls);
  long id=primaryKey(object.getOid());
  LOG.debug("loading data from SQL " + table + " for "+ object);
  String statement="select " + columns + " from "+ table+ " where id = "+ id;
  Results rs=db.select(statement);
  if (rs.next()) {
    Field[] fields=cls.getFields();
    for (int i=0; i < fields.length; i++) {
      if (fields[i].isDerived()) {
        continue;
      }
 else       if (fields[i] instanceof OneToManyAssociation) {
        loadInternalCollection(id,fields[i],(InternalCollection)fields[i].get(object));
      }
 else       if (fields[i] instanceof Value) {
        try {
          ((Value)fields[i]).parseAndSave(object,rs.getString(columnName(fields[i])));
        }
 catch (        InvalidEntryException e) {
          LOG.error(e);
        }
      }
 else       if (fields[i] instanceof OneToOneAssociation) {
        NakedClass associatedCls=NakedClassManager.getInstance().getNakedClass(fields[i].getType().getName());
        NakedObject reference=setupReference(loadedObjects,associatedCls,rs.getInt(columnName(fields[i])));
        ((OneToOneAssociation)fields[i]).setAssociation(object,reference);
      }
    }
    object.setResolved();
    rs.close();
  }
 else {
    rs.close();
    throw new SqlObjectStoreException("Unable to load data for " + id + " from "+ table);
  }
}
