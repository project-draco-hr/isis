{
  final ObjectAction action=getObjectActionThatIsVisibleAndUsable(objectAdapter,actionId,Intent.ACCESS);
  final ActionSemantics actionSemantics=ActionSemantics.determine(getResourceContext(),action);
  if (!actionSemantics.isQueryOnly()) {
  }
  List<ObjectAdapter> argumentAdapters;
  try {
    argumentAdapters=argumentAdaptersFor(action,arguments);
  }
 catch (  IOException e) {
    throw JsonApplicationException.create(HttpStatusCode.BAD_REQUEST,"Action '%s' has query arguments that cannot be parsed as JSON",e,action.getId());
  }
  int numParameters=action.getParameterCount();
  int argSize=argumentAdapters.size();
  if (argSize != numParameters) {
    throw JsonApplicationException.create(HttpStatusCode.BAD_REQUEST,"Action '%s' has %d parameters but received %d arguments",numParameters,argSize,action.getId());
  }
  JsonRepresentation representationWithSelf=representationWithSelfFor(objectAdapter,action);
  return invokeActionUsingAdapters(objectAdapter,action,argumentAdapters,representationWithSelf);
}
