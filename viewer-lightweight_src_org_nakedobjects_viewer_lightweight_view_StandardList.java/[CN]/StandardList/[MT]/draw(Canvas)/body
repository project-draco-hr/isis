{
  super.draw(canvas);
  Color color;
  if (isModifiableCollection()) {
    if (getState().canDrop()) {
      color=Style.VALID;
    }
 else     if (getState().cantDrop()) {
      color=Style.INVALID;
    }
 else     if (getState().isViewIdentified()) {
      color=Style.ACTIVE;
    }
 else {
      color=Style.IN_BACKGROUND;
    }
    int iconHeight=(Style.NORMAL.getAscent() * 125) / 100;
    int iconWidth=(iconHeight * 80) / 100;
    int containerHeight=getSize().getHeight();
    int iconCentre=containerHeight - getPadding().getBottom() / 2;
    int xi=getPadding().getLeft() + HPADDING;
    int yi=iconCentre - iconHeight / 2;
    int xt=xi + iconWidth + HPADDING;
    int yt=iconCentre + (Style.NORMAL.getAscent() / 2);
    canvas.drawFullOval(xi,yi,iconWidth,iconHeight,color);
    canvas.drawText(name(),xt,yt,color,Style.NORMAL);
    if (DEBUG) {
      canvas.drawRectangle(xi,yi,iconWidth - 1,iconHeight - 1,Color.DEBUG3);
      canvas.drawLine(0,containerHeight,getSize().getWidth(),containerHeight,Color.DEBUG3);
      int last=containerHeight - getPadding().getBottom();
      canvas.drawLine(0,last,getSize().getWidth(),last,Color.DEBUG3);
      canvas.drawLine(5,iconCentre,getSize().getWidth() - 10,iconCentre,Color.DEBUG3);
    }
  }
  if (DEBUG) {
    canvas.drawRectangle(getSize(),Color.DEBUG3);
  }
}
