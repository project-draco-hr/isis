{
  final List<ComponentFactory> componentFactories=findOtherComponentFactories(model,factory);
  final ComponentFactory selectedComponentFactory=Iterables.find(componentFactories,determineInitialFactory(model));
  if (componentFactories.size() > 1) {
    final Model<ComponentFactory> componentFactoryModel=new Model<ComponentFactory>();
    componentFactoryModel.setObject(selectedComponentFactory);
    final WebMarkupContainer views=new WebMarkupContainer(ID_VIEWS);
    final DropDownChoiceComponentFactory viewsDropDown=new DropDownChoiceComponentFactory(ID_VIEWS_DROP_DOWN,componentFactoryModel,componentFactories,this,underlyingId,model);
    views.addOrReplace(viewsDropDown);
    addOrReplace(views);
  }
 else {
    permanentlyHide(ID_VIEWS);
  }
  addOrReplace(selectedComponentFactory.createComponent(underlyingId,model));
}
