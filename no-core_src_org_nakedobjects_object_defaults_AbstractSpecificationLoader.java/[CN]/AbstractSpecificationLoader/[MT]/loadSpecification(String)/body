{
  if (className == null) {
    throw new NullPointerException("No class name specified");
  }
  Object object=classes.get(className);
  NakedObjectSpecification nos=(NakedObjectSpecification)object;
  if (nos != null) {
    return nos;
  }
 else {
    NakedObjectSpecification specification;
    try {
      Class cls=Class.forName(className);
      if (InternalNakedObject.class.isAssignableFrom(cls) || Exception.class.isAssignableFrom(cls)) {
        LOG.info("initialising specification for " + className + " using internal reflector");
        InternalReflector reflector=new InternalReflector(className);
        specification=new NakedObjectSpecificationImpl();
        ((NakedObjectSpecificationImpl)specification).reflect(className,reflector);
      }
 else {
        specification=load(className);
      }
      if (specification == null) {
        LOG.info("unrecognised class " + className + "; 'null' specification created");
        NakedObjectSpecificationImpl spec=new NakedObjectSpecificationImpl();
        spec.nonReflect(className);
        return spec;
      }
    }
 catch (    ClassNotFoundException e) {
      LOG.warn("not a class " + className + "; 'null' specification created");
      specification=new NakedObjectSpecificationImpl();
      ((NakedObjectSpecificationImpl)specification).nonReflect(className);
    }
    classes.put(className,specification);
    specification.introspect();
    return specification;
  }
}
