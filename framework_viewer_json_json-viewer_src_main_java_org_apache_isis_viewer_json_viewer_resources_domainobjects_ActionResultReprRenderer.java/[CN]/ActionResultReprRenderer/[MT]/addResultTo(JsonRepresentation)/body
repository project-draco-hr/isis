{
  final ObjectSpecification returnedSpec=returnedAdapter.getSpecification();
  final CollectionFacet collectionFacet=returnedSpec.getFacet(CollectionFacet.class);
  final EncodableFacet encodableFacet=returnedSpec.getFacet(EncodableFacet.class);
  if (collectionFacet != null) {
    final Collection<ObjectAdapter> collectionAdapters=collectionFacet.collection(returnedAdapter);
    final RendererFactory factory=getRendererFactoryRegistry().find(RepresentationType.LIST);
    final ListReprRenderer renderer=(ListReprRenderer)factory.newRenderer(resourceContext,null,result);
    renderer.with(collectionAdapters).withReturnType(action.getReturnType()).withElementType(returnedAdapter.getElementSpecification());
    renderer.render();
    return ResultType.LIST;
  }
 else   if (encodableFacet != null) {
    final RendererFactory factory=getRendererFactoryRegistry().find(RepresentationType.SCALAR_VALUE);
    ScalarValueReprRenderer renderer=(ScalarValueReprRenderer)factory.newRenderer(resourceContext,null,result);
    renderer.with(returnedAdapter).withReturnType(action.getReturnType());
    renderer.render();
    return ResultType.SCALAR_VALUE;
  }
 else {
    final RendererFactory factory=getRendererFactoryRegistry().find(RepresentationType.DOMAIN_OBJECT);
    final DomainObjectReprRenderer renderer=(DomainObjectReprRenderer)factory.newRenderer(resourceContext,null,result);
    renderer.with(returnedAdapter).includesSelf();
    renderer.render();
    return ResultType.DOMAIN_OBJECT;
  }
}
