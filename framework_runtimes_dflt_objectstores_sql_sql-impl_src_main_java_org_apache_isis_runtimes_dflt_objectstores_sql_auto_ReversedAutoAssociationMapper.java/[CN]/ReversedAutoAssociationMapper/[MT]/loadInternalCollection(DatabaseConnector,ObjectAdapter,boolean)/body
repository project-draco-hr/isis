{
  final ObjectAdapter collection=field.get(parent);
  if (collection.getResolveState().canChangeTo(ResolveState.RESOLVING)) {
    LOG.debug("loading internal collection " + field);
    final StringBuffer sql=new StringBuffer();
    sql.append("select ");
    idMapping.appendColumnNames(sql);
    sql.append(", ");
    sql.append(columnList(fieldMappings));
    sql.append(" from ");
    sql.append(table);
    sql.append(" where ");
    idMapping.appendUpdateValues(connector,sql,parent);
    final Results rs=connector.select(sql.toString());
    final List<ObjectAdapter> list=new ArrayList<ObjectAdapter>();
    while (rs.next()) {
      final Oid oid=idMapping.recreateOid(rs,specification);
      final ObjectAdapter element=getAdapter(specification,oid);
      loadFields(element,rs,makeResolved);
      LOG.debug("  element  " + element.getOid());
      list.add(element);
    }
    final CollectionFacet collectionFacet=collection.getSpecification().getFacet(CollectionFacet.class);
    collectionFacet.init(collection,list.toArray(new ObjectAdapter[list.size()]));
    rs.close();
    PersistorUtil.end(collection);
  }
}
