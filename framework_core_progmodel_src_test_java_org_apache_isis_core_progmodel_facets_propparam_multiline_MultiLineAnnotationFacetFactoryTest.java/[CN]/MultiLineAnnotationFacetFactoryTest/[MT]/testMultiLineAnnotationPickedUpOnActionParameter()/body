{
  MultiLineAnnotationOnParameterFacetFactory facetFactory=new MultiLineAnnotationOnParameterFacetFactory();
class Customer {
    @SuppressWarnings("unused") public void someAction(    @MultiLine(numberOfLines=8,preventWrapping=false) final String foo){
    }
  }
  final Method method=findMethod(Customer.class,"someAction",new Class[]{String.class});
  facetFactory.processParams(new ProcessParameterContext(method,0,facetedMethodParameter));
  final Facet facet=facetedMethodParameter.getFacet(MultiLineFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof MultiLineFacetAnnotationOnParameter);
  final MultiLineFacetAnnotationOnParameter multiLineFacetAnnotation=(MultiLineFacetAnnotationOnParameter)facet;
  assertEquals(8,multiLineFacetAnnotation.numberOfLines());
  assertEquals(false,multiLineFacetAnnotation.preventWrapping());
}
