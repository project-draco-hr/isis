{
  context.checking(new Expectations(){
{
      allowing(mockConfiguration).injectInto(with(anything()));
      will(InjectIntoJMockAction.injectInto());
      ignoring(mockConfiguration);
    }
  }
);
  final ObjectReflectorDefault reflector=new ObjectReflectorDefault(DeploymentCategory.PRODUCTION,mockConfiguration,new ProgrammingModelFacetsJava5(),new MetaModelValidatorDefault(),Lists.<LayoutMetadataReader>newArrayList(new LayoutMetadataReaderFromJson()),mockServicesInjector);
  runtimeContext=new RuntimeContextNoRuntime(new ServicesInjectorDefault(Collections.emptyList()),reflector);
  reflector.init(runtimeContext);
  specification=loadSpecification(reflector);
}
