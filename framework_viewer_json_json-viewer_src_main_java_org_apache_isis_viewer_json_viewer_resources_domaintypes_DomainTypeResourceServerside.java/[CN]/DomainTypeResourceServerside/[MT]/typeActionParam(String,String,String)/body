{
  RepresentationType representationType=RepresentationType.TYPE_ACTION_PARAMETER;
  init(representationType);
  final ObjectSpecification objectSpec=getSpecificationLoader().loadSpecification(domainType);
  if (objectSpec == null) {
    throw JsonApplicationException.create(HttpStatusCode.NOT_FOUND);
  }
  final ObjectMember objectMember=objectSpec.getObjectAction(actionId);
  if (objectMember == null) {
    throw JsonApplicationException.create(HttpStatusCode.NOT_FOUND);
  }
  ObjectAction action=(ObjectAction)objectMember;
  ObjectActionParameter actionParam=action.getParameter(paramName);
  final RendererFactory rendererFactory=rendererFactoryRegistry.find(representationType);
  final TypeActionParamReprRenderer renderer=(TypeActionParamReprRenderer)rendererFactory.newRenderer(getResourceContext(),null,JsonRepresentation.newMap());
  renderer.with(new SpecAndActionParam(objectSpec,actionParam)).includesSelf();
  return responseOfOk(Caching.ONE_DAY,renderer).build();
}
