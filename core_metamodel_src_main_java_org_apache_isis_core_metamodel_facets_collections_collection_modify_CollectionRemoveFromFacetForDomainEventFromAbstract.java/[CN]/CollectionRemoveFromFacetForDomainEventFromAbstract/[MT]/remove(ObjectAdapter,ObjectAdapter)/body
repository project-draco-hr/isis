{
  if (this.collectionRemoveFromFacet == null) {
    return;
  }
  if (!interactionHelper.hasEventBusService()) {
    collectionRemoveFromFacet.remove(targetAdapter,referencedObjectAdapter);
    return;
  }
  try {
    final Object referencedObject=ObjectAdapter.Util.unwrap(referencedObjectAdapter);
    final Object collection=getterFacet.getProperty(targetAdapter);
    if (!((Collection<?>)collection).contains(referencedObject)) {
      return;
    }
    final CollectionDomainEvent<?,?> existingEvent=collectionDomainEventFacet.currentInteraction.get();
    final CollectionDomainEvent<?,?> event=interactionHelper.postEventForCollection(value(),existingEvent,AbstractDomainEvent.Phase.EXECUTING,getIdentified(),targetAdapter,CollectionDomainEvent.Of.REMOVE_FROM,referencedObject);
    collectionRemoveFromFacet.remove(targetAdapter,referencedObjectAdapter);
    interactionHelper.postEventForCollection(value(),verify(event),AbstractDomainEvent.Phase.EXECUTED,getIdentified(),targetAdapter,CollectionDomainEvent.Of.REMOVE_FROM,referencedObject);
  }
  finally {
    collectionDomainEventFacet.currentInteraction.set(null);
  }
}
