{
  LOG.info("processing request " + servletPath);
  try {
    AuthenticationSession session=UserManager.startRequest(context);
    LOG.debug("exsiting session: " + session);
    IsisContext.getPersistenceSession().getTransactionManager().startTransaction();
    context.setRequestPath(servletPath);
    context.startRequest();
    processActions(context,servletPath);
    IsisTransactionManager transactionManager=IsisContext.getPersistenceSession().getTransactionManager();
    if (transactionManager.getTransaction().getState().canFlush()) {
      transactionManager.flushTransaction();
    }
    processView(context);
    transactionManager=IsisContext.getPersistenceSession().getTransactionManager();
    if (transactionManager.getTransaction().getState().canCommit()) {
      IsisContext.getPersistenceSession().getTransactionManager().endTransaction();
    }
    context.endRequest();
    UserManager.endRequest(context.getSession());
  }
 catch (  Throwable e) {
    LOG.debug(e.getMessage(),e);
    DebugString error=new DebugString();
    if (IsisContext.getCurrentTransaction() != null) {
      List<String> messages=IsisContext.getMessageBroker().getMessages();
      for (      String message : messages) {
        context.getWriter().append("<div class=\"message\">message: " + message + "</div>");
        error.appendln("message",message);
      }
      messages=IsisContext.getMessageBroker().getWarnings();
      for (      String message : messages) {
        context.getWriter().append("<div class=\"message\">warning: " + message + "</div>");
        error.appendln("warning",message);
      }
    }
    generateErrorPage(e,context,error);
    PersistenceSession checkSession=IsisContext.getPersistenceSession();
    IsisTransactionManager transactionManager=checkSession.getTransactionManager();
    if (transactionManager.getTransaction() != null && transactionManager.getTransaction().getState().canAbort()) {
      transactionManager.abortTransaction();
    }
    String message="failed while processing " + servletPath;
    LOG.error(message + "\n" + error+ "\n"+ message);
    try {
      UserManager.endRequest(context.getSession());
    }
 catch (    Exception e1) {
      LOG.error("endRequest call failed",e1);
    }
    Throwable ex;
    if (e instanceof TagProcessingException) {
      ex=e.getCause();
    }
 else {
      ex=e;
    }
    if (ex instanceof ForbiddenException) {
      context.addVariable("_security_error",ex.getMessage(),Scope.REQUEST);
      context.addVariable("_security_identifier",((ForbiddenException)ex).getIdentifier(),Scope.REQUEST);
      context.addVariable("_security_roles",((ForbiddenException)ex).getRoles(),Scope.REQUEST);
      context.raiseError(403);
    }
 else     if (ex instanceof ScimpiNotFoundException) {
      context.raiseError(404);
    }
 else {
      context.raiseError(500);
    }
  }
}
