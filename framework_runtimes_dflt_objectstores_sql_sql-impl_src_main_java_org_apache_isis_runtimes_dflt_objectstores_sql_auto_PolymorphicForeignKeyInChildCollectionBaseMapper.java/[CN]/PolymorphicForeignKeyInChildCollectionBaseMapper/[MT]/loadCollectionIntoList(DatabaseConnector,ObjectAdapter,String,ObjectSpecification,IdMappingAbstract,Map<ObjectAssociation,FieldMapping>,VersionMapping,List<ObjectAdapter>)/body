{
  LOG.debug("Loading polymorphic list");
  final StringBuffer sql=new StringBuffer();
  sql.append("select ");
  super.getIdMapping().appendColumnNames(sql);
  sql.append("," + getForeignKeyName());
  sql.append("," + classColumnName);
  sql.append("," + itemIdColumnName);
  sql.append(" from ");
  sql.append(table);
  sql.append(" where ");
  appendCollectionWhereValues(connector,parent,sql);
  final Results rs=connector.select(sql.toString());
  final SpecificationLoader reflector=IsisContext.getSpecificationLoader();
  final JdbcPolymorphicObjectReferenceMapping idMapping=(JdbcPolymorphicObjectReferenceMapping)idMappingAbstract;
  while (rs.next()) {
    final ObjectSpecification itemSpecification=reflector.loadSpecification(rs.getString(classColumnName));
    idMapping.setObjectSpecification(itemSpecification);
    final ObjectMapping itemMapper=objectMappingLookup.getMapping(itemSpecification,connector);
    final TypedOid oid=idMapping.recreateOid(rs,itemSpecification);
    final ObjectAdapter loadedObject=itemMapper.getObject(connector,oid);
    LOG.debug("  element  " + loadedObject.getOid());
    list.add(loadedObject);
  }
  rs.close();
}
