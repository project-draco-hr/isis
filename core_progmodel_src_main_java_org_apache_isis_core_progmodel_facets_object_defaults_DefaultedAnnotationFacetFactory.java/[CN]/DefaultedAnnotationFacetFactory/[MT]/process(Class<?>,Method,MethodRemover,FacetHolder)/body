{
  final PropertyDefaultFacet existingDefaultFacet=holder.getFacet(PropertyDefaultFacet.class);
  if (existingDefaultFacet != null && !existingDefaultFacet.isNoop()) {
    return false;
  }
  final Class<?> returnType=method.getReturnType();
  final DefaultedFacet returnTypeDefaultedFacet=getDefaultedFacet(returnType);
  if (returnTypeDefaultedFacet != null) {
    final PropertyDefaultFacetDerivedFromDefaultedFacet propertyFacet=new PropertyDefaultFacetDerivedFromDefaultedFacet(returnTypeDefaultedFacet,holder,getAdapterMap());
    return FacetUtil.addFacet(propertyFacet);
  }
  return false;
}
