{
  if (order == null) {
    return original;
  }
 else {
    for (int i=0; i < order.length; i++) {
      order[i]=NameUtils.simpleName(order[i]);
    }
    final List<ObjectMemberPeer> ordered=Lists.newArrayListWithCapacity(original.size());
    int orderedIndex=0;
    ordering:     for (int orderIndex=0; orderIndex < order.length; orderIndex++) {
      for (int memberIndex=0; memberIndex < original.size(); memberIndex++) {
        final ObjectMemberPeer member=original.get(memberIndex);
        if (member == null) {
          continue;
        }
        if (member.getIdentifier().getMemberName().equalsIgnoreCase(order[orderIndex])) {
          ordered.set(orderedIndex++,original.get(memberIndex));
          original.set(memberIndex,null);
          continue ordering;
        }
      }
      if (!order[orderIndex].trim().equals("")) {
        LOG.warn("invalid ordering element '" + order[orderIndex]);
      }
    }
    final List<ObjectMemberPeer> results=Lists.newArrayListWithCapacity(original.size());
    int index=append(0,results,ordered);
    index=append(index,results,original);
    return results;
  }
}
