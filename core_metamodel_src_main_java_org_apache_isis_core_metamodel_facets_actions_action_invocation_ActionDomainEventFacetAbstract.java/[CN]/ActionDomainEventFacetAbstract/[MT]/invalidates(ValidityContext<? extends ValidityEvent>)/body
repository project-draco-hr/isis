{
  final ActionInvocationContext aic=(ActionInvocationContext)ic;
  final ActionDomainEvent<?> event=domainEventHelper.postEventForAction(AbstractDomainEvent.Phase.VALIDATE,eventType(),null,actionFrom(ic),getIdentified(),ic.getTarget(),ic.getMixedIn(),aic.getArgs(),null,null);
  if (event != null && event.isInvalid()) {
    final TranslatableString reasonTranslatable=event.getInvalidityReasonTranslatable();
    if (reasonTranslatable != null) {
      return reasonTranslatable.translate(translationService,translationContext);
    }
    return event.getInvalidityReason();
  }
  return null;
}
