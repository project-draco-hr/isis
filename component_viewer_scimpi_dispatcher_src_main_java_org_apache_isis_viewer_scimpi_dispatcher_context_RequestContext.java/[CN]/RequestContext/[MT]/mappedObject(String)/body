{
  if (dataOrOid != null && dataOrOid.equals("")) {
    return null;
  }
  if (dataOrOid == null) {
    dataOrOid=RESULT;
  }
  if (dataOrOid.startsWith(TRANSIENT_OBJECT_OID_MARKER + "{")) {
    return objectMapping.mappedTransientObject(StringEscapeUtils.unescapeHtml(dataOrOid.substring(TRANSIENT_OBJECT_OID_MARKER.length())));
  }
  final String oidStr=dataOrOid;
  final TypedOid typedOid=getOidMarshaller().unmarshal(oidStr,TypedOid.class);
  if (typedOid instanceof RootOid) {
    final ObjectAdapter mappedObject=objectMapping.mappedObject(oidStr);
    if (mappedObject != null) {
      getPersistenceSession().resolveImmediately(mappedObject);
    }
    return mappedObject;
  }
  AggregatedOid aggregatedOid=(AggregatedOid)typedOid;
  final TypedOid parentOid=aggregatedOid.getParentOid();
  final ObjectAdapter parentAdapter=objectMapping.mappedObject(parentOid.enString(getOidMarshaller()));
  getPersistenceSession().resolveImmediately(parentAdapter);
  ObjectAdapter aggregatedAdapter=null;
  outer:   for (  final ObjectAssociation association : parentAdapter.getSpecification().getAssociations()) {
    if (association.getSpecification().isParented()) {
      final ObjectAdapter objectAdapter=association.get(parentAdapter);
      if (objectAdapter == null) {
        continue;
      }
      if (association.isOneToManyAssociation()) {
        final ObjectAdapter coll=objectAdapter;
        final CollectionFacet facet=coll.getSpecification().getFacet(CollectionFacet.class);
        for (        final ObjectAdapter element : facet.iterable(coll)) {
          if (element.getOid().equals(aggregatedOid)) {
            aggregatedAdapter=element;
            break outer;
          }
        }
      }
 else {
        if (objectAdapter.getOid().equals(aggregatedOid)) {
          aggregatedAdapter=objectAdapter;
          break;
        }
      }
    }
 else     if (association.isOneToManyAssociation()) {
      if (association.getId().equals(aggregatedOid.getLocalId())) {
        return association.get(parentAdapter);
      }
    }
  }
  return aggregatedAdapter;
}
