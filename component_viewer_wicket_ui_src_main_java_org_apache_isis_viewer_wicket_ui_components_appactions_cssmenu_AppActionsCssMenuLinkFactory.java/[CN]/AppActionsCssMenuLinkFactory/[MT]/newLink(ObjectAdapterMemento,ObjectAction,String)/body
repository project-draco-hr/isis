{
  final PageParameters pageParameters=ActionModel.createPageParameters(adapterMemento.getObjectAdapter(ConcurrencyChecking.NO_CHECK),action,ConcurrencyChecking.NO_CHECK);
  final Class<? extends Page> pageClass=getPageClassRegistry().getPageClass(PageType.ACTION_PROMPT);
  final AbstractLink link=Links.newBookmarkablePageLink(linkId,pageParameters,pageClass);
  final String actionLabel=ObjectAction.Utils.nameFor(action);
  Util.addTargetBlankIfActionReturnsUrl(link,action);
  final boolean blobOrClob=CssMenuItem.returnsBlobOrClob(action);
  final boolean prototype=CssMenuItem.isExplorationOrPrototype(action);
  final String actionIdentifier=CssMenuItem.actionIdentifierFor(action);
  final String cssClass=CssMenuItem.cssClassFor(action);
  return new LinkAndLabel(link,actionLabel,null,blobOrClob,prototype,actionIdentifier,cssClass);
}
