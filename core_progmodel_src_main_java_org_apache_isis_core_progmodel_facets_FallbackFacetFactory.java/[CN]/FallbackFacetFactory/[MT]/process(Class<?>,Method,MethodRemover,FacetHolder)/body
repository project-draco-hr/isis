{
  final List<Facet> facets=new ArrayList<Facet>();
  if (holder instanceof FacetedMethod) {
    facets.add(new NamedFacetNone(holder));
    facets.add(new DescribedAsFacetNone(holder));
    facets.add(new HelpFacetNone(holder));
    FacetedMethod facetedMethod=(FacetedMethod)holder;
    final FeatureType featureType=facetedMethod.getFeatureType();
    if (featureType.isProperty()) {
      facets.add(new MaxLengthFacetUnlimited(holder));
      facets.add(new MultiLineFacetNone(true,holder));
    }
    if (featureType.isAction()) {
      facets.add(new ExecutedFacetAtDefault(holder));
      facets.add(new ActionDefaultsFacetNone(holder));
      facets.add(new ActionChoicesFacetNone(holder));
    }
  }
  return FacetUtil.addFacets(facets);
}
