{
  Logger.getRootLogger().setLevel(Level.OFF);
  String pojo1="object#1";
  adapter1=new DummyNakedObject();
  adapter2=new DummyNakedObject();
  adapter3=new DummyNakedObject();
  Naked[] values=new Naked[]{adapter1,null};
  system=new TestSystem();
  system.addAdapter(pojo1,adapter1);
  system.addAdapter("object#2",adapter2);
  system.addAdapter("object#3",adapter3);
  system.init();
  MockControl actionc=MockControl.createControl(Action.class);
  Action action=(Action)actionc.getMock();
  MockControl targetc=MockControl.createControl(NakedObject.class);
  targetc.setDefaultMatcher(MockControl.ARRAY_MATCHER);
  target=(NakedObject)targetc.getMock();
  targetc.expectAndReturn(target.execute(action,values),null);
  actionc.expectAndDefaultReturn(action.getParameterTypes(),new DummyNakedObjectSpecification[]{new DummyNakedObjectSpecification(),new DummyNakedObjectSpecification()});
  MockControl parameterSetc=MockControl.createNiceControl(ActionParameterSet.class);
  ActionParameterSet parameterSet=(ActionParameterSet)parameterSetc.getMock();
  parameterSetc.expectAndDefaultReturn(parameterSet.getParameterLabels(),new String[]{"one","two"});
  parameterSetc.expectAndDefaultReturn(parameterSet.getDefaultParameterValues(),new Object[]{pojo1,null});
  parameterSetc.expectAndDefaultReturn(parameterSet.getOptions(),new Object[][]{new Object[]{pojo1,"object#2","object#3"},null});
  parameterSetc.expectAndDefaultReturn(parameterSet.getRequiredParameters(),new boolean[]{false,true});
  targetc.expectAndDefaultReturn(target.getParameters(action),parameterSet);
  actionc.replay();
  targetc.replay();
  parameterSetc.replay();
  actionHelper=ActionHelper.createInstance(target,action);
}
