{
  LOG.debug("creating reflector for " + className + " using "+ reflector);
  ActionPeer delegates[];
  delegates=reflector.actions(Reflector.OBJECT);
  String[] order=reflector.actionSortOrder();
  Action[] objectActions=createActions(reflector,className,delegates,order);
  delegates=reflector.actions(Reflector.CLASS);
  order=reflector.classActionSortOrder();
  Action[] classActions=createActions(reflector,className,delegates,order);
  FieldPeer fieldDelegates[]=reflector.fields();
  NakedObjectField[] fieldVector=createFields(fieldDelegates);
  NakedObjectField[] fields=(NakedObjectField[])orderArray(NakedObjectField.class,fieldVector,reflector.fieldSortOrder(),className);
  String superclass=reflector.getSuperclass();
  String[] interfaces=reflector.getInterfaces();
  init(reflector,superclass,interfaces,fields,objectActions,classActions,reflector.title());
}
