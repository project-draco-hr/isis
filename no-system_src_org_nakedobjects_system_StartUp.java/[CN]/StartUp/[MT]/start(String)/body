{
  LogManager.getRootLogger().setLevel(Level.OFF);
  PropertiesConfiguration configuration=new PropertiesConfiguration(new PropertiesFileLoader(name,true));
  PropertyConfigurator.configure(configuration.getProperties("log4j"));
  AboutNakedObjects.logVersion();
  LOG.debug("Configuring system using " + name);
  String componentNames=configuration.getString("nakedobjects.components");
  StringTokenizer st=new StringTokenizer(componentNames,",;/:");
  Properties properties=configuration.getProperties("nakedobjects");
  Vector components=new Vector();
  while (st.hasMoreTokens()) {
    String componentName=((String)st.nextToken()).trim();
    String componentClass=properties.getProperty("nakedobjects." + componentName);
    LOG.debug("loading core component " + componentName + ": "+ componentClass);
    if (componentClass == null) {
      throw new StartupException("No component specified for nakedobjects." + componentName);
    }
    NakedObjectsComponent component=(NakedObjectsComponent)loadComponent(componentClass,NakedObjectsComponent.class);
    if (component instanceof NakedObjects) {
      ((NakedObjects)component).setConfiguration(configuration);
    }
    setProperties(component,"nakedobjects." + componentName,properties);
    component.init();
  }
  for (Enumeration e=components.elements(); e.hasMoreElements(); ) {
    ((NakedObjectsComponent)e.nextElement()).init();
  }
}
