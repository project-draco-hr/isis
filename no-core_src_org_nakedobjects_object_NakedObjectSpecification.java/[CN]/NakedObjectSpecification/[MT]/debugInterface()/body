{
  StringBuffer text=new StringBuffer();
  FieldSpecification[] fields=getFields();
  text.append("  Fields" + "\n");
  if (fields.length == 0) {
    text.append("    none\n");
  }
  NakedObjectContext context=NakedObjectContext.getDefaultContext();
  NakedObject example=(NakedObject)acquireInstance();
  example.setContext(context);
  for (int i=0; i < fields.length; i++) {
    if (fields[i] instanceof ValueFieldSpecification) {
      ValueFieldSpecification f=(ValueFieldSpecification)fields[i];
      debugAboutDetail(text,f,f.getAbout(context,(NakedObject)example));
    }
 else     if (fields[i] instanceof OneToManyAssociationSpecification) {
      OneToManyAssociationSpecification f=(OneToManyAssociationSpecification)fields[i];
      debugAboutDetail(text,f,f.getAbout(context,(NakedObject)example));
    }
 else     if (fields[i] instanceof OneToOneAssociationSpecification) {
      OneToOneAssociationSpecification f=(OneToOneAssociationSpecification)fields[i];
      debugAboutDetail(text,f,f.getAbout(context,(NakedObject)example,null));
    }
  }
  text.append("\n  Object Actions" + "\n");
  if (objectActions.length == 0) {
    text.append("    none\n");
  }
  for (int i=0; i < objectActions.length; i++) {
    ActionSpecification action=objectActions[i];
    int paramCount=action.getParameterCount();
    NakedObject[] params=new NakedObject[paramCount];
    debugAboutDetail(text,action,action.getAbout(context,(NakedObject)example,params));
  }
  text.append("\n  Class Actions" + "\n");
  if (classActions.length == 0) {
    text.append("    none\n");
  }
  for (int i=0; i < classActions.length; i++) {
    ActionSpecification action=classActions[i];
    int paramCount=action.getParameterCount();
    NakedObject[] params=new NakedObject[paramCount];
    debugAboutDetail(text,classActions[i],action.getAbout(context,(NakedObject)example));
  }
  text.append("\n");
  return text.toString();
}
