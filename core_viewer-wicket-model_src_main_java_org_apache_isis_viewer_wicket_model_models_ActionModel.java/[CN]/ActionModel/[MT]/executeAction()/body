{
  final ObjectAdapter targetAdapter=getTargetAdapter();
  final ObjectAdapter[] arguments=getArgumentsAsArray();
  final ObjectAction action=getActionMemento().getAction(getSpecificationLoader());
  final ObjectAdapter mixedInAdapter=null;
  final ObjectAdapter resultAdapter=action.executeWithRuleChecking(targetAdapter,mixedInAdapter,arguments,InteractionInitiatedBy.USER,WHERE_FOR_ACTION_INVOCATION);
  final List<RoutingService> routingServices=getServicesInjector().lookupServices(RoutingService.class);
  final Object result=resultAdapter != null ? resultAdapter.getObject() : null;
  for (  RoutingService routingService : routingServices) {
    final boolean canRoute=routingService.canRoute(result);
    if (canRoute) {
      final Object routeTo=routingService.route(result);
      return routeTo != null ? getPersistenceSession().adapterFor(routeTo) : null;
    }
  }
  return resultAdapter;
}
