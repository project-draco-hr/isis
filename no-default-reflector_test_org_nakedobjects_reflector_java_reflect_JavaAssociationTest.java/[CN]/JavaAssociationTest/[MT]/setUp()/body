{
  Logger.getRootLogger().setLevel(Level.OFF);
  loader=new MockNakedObjectSpecificationLoader();
  loader.addSpec(spec=new DummyNakedObjectSpecification());
  loader.addSpec(new DummyNakedObjectSpecification());
  loader.addSpec(new DummyNakedObjectSpecification());
  NakedObjects.setSpecificationLoader(loader);
  ConfigurationFactory.setConfiguration(new TestConfiguration());
  javaObjectWithOneToOneAssociations=new JavaObjectWithOneToOneAssociations();
  PojoAdapterFactory pojoAdapterFactory=new PojoAdapterFactory();
  pojoAdapterFactory.setPojoAdapterHash(new PojoAdapterHashImpl());
  pojoAdapterFactory.setReflectorFactory(new NullReflectorFactory());
  NakedObjects.setPojoAdapterFactory(pojoAdapterFactory);
  nakedObjectHoldingObjectWithAssociations=pojoAdapterFactory.createNOAdapter(javaObjectWithOneToOneAssociations);
  Class cls=JavaObjectWithOneToOneAssociations.class;
  Method get=cls.getDeclaredMethod("getReferencedObject",new Class[0]);
  Method set=cls.getDeclaredMethod("setReferencedObject",new Class[]{JavaReferencedObject.class});
  Method about=cls.getDeclaredMethod("aboutReferencedObject",new Class[]{FieldAbout.class,JavaReferencedObject.class});
  personField=new JavaOneToOneAssociation(PERSON_FIELD_NAME,JavaReferencedObject.class,get,set,null,null,about);
  javaObjectForReferencing=new JavaReferencedObject();
  associate=pojoAdapterFactory.createNOAdapter(javaObjectForReferencing);
}
