{
  final LinkBuilder linkBuilder=LinkBuilder.newBuilder(getResourceContext(),"services",RepresentationType.LIST,"services");
  final PathFollower pathFollower=getPathFollower().follow("services");
  if (!pathFollower.isTerminated()) {
    final List<ObjectAdapter> serviceAdapters=getResourceContext().getPersistenceSession().getServices();
    final RendererFactory factory=RendererFactoryRegistry.instance.find(RepresentationType.LIST);
    final ListReprRenderer renderer=(ListReprRenderer)factory.newRenderer(getResourceContext(),pathFollower,JsonRepresentation.newMap());
    renderer.usingLinkToBuilder(new DomainServiceLinkToBuilder()).withSelf("services").with(serviceAdapters);
    linkBuilder.withValue(renderer.render());
  }
  representation.mapPut("services",linkBuilder.build());
}
