{
  final Class<?> cls=processClassContext.getCls();
  final FacetHolder facetHolder=processClassContext.getFacetHolder();
  final List<Facet> facets=new ArrayList<Facet>();
  final List<Method> methods=new ArrayList<Method>();
  Method method=null;
  method=MethodFinderUtils.findMethod(cls,MethodScope.OBJECT,MethodPrefixConstants.SAVING_PREFIX,void.class,NO_PARAMETERS_TYPES);
  if (method != null) {
    methods.add(method);
    final PersistingCallbackFacet facet=facetHolder.getFacet(PersistingCallbackFacet.class);
    if (facet == null) {
      facets.add(new PersistingCallbackFacetViaMethod(method,facetHolder));
    }
 else {
      facet.addMethod(method);
    }
  }
  method=MethodFinderUtils.findMethod(cls,MethodScope.OBJECT,MethodPrefixConstants.SAVED_PREFIX,void.class,NO_PARAMETERS_TYPES);
  if (method != null) {
    methods.add(method);
    final PersistedCallbackFacet facet=facetHolder.getFacet(PersistedCallbackFacet.class);
    if (facet == null) {
      facets.add(new PersistedCallbackFacetViaMethod(method,facetHolder));
    }
 else {
      facet.addMethod(method);
    }
  }
  processClassContext.removeMethods(methods);
  FacetUtil.addFacets(facets);
}
