{
  Filter noop=AbstractFilter.noop(ObjectAssociation.class);
  final List<ObjectAssociation> fields=getAssociations(noop);
  for (int i=0; i < fields.size(); i++) {
    final ObjectAssociation field=fields.get(i);
    final Facet[] facets=field.getFacets(ImperativeFacet.FILTER);
    for (int j=0; j < facets.length; j++) {
      final ImperativeFacet facet=ImperativeFacetUtils.getImperativeFacet(facets[j]);
      for (      Method imperativeFacetMethod : facet.getMethods()) {
        membersByMethod.put(imperativeFacetMethod,field);
      }
    }
  }
}
