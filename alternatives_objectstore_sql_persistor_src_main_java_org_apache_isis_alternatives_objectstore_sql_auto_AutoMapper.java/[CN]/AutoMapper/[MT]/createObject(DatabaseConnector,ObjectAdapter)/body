{
  int versionSequence=1;
  SerialNumberVersion version=createVersion(versionSequence);
  StringBuffer sql=new StringBuffer();
  sql.append("insert into " + table + " (");
  idMapping.appendColumnNames(sql);
  sql.append(", ");
  String columnList=columnList();
  if (columnList.length() > 0) {
    sql.append(columnList);
    sql.append(", ");
  }
  titleMapping.appendColumnNames(sql);
  sql.append(", ");
  sql.append(versionMapping.insertColumns());
  sql.append(") values (");
  idMapping.appendInsertValues(connector,sql,object);
  sql.append(", ");
  sql.append(values(connector,object));
  titleMapping.appendInsertValues(connector,sql,object);
  sql.append(", ");
  sql.append(versionMapping.insertValues(connector,version));
  sql.append(") ");
  connector.insert(sql.toString());
  object.setOptimisticLock(version);
  for (int i=0; i < collectionMappers.length; i++) {
    collectionMappers[i].saveInternalCollection(connector,object);
  }
}
