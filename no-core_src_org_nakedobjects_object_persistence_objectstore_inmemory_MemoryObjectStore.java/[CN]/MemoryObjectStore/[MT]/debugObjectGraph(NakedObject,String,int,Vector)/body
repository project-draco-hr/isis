{
  StringBuffer s=new StringBuffer();
  recursiveElements.addElement(object);
  NakedObjectField[] fields;
  fields=object.getSpecification().getFields();
  for (int i=0; i < fields.length; i++) {
    NakedObjectField field=fields[i];
    Object obj=object.getField(field);
    name=field.getId();
    indent(s,level);
    if (field.isCollection()) {
      s.append(name + ": \n" + debugCollectionGraph((NakedCollection)obj,"nnn",level + 1,recursiveElements));
    }
 else {
      if (obj instanceof NakedObject) {
        if (recursiveElements.contains(obj)) {
          s.append(name + ": " + obj+ "*\n");
        }
 else {
          s.append(name + ": " + obj);
          s.append(debugGraph((NakedObject)obj,name,level + 1,recursiveElements));
        }
      }
 else {
        s.append(name + ": " + obj);
        s.append("\n");
      }
    }
  }
  return s.toString();
}
