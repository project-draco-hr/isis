{
  boolean isOpen=getSpecification().isOpen();
  boolean canOpen=isOpen || ((TreeNodeSpecification)getSpecification()).canOpen(getContent());
  if (((TreeBrowserFrame)getViewAxis()).getSelectedNode() == getView()) {
    canvas.drawSolidRectangle(left,0,getSize().getWidth() - left - 1,top - 1,Style.PRIMARY2);
  }
  if (getState().isObjectIdentified()) {
    canvas.drawRectangle(left,0,getSize().getWidth() - left - 1,top - 1,Style.SECONDARY2);
  }
  int x=0;
  int y=top / 2;
  canvas.drawLine(x,y,x + left,y,Style.SECONDARY2);
  if (canOpen) {
    x+=BOX_X_OFFSET;
    canvas.drawLine(x,y,x + BOX_SIZE,y,Style.SECONDARY3);
    canvas.drawRectangle(x,y - BOX_SIZE / 2,BOX_SIZE,BOX_SIZE,Style.SECONDARY2);
    canvas.drawLine(x + BOX_PADDING,y,x + BOX_SIZE - BOX_PADDING,y,Style.SECONDARY2);
    if (!isOpen) {
      x+=BOX_SIZE / 2;
      canvas.drawLine(x,y - BOX_SIZE / 2 + BOX_PADDING,x,y + BOX_SIZE / 2 - BOX_PADDING,Style.SECONDARY2);
    }
  }
  View[] nodes=getSubviews();
  if (nodes.length > 0) {
    int y1=top / 2;
    View node=nodes[nodes.length - 1];
    int y2=top + node.getLocation().getY() + top / 2;
    canvas.drawLine(left - 1,y1,left - 1,y2,Style.SECONDARY2);
  }
  x=left;
  icon.draw(canvas,x,baseline);
  x+=icon.getSize().getWidth();
  text.draw(canvas,x,baseline);
  if (AbstractView.debug) {
    canvas.drawRectangle(getSize(),Color.DEBUG_BASELINE);
  }
  super.draw(canvas);
}
