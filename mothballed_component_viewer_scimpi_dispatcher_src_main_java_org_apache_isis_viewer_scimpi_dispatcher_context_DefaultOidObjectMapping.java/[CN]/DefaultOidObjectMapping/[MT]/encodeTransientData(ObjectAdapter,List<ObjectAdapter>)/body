{
  if (adaptersToSave.contains(adapter)) {
    return null;
  }
  adaptersToSave.add(adapter);
  final JSONObject data=createJsonForAdapter(adapter);
  final ObjectSpecification specification=adapter.getSpecification();
  for (  final ObjectAssociation association : specification.getAssociations(Contributed.EXCLUDED)) {
    final ObjectAdapter fieldValue=association.get(adapter);
    final String fieldName=association.getId();
    if (fieldValue == null) {
      data.put(fieldName,(Object)null);
    }
 else     if (association.getSpecification().isEncodeable()) {
      final EncodableFacet encodeableFacet=fieldValue.getSpecification().getFacet(EncodableFacet.class);
      data.put(fieldName,encodeableFacet.toEncodedString(fieldValue));
    }
 else     if (association instanceof OneToManyAssociation) {
      final List<JSONObject> collection=Lists.newArrayList();
      final CollectionFacet facet=fieldValue.getSpecification().getFacet(CollectionFacet.class);
      for (      final ObjectAdapter element : facet.iterable(fieldValue)) {
        collection.add(encodeTransientData(element,adaptersToSave));
      }
      data.put(fieldName,collection);
    }
 else {
      if (fieldValue.isTransient() || fieldValue.isParented()) {
        final JSONObject saveData=encodeTransientData(fieldValue,adaptersToSave);
        if (saveData == null) {
          data.put(fieldName,mapObject(fieldValue,Scope.INTERACTION));
        }
 else {
          data.put(fieldName,saveData);
        }
      }
 else {
        data.put(fieldName,mapObject(fieldValue,Scope.INTERACTION));
      }
    }
  }
  return data;
}
