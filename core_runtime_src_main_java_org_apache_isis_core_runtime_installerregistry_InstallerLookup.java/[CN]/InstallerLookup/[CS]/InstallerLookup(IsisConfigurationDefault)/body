{
  this.isisConfiguration=isisConfiguration;
  final List<String> installerClassNames=Lists.newArrayList("org.apache.isis.core.security.authentication.BypassAuthenticationManagerInstaller","org.apache.isis.security.shiro.authentication.ShiroAuthenticationManagerInstaller","org.apache.isis.core.security.authorization.BypassAuthorizationManagerInstaller","org.apache.isis.security.shiro.authorization.ShiroAuthorizationManagerInstaller");
  for (  String className : installerClassNames) {
    if (className.length() == 0 || className.startsWith("#")) {
      continue;
    }
    try {
      final Installer object=(Installer)InstanceUtil.createInstance(className,isisConfiguration);
      LOG.debug("created component installer: " + object.getName() + " - "+ className);
      installerList.add(object);
    }
 catch (    final UnavailableClassException e) {
      LOG.info("component installer not found; it will not be available: " + className);
    }
catch (    final InstanceCreationClassException e) {
      LOG.info("instance creation exception: " + e.getMessage());
    }
  }
}
