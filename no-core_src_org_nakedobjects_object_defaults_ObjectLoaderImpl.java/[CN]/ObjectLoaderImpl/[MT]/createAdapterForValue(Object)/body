{
  Assert.assertFalse("can't create an adapter for a NOF adapter",value instanceof Naked);
  Assert.assertFalse("can't create an adapter for a NO Specification",value instanceof NakedObjectSpecification);
  NakedValue adapter;
  if (value instanceof String) {
    adapter=new StringAdapter((String)value);
  }
 else   if (value instanceof Date) {
    adapter=new DateAdapter((Date)value);
  }
 else   if (value instanceof Float) {
    adapter=new FloatAdapter((Float)value);
  }
 else   if (value instanceof Double) {
    adapter=new DoubleAdapter((Double)value);
  }
 else   if (value instanceof Boolean) {
    adapter=new BooleanAdapter((Boolean)value);
  }
 else   if (value instanceof Byte) {
    adapter=new ByteAdapter((Byte)value);
  }
 else   if (value instanceof Short) {
    adapter=new ShortAdapter((Short)value);
  }
 else   if (value instanceof Integer) {
    adapter=new IntAdapter((Integer)value);
  }
 else   if (value instanceof Long) {
    adapter=new LongAdapter((Long)value);
  }
 else   if (value instanceof Character) {
    adapter=new CharAdapter((Character)value);
  }
 else {
    adapter=reflectorFactory.createValueAdapter(value);
  }
  return adapter;
}
