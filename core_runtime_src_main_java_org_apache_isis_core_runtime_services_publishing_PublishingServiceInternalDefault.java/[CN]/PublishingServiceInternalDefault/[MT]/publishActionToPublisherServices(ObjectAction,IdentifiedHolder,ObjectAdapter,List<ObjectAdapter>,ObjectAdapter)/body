{
  final Interaction interaction=interactionContext.getInteraction();
  final Interaction.Execution execution=interaction.getPriorExecution();
  if (publisherServices == null || publisherServices.isEmpty()) {
    return;
  }
  final Command command=commandContext.getCommand();
  final Interaction.SequenceName sequenceName=Interaction.SequenceName.PUBLISHED_EVENT;
  final int nextEventSequence=command.next(sequenceName.abbr());
  final UUID transactionId=command.getTransactionId();
  final String actionMemberIdentifier=CommandUtil.actionIdentifierFor(objectAction);
  final Bookmark actionTarget=CommandUtil.bookmarkFor(targetAdapter);
  final RootOid adapterOid=(RootOid)targetAdapter.getOid();
  final String oidStr=getOidMarshaller().marshal(adapterOid);
  final Identifier actionIdentifier=objectAction.getIdentifier();
  final String title=oidStr + ": " + actionIdentifier.toNameParmsIdentityString();
  final String currentUser=userService.getUser().getName();
  final Timestamp timestamp=clockService.nowAsJavaSqlTimestamp();
  for (  PublisherService publisherService : publisherServices) {
    final ActionInvocationMementoDto aimDto=ActionInvocationMementoDtoUtils.newDto(transactionId,nextEventSequence,actionMemberIdentifier,actionTarget,title,currentUser,timestamp);
    publisherService.publish(aimDto);
  }
}
