{
  if (configuredServices == null) {
    return;
  }
  final SortedMap<Integer,List<Object>> positionedServices=Maps.newTreeMap();
  final StringTokenizer services=new StringTokenizer(configuredServices,ConfigurationConstants.LIST_SEPARATOR);
  if (!services.hasMoreTokens()) {
    throw new InitialisationException("Services specified, but none loaded");
  }
  while (services.hasMoreTokens()) {
    String serviceName=services.nextToken().trim();
    if (serviceName.equals("")) {
      continue;
    }
    final Matcher matcher=regex.matcher(serviceName);
    Integer order=Integer.MAX_VALUE;
    if (matcher.matches()) {
      order=Integer.parseInt(matcher.group(2));
      serviceName=matcher.group(3);
    }
    List<Object> list=positionedServices.get(order);
    if (list == null) {
      list=Lists.newArrayList();
      positionedServices.put(order,list);
    }
    LOG.info("creating service " + serviceName + (order != Integer.MAX_VALUE ? " at position " + order : ""));
    Object service=instantiateService(servicePrefix,serviceName);
    if (service != null) {
      list.add(service);
    }
  }
  for (  Integer position : positionedServices.keySet()) {
    final List<Object> list=positionedServices.get(position);
    serviceList.addAll(list);
  }
}
