{
  recordEvent(ev);
switch (ev.getEventPhase()) {
case HIDE:
    if (getSubscriberBehaviour() == Behaviour.UpdateCostActionHide) {
      if (ev.getIdentifier().getMemberName().equals("updateCost")) {
        ev.hide();
      }
    }
  break;
case DISABLE:
if (getSubscriberBehaviour() == Behaviour.UpdateCostActionDisable) {
  if (ev.getIdentifier().getMemberName().equals("updateCost")) {
    ev.disable("ToDoItemSubscriptions says: updateCost action disabled!");
  }
}
break;
case VALIDATE:
if (getSubscriberBehaviour() == Behaviour.UpdateCostActionInvalidate && ev.getIdentifier().getMemberName().equals("updateCost")) {
ev.invalidate("ToDoItemSubscriptions says: can't invoke updateCost action with these args!");
}
break;
case EXECUTING:
break;
case EXECUTED:
LOG.info("Received ActionInteractionEvent, " + ev.getSource().toString() + ", invoked "+ ev.getIdentifier().getMemberName());
onExecutedThrowExceptionIfSet(ev);
break;
}
}
