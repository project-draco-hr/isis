{
  super(serviceAction.getFacetedMethod(),typeOfSpec(serviceAction,objectMemberContext),objectMemberContext);
  this.serviceAdapter=serviceAdapter;
  this.serviceAction=serviceAction;
  final NotPersistedFacet notPersistedFacet=new NotPersistedFacetAbstract(this){
  }
;
  final DisabledFacet disabledFacet=disabledFacet();
  final TypeOfFacet typeOfFacet=new TypeOfFacetAbstract(getSpecification().getCorrespondingClass(),this,objectMemberContext.getSpecificationLookup()){
  }
;
  FacetUtil.addFacet(notPersistedFacet);
  FacetUtil.addFacet(disabledFacet);
  FacetUtil.addFacet(typeOfFacet);
  FacetUtil.copyFacets(serviceAction.getFacetedMethod(),facetHolder);
  final Identifier contributorIdentifier=serviceAction.getFacetedMethod().getIdentifier();
  final String memberName=contributorIdentifier.getMemberName();
  List<String> memberParameterNames=contributorIdentifier.getMemberParameterNames();
  identifier=Identifier.actionIdentifier(contributeeType.getCorrespondingClass().getName(),memberName,memberParameterNames);
}
