{
  final IsisConfiguration configuration=isisMetaModel.getConfiguration();
  final List<Object> servicesList=isisMetaModel.getServices();
  final Injectable reflector=isisMetaModel.getSpecificationLoader();
  final UserProfileStore userProfileStore=userProfileStoreOrNull != null ? userProfileStoreOrNull : new UserProfileStoreNoop();
  final UserProfileLoader userProfileLoader=new UserProfileLoaderDefault(userProfileStore,Mode.RELAXED);
  final PersistenceSessionFactory persistenceSessionFactory=persistenceMechanismInstaller.createPersistenceSessionFactory(DeploymentType.PROTOTYPE);
  reflector.injectInto(persistenceSessionFactory);
  configuration.injectInto(persistenceSessionFactory);
  sessionFactory=new IsisSessionFactoryDefault(DeploymentType.EXPLORATION,configuration,templateImageLoader,isisMetaModel.getSpecificationLoader(),authenticationManager,authorizationManager,userProfileLoader,persistenceSessionFactory,servicesList);
  isisContext=IsisContextStatic.createRelaxedInstance(sessionFactory);
  IsisContext.setConfiguration(sessionFactory.getConfiguration());
  sessionFactory.init();
  final SimpleSession authSession=new SimpleSession("tester",new String[0],"001");
  isisContext.openSessionInstance(authSession);
}
