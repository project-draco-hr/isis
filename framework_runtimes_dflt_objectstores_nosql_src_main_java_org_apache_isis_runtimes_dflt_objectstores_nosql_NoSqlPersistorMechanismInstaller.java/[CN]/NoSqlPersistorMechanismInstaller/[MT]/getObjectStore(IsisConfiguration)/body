{
  if (objectStore == null) {
    final KeyCreator keyCreator=createKeyCreator();
    final VersionCreator versionCreator=createVersionCreator();
    final NoSqlDataDatabase db=createNoSqlDatabase(configuration);
    final NoSqlOidGenerator oidGenerator=createOidGenerator(db);
    Map<String,DataEncryption> availableDataEncryption=new HashMap<String,DataEncryption>();
    try {
      final String[] encryptionClasses=getConfiguration().getList(NAKEDOBJECTS_ENCRYPTION_CLASSES);
      DataEncryption writeWithEncryption=null;
      boolean encryptionSpecified=false;
      for (      final String fullyQualifiedClass : encryptionClasses) {
        LOG.info("  adding encryption " + fullyQualifiedClass);
        final DataEncryption encryption=(DataEncryption)InstanceUtil.createInstance(fullyQualifiedClass);
        encryption.init(configuration);
        availableDataEncryption.put(encryption.getType(),encryption);
        if (!encryptionSpecified) {
          writeWithEncryption=encryption;
        }
        encryptionSpecified=true;
      }
      if (!encryptionSpecified) {
        LOG.warn("No encryption specified");
        final DataEncryption encryption=new NoEncryption();
        availableDataEncryption.put(encryption.getType(),encryption);
        writeWithEncryption=encryption;
      }
      objectStore=new NoSqlObjectStore(db,oidGenerator,keyCreator,versionCreator,writeWithEncryption,availableDataEncryption);
    }
 catch (    final IllegalArgumentException e) {
      throw new IsisException(e);
    }
catch (    final SecurityException e) {
      throw new IsisException(e);
    }
  }
  return objectStore;
}
