{
  final CommandContext commandContext=getCommandContext();
  final Command command=commandContext.getCommand();
  final InteractionContext interactionContext=getInteractionContext();
  final Interaction interaction=interactionContext.getInteraction();
  command.setExecutor(Command.Executor.USER);
  command.setTarget(CommandUtil.bookmarkFor(targetAdapter));
  command.setTargetClass(CommandUtil.targetClassNameFor(targetAdapter));
  command.setTargetAction(Command.ACTION_IDENTIFIER_FOR_EDIT);
  command.setMemberIdentifier(Command.ACTION_IDENTIFIER_FOR_EDIT);
  command.setExecuteIn(org.apache.isis.applib.annotation.Command.ExecuteIn.FOREGROUND);
  command.setPersistence(org.apache.isis.applib.annotation.Command.Persistence.IF_HINTED);
  interaction.execute(new Callable<Object>(){
    @Override public Object call(){
      return ObjectAdapter.InvokeUtils.invoke(method,targetAdapter,valueAdapter);
    }
  }
,getIdentified().getIdentifier().toFullIdentityString(),getClockService(),command);
}
