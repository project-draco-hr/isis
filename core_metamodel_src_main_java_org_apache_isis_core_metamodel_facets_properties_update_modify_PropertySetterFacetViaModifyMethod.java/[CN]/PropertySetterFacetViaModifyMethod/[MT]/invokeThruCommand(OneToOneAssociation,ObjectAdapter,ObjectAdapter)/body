{
  final Object target=ObjectAdapter.Util.unwrap(targetAdapter);
  final Object argValue=ObjectAdapter.Util.unwrap(valueAdapter);
  final String propertyId=owningAssociation.getIdentifier().toClassAndNameIdentityString();
  final Interaction.PropertyArgs propertyArgs=new Interaction.PropertyArgs(propertyId,target,argValue);
  final CommandContext commandContext=getCommandContext();
  final Command command=commandContext.getCommand();
  final InteractionContext interactionContext=getInteractionContext();
  final Interaction interaction=interactionContext.getInteraction();
  final Interaction.MemberCallable<?> callable=new Interaction.MemberCallable<Interaction.PropertyArgs>(){
    @Override public Object call(    final Interaction.PropertyArgs propertyArgs11){
      return ObjectAdapter.InvokeUtils.invoke(method,targetAdapter,valueAdapter);
    }
  }
;
  interaction.execute(callable,propertyArgs,getClockService(),command);
}
