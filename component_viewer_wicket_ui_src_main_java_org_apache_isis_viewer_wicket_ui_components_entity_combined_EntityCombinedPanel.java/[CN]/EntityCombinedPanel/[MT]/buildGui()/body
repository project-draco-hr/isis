{
  final EntityModel model=getModel();
  final CssClassFacet facet=model.getObject().getSpecification().getFacet(CssClassFacet.class);
  if (facet != null) {
    this.add(new CssClassAppender(facet.value()));
  }
  final MemberGroupLayoutFacet mglFacet=model.getObject().getSpecification().getFacet(MemberGroupLayoutFacet.class);
  final ColumnSpans columnSpans=mglFacet.getColumnSpans();
  addOrReplace(ComponentType.ENTITY_SUMMARY,model);
  model.setMemberGroupLayoutHint(MemberGroupLayoutHint.LEFT);
  final Component leftColumn=getComponentFactoryRegistry().addOrReplaceComponent(this,ID_ENTITY_PROPERTIES_LEFT,ComponentType.ENTITY_PROPERTIES,model);
  addClassForSpan(leftColumn,columnSpans.getLeft());
  if (columnSpans.getMiddle() > 0) {
    model.setMemberGroupLayoutHint(MemberGroupLayoutHint.MIDDLE);
    final Component middleColumn=getComponentFactoryRegistry().addOrReplaceComponent(this,ID_ENTITY_PROPERTIES_MIDDLE,ComponentType.ENTITY_PROPERTIES,model);
    addClassForSpan(middleColumn,columnSpans.getMiddle());
  }
 else {
    permanentlyHide(ID_ENTITY_PROPERTIES_MIDDLE);
  }
  if (columnSpans.getRight() > 0) {
    model.setMemberGroupLayoutHint(MemberGroupLayoutHint.RIGHT);
    final Component rightColumn=getComponentFactoryRegistry().addOrReplaceComponent(this,ID_ENTITY_PROPERTIES_RIGHT,ComponentType.ENTITY_PROPERTIES,model);
    addClassForSpan(rightColumn,columnSpans.getRight());
  }
 else {
    permanentlyHide(ID_ENTITY_PROPERTIES_RIGHT);
  }
  if (columnSpans.getCollections() > 0) {
    final Component propertiesColumn=addOrReplace(ComponentType.ENTITY_COLLECTIONS,model);
    addClassForSpan(propertiesColumn,columnSpans.getCollections());
  }
 else {
    permanentlyHide(ComponentType.ENTITY_COLLECTIONS.toString());
  }
}
