{
  final EntityModel model=getModel();
  final CssClassFacet facet=model.getObject().getSpecification().getFacet(CssClassFacet.class);
  if (facet != null) {
    this.add(new CssClassAppender(facet.value()));
  }
  final MemberGroupLayoutFacet mglFacet=model.getObject().getSpecification().getFacet(MemberGroupLayoutFacet.class);
  final ColumnSpans columnSpans=mglFacet.getColumnSpans();
  addOrReplace(ComponentType.ENTITY_SUMMARY,model);
  model.setMemberGroupLayoutHint(MemberGroupLayoutHint.LEFT);
  final Component leftColumn=getComponentFactoryRegistry().addOrReplaceComponent(this,"entityPropertiesLeft",ComponentType.ENTITY_PROPERTIES,model);
  addClassForSpan(leftColumn,columnSpans.getLeft());
  if (!mglFacet.getMiddle().isEmpty()) {
    model.setMemberGroupLayoutHint(MemberGroupLayoutHint.MIDDLE);
    final Component middleColumn=getComponentFactoryRegistry().addOrReplaceComponent(this,"entityPropertiesMiddle",ComponentType.ENTITY_PROPERTIES,model);
    addClassForSpan(middleColumn,columnSpans.getMiddle());
  }
 else {
    permanentlyHide("entityPropertiesMiddle");
  }
  final Component rightColumn=addOrReplace(ComponentType.ENTITY_COLLECTIONS,model);
  addClassForSpan(rightColumn,columnSpans.getRight());
}
