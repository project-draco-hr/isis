{
  identifiedHolder=new AbstractFacetFactoryTest.IdentifiedHolderImpl(Identifier.propertyOrCollectionIdentifier(Customer.class,"lastName"));
  context.checking(new Expectations(){
{
      allowing(mockServicesInjector).lookupService(TranslationService.class);
      will(returnValue(mockTranslationService));
    }
  }
);
  requiresFirstLetterToBeUpperCase=new SpecificationRequiresFirstLetterToBeUpperCase();
  facetForSpecificationFirstLetterUpperCase=new MustSatisfySpecificationFromMustSatisfyAnnotationOnTypeFacet(Utils.listOf(requiresFirstLetterToBeUpperCase),identifiedHolder,mockServicesInjector);
  mockProposedObjectAdapter=context.mock(ObjectAdapter.class,"proposed");
}
