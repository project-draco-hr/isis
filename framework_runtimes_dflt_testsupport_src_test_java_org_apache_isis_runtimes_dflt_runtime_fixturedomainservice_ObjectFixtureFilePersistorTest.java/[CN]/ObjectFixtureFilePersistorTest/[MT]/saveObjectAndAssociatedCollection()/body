{
  final Set<Object> objects=Sets.newLinkedHashSet();
  iswf.fixtures.epc1.getHomogeneousCollection().add(iswf.fixtures.epv1);
  iswf.fixtures.epc1.getHomogeneousCollection().add(iswf.fixtures.epv2);
  objects.add(iswf.fixtures.epc1);
  objects.add(iswf.fixtures.epv1);
  objects.add(iswf.fixtures.epv2);
  final StringWriter out=new StringWriter();
  persistor.save(objects,out);
  final String actual=out.toString().replaceAll("\r\n","\n");
  final String expected1=ExamplePojoWithCollections.class.getName() + "#2\n  heterogeneousCollection: \n  homogeneousCollection: " + ExamplePojoWithValues.class.getName()+ "#3 "+ ExamplePojoWithValues.class.getName()+ "#4 "+ "\n";
  final String expected2=ExamplePojoWithValues.class.getName() + "#3\n  date: 08-Mar-2010 00:00\n  name: Fred Smith\n";
  final String expected3=ExamplePojoWithValues.class.getName() + "#4\n  date: 09-Apr-2011 01:10\n  name: Joe Bloggs\n";
  assertThat(actual.replaceAll("\n","###"),IsisMatchers.contains(expected1.replaceAll("\n","###")));
  assertThat(actual,IsisMatchers.contains(expected2));
  assertThat(actual,IsisMatchers.contains(expected3));
}
