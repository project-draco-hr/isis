{
  if (!memberRepType.isStandalone() || usability().isVetoed()) {
    return;
  }
  Map<String,MutatorSpec> mutators=memberType.getMutators();
  for (  String mutator : mutators.keySet()) {
    MutatorSpec mutatorSpec=mutators.get(mutator);
    if (hasMemberFacet(mutatorSpec.mutatorFacetType)) {
      String urlForMember=urlForMember(mutatorSpec.suffix);
      Object body=mutatorArgs(mutatorSpec);
      JsonRepresentation detailsLink=LinkRepBuilder.newBuilder(repContext,mutator,urlForMember).withHttpMethod(mutatorSpec.httpMethod).withBody(body).build();
      representation.put(mutator,detailsLink);
    }
  }
}
