{
  final Method method=processParameterContext.getMethod();
  final int paramNum=processParameterContext.getParamNum();
  final FacetedMethodParameter holder=processParameterContext.getFacetHolder();
  final Annotation[] parameterAnnotations=Annotations.getParameterAnnotations(method)[paramNum];
  for (  final Annotation parameterAnnotation : parameterAnnotations) {
    if (parameterAnnotation instanceof MustSatisfy) {
      final MustSatisfy annotation=(MustSatisfy)parameterAnnotation;
      final Facet facet=MustSatisfySpecificationFacetForMustSatisfyAnnotationOnParameter.create(annotation,processParameterContext.getFacetHolder(),servicesInjector);
      FacetUtil.addFacet(mustSatisfyValidator.flagIfPresent(facet,processParameterContext));
      return;
    }
  }
  for (  final Annotation parameterAnnotation : parameterAnnotations) {
    if (parameterAnnotation instanceof Parameter) {
      final Parameter parameter=(Parameter)parameterAnnotation;
      FacetUtil.addFacet(MustSatisfySpecificationFacetForParameterAnnotation.create(parameter,holder,servicesInjector));
      return;
    }
  }
}
