{
  final Method method=processParameterContext.getMethod();
  final int paramNum=processParameterContext.getParamNum();
  final FacetedMethodParameter holder=processParameterContext.getFacetHolder();
  final Class<?>[] parameterTypes=method.getParameterTypes();
  if (paramNum >= parameterTypes.length) {
    return;
  }
  final Annotation[] parameterAnnotations=Annotations.getParameterAnnotations(method)[paramNum];
  for (  final Annotation parameterAnnotation : parameterAnnotations) {
    if (parameterAnnotation instanceof Parameter) {
      final Parameter parameter=(Parameter)parameterAnnotation;
      Class<?> parameterType=parameterTypes[paramNum];
      FacetUtil.addFacet(MaxLengthFacetForParameterAnnotation.create(parameter,holder));
      FacetUtil.addFacet(MustSatisfySpecificationFacetForParameterAnnotation.create(parameter,holder));
      FacetUtil.addFacet(MandatoryFacetForParameterAnnotation.create(parameter,parameterType,holder));
      if (Annotations.isString(parameterType)) {
        FacetUtil.addFacet(RegExFacetForParameterAnnotation.create(parameter,holder));
      }
      return;
    }
  }
}
