{
  context.checking(new Expectations(){
{
      allowing(mockDeploymentCategoryProvider).getDeploymentCategory();
      will(returnValue(DeploymentCategory.PRODUCTION));
    }
  }
);
  context.checking(new Expectations(){
{
      allowing(mockServicesInjector).lookupService(TranslationService.class);
      will(returnValue(mockTranslationService));
    }
  }
);
  facetHolder=new AbstractFacetFactoryTest.IdentifiedHolderImpl(Identifier.propertyOrCollectionIdentifier(Customer.class,"firstName"));
  facetedMethod=FacetedMethod.createForProperty(AbstractFacetFactoryTest.Customer.class,"firstName");
  facetedMethodParameter=new FacetedMethodParameter(facetedMethod.getOwningType(),facetedMethod.getMethod(),String.class);
}
