{
  init(Where.PARENTED_TABLES);
  final ObjectAdapter objectAdapter=getObjectAdapterElseThrowNotFound(domainType,oidStr);
  final DomainResourceHelper helper=new DomainResourceHelper(getResourceContext(),objectAdapter);
  final OneToManyAssociation collection=helper.getCollectionThatIsVisibleForIntent(collectionId,Intent.MUTATE,getResourceContext().getWhere());
  if (!collection.getCollectionSemantics().isSet()) {
    throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.BAD_REQUEST,"Collection '%s' does not have set semantics",collectionId);
  }
  final ObjectSpecification collectionSpec=collection.getSpecification();
  final String bodyAsString=DomainResourceHelper.asStringUtf8(body);
  final ObjectAdapter argAdapter=helper.parseAsMapWithSingleValue(collectionSpec,bodyAsString);
  final Consent consent=collection.isValidToAdd(objectAdapter,argAdapter);
  if (consent.isVetoed()) {
    throw RestfulObjectsApplicationException.createWithMessage(HttpStatusCode.UNAUTHORIZED,consent.getReason());
  }
  collection.addElement(objectAdapter,argAdapter);
  return helper.collectionDetails(collectionId,MemberMode.MUTATING,Caching.NONE,getResourceContext().getWhere());
}
