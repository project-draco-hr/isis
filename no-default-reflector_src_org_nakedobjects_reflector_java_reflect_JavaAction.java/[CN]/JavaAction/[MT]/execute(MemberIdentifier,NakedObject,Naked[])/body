{
  if (parameters.length != paramCount) {
    LOG.error(actionMethod + " requires " + paramCount+ " parameters, not "+ parameters.length);
  }
  try {
    Object[] executionParameters=new Object[parameters.length];
    for (int i=0; i < parameters.length; i++) {
      executionParameters[i]=parameters[i] == null ? null : parameters[i].getObject();
    }
    Object result=actionMethod.invoke(inObject.getObject(),executionParameters);
    LOG.debug(" action result " + result);
    if (result != null) {
      Naked adapter=NakedObjects.getObjectLoader().getAdapterFor(result);
      if (adapter == null) {
        adapter=NakedObjects.getObjectLoader().createCollectionAdapter(result);
        if (adapter == null) {
          adapter=NakedObjects.getObjectLoader().createAdapterForTransient(result);
        }
      }
      return adapter;
    }
 else {
      return null;
    }
  }
 catch (  InvocationTargetException e) {
    e.fillInStackTrace();
    if (e.getTargetException() instanceof TransactionException) {
      throw new ReflectiveActionException("TransactionException thrown while executing " + actionMethod + " "+ e.getTargetException().getMessage(),e.getTargetException());
    }
 else {
      invocationException("Exception executing " + actionMethod,e);
      return null;
    }
  }
catch (  IllegalAccessException e) {
    throw new ReflectiveActionException("Illegal access of " + actionMethod,e);
  }
}
