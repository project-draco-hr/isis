{
  return new AjaxLink<ObjectAdapter>(linkId){
    private static final long serialVersionUID=1L;
    @Override public void onClick(    AjaxRequestTarget target){
      String contentId=simpleClipboardModalWindow.getContentId();
      SimpleClipboardModalWindowPanel panel=new SimpleClipboardModalWindowPanel(contentId);
      SimpleClipboardModalWindowForm form=new SimpleClipboardModalWindowForm("form");
      final TextField<String> textField=new TextField<String>("textField",new LoadableDetachableModel<String>(){
        private static final long serialVersionUID=1L;
        @SuppressWarnings({"rawtypes","unchecked"}) @Override protected String load(){
          if (subscribingLink instanceof BookmarkablePageLink) {
            final BookmarkablePageLink<?> link=(BookmarkablePageLink<?>)subscribingLink;
            final Class pageClass=link.getPageClass();
            final PageParameters pageParameters=link.getPageParameters();
            final CharSequence urlFor=link.urlFor(pageClass,pageParameters);
            return getRequestCycle().getUrlRenderer().renderFullUrl(Url.parse(urlFor));
          }
 else {
            return "";
          }
        }
      }
);
      panel.add(form);
      form.add(textField);
      textField.setOutputMarkupId(true);
      CharSequence modalId=Strings2.escapeMarkupId(simpleClipboardModalWindow.getMarkupId());
      CharSequence textFieldId=Strings2.escapeMarkupId(textField.getMarkupId());
      target.appendJavaScript(String.format("$('#%s').one('shown.bs.modal', function(){Wicket.$('%s').select();});",modalId,textFieldId));
      simpleClipboardModalWindow.setPanel(panel,target);
      simpleClipboardModalWindow.showPrompt(target);
      target.focusComponent(textField);
    }
  }
;
}
