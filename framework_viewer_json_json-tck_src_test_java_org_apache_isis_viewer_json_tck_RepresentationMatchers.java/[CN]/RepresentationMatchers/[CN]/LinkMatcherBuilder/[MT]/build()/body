{
  return new TypeSafeMatcher<JsonRepresentation>(){
    @Override public void describeTo(    Description description){
      description.appendText("a link");
      if (rel != null) {
        description.appendText(" with rel '").appendText(rel).appendText("'");
      }
      if (href != null) {
        description.appendText(" with href '").appendText(href).appendText("'");
      }
      if (hrefMatcher != null) {
        description.appendText(" with href ");
        hrefMatcher.describeTo(description);
      }
      if (method != null) {
        description.appendText(" with method '").appendValue(method).appendText("'");
      }
      if (mediaType != null) {
        description.appendText(" with type '").appendValue(mediaType).appendText("'");
      }
      if (typeParameterName != null) {
        description.appendText(" with media type parameter '").appendText(typeParameterName).appendText("=").appendText(typeParameterValue).appendText("'");
      }
      if (novalue != null && novalue) {
        description.appendText(" with no value");
      }
      if (valueMatcher != null) {
        description.appendText(" with value ");
        valueMatcher.describeTo(description);
      }
      if (statusCode != null) {
        if (client == null) {
          throw new IllegalStateException("require client in order to assert on statusCode");
        }
        description.appendText(" that when followed returns status " + statusCode);
      }
      if (statusCode != null) {
        description.appendText(" returns ").appendValue(statusCode);
      }
    }
    @Override public boolean matchesSafely(    JsonRepresentation linkRepr){
      if (linkRepr == null) {
        return false;
      }
      LinkRepresentation link=linkRepr.asLink();
      if (rel != null && !rel.equals(link.getRel())) {
        return false;
      }
      if (href != null && !href.equals(link.getHref())) {
        return false;
      }
      if (hrefMatcher != null && !hrefMatcher.matches(link.getHref())) {
        return false;
      }
      if (method != null && !method.equals(link.getMethod())) {
        return false;
      }
      if (mediaType != null && !mediaType.isCompatible(mediaType)) {
        return false;
      }
      if (typeParameterName != null) {
        final MediaType mediaType=link.getType();
        String parameterValue=mediaType.getParameters().get(typeParameterName);
        if (!typeParameterValue.equals(parameterValue)) {
          return false;
        }
      }
      if (novalue != null && novalue && link.getValue() != null) {
        return false;
      }
      if (valueMatcher != null && !valueMatcher.matches(link)) {
        return false;
      }
      Response linkedResp=null;
      if (statusCode != null) {
        if (client == null) {
          return false;
        }
        try {
          linkedResp=client.follow(link);
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
      if (statusCode != null) {
        RestfulResponse<JsonRepresentation> jsonResp=RestfulResponse.of(linkedResp);
        if (jsonResp.getStatus() != statusCode) {
          return false;
        }
      }
      return true;
    }
  }
;
}
