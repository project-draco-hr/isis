{
  allowingJonesStringValueAdapter();
  context.checking(new Expectations(){
{
      allowing(mockAdapterForStringJones).titleString(null);
      ignoring(mockCommand);
      oneOf(mockConfiguration).getBoolean("isis.reflector.facet.filterVisibility",true);
      will(returnValue(true));
      allowing(mockAdapterForStringJones).isDestroyed();
      will(returnValue(false));
      allowing(mockAdapterForStringJones).getSpecification();
      will(returnValue(mockStringSpec));
      allowing(mockPersistenceSessionService).adapterFor("Jones");
      will(returnValue(mockAdapterForStringJones));
      ignoring(mockStringSpec);
    }
  }
);
  employeeWO.setName("Jones");
  assertThat(employeeDO.getName(),is("Jones"));
  assertThat(employeeWO.getName(),is(employeeDO.getName()));
}
