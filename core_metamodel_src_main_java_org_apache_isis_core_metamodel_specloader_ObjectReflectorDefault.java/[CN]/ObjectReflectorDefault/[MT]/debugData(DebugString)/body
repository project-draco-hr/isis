{
  facetDecoratorSet.debugData(str);
  str.appendln();
  str.appendTitle("Specifications");
  final ObjectSpecification[] specs=allSpecifications();
  Arrays.sort(specs,new Comparator<ObjectSpecification>(){
    @Override public int compare(    final ObjectSpecification s1,    final ObjectSpecification s2){
      return s1.getShortName().compareToIgnoreCase(s2.getShortName());
    }
  }
);
  for (int i=0; i < specs.length; i++) {
    final ObjectSpecification specification=specs[i];
    str.append(specification.isAbstract() ? "A" : ".");
    str.append(specification.isService() ? "S" : ".");
    str.append(SpecificationFacets.isBoundedSet(specification) ? "B" : ".");
    str.append(specification.isCollection() ? "C" : ".");
    str.append(specification.isNotCollection() ? "O" : ".");
    str.append(".");
    str.append(specification.isParseable() ? "P" : ".");
    str.append(specification.isEncodeable() ? "E" : ".");
    str.append(specification.isValueOrIsAggregated() ? "A" : ".");
    str.append(!specification.isCollectionOrIsAggregated() ? "I" : ".");
    str.append("  ");
    str.append(specification.getShortName());
    str.append("  [fqc=");
    str.append(specification.getFullName());
    str.append(",type=");
    str.append(specification.getClass().getName());
    str.appendln("]");
  }
}
