{
  final ServicesInjector servicesInjector=getRuntimeContext().getServicesInjector();
  final PersistenceSessionService persistenceSessionService=getRuntimeContext().getPersistenceSessionService();
  final ObjectSpecificationDependencies specContext=new ObjectSpecificationDependencies(getDeploymentCategory(),servicesInjector,this,facetProcessor);
  final ObjectMemberDependencies objectMemberDependencies=new ObjectMemberDependencies(this,servicesInjector,persistenceSessionService);
  if (FreeStandingList.class.isAssignableFrom(cls)) {
    return new ObjectSpecificationOnStandaloneList(specContext,objectMemberDependencies);
  }
 else {
    final FacetedMethodsBuilderContext facetedMethodsBuilderContext=new FacetedMethodsBuilderContext(this,facetProcessor,layoutMetadataReaders);
    return new ObjectSpecificationDefault(cls,facetedMethodsBuilderContext,specContext,objectMemberDependencies);
  }
}
