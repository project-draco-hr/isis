{
  BasicConfigurator.configure();
  NakedObjectsClient nakedObjects=new NakedObjectsClient();
  Configuration configuration=new Configuration(new ConfigurationPropertiesLoader("server.properties",true));
  nakedObjects.setConfiguration(configuration);
  PropertyConfigurator.configure(configuration.getProperties("log4j"));
  JavaBusinessObjectContainer container=new JavaBusinessObjectContainer();
  new SystemClock();
  TransientObjectStore objectStore=new TransientObjectStore();
  DataFactory objectDataFactory=new JavaObjectDataFactory();
  SingleResponseUpdateNotifier updateNotifier=new SingleResponseUpdateNotifier();
  updateNotifier.setFactory(objectDataFactory);
  JavaObjectFactory objectFactory=new JavaObjectFactory();
  objectFactory.setContainer(container);
  container.setObjectFactory(objectFactory);
  OidGenerator oidGenerator=new SimpleOidGenerator();
  LocalObjectManager objectManager=new LocalObjectManager();
  objectManager.setObjectStore(objectStore);
  objectManager.setObjectFactory(objectFactory);
  objectManager.setOidGenerator(oidGenerator);
  objectManager.setCheckObjectsForDirtyFlag(true);
  nakedObjects.setObjectManager(objectManager);
  LocalReflectionFactory reflectionFactory=new LocalReflectionFactory();
  JavaReflectorFactory reflectorFactory=new JavaReflectorFactory();
  reflectorFactory.setObjectFactory(objectFactory);
  PojoAdapterFactoryImpl pojoAdapterFactory=new PojoAdapterFactoryImpl();
  pojoAdapterFactory.setPojoAdapterHash(new PojoAdapterHashImpl());
  pojoAdapterFactory.setReflectorFactory(reflectorFactory);
  nakedObjects.setPojoAdapterFactory(pojoAdapterFactory);
  nakedObjects.setReflectionFactory(reflectionFactory);
  NakedObjectSpecificationLoaderImpl specificationLoader=new NakedObjectSpecificationLoaderImpl();
  nakedObjects.setReflectorFactory(reflectorFactory);
  nakedObjects.setSpecificationLoader(specificationLoader);
  ServerDistribution sd=new ServerDistribution();
  sd.setObjectFactory(objectFactory);
  sd.setObjectDataFactory(objectDataFactory);
  ServerListener serverListener=new ServerListener();
  serverListener.setUpdateNotifier(updateNotifier);
  serverListener.setServerDistribution(sd);
  objectManager.addObjectChangedListener(updateNotifier);
  serverListener.start();
  JavaFixtureBuilder fb=new JavaFixtureBuilder();
  CitiesFixture cities;
  fb.addFixture(cities=new CitiesFixture());
  fb.addFixture(new BookingsFixture(cities));
  fb.addFixture(new ClassesFixture());
  fb.installFixtures();
  InfoDebugFrame debugFrame=new InfoDebugFrame(){
    public void dialogClosing(){
      System.exit(0);
    }
  }
;
  DebugInfo debugInfo=objectManager;
  debugFrame.setInfo(debugInfo);
  debugFrame.setBounds(10,10,1000,800);
  debugFrame.refresh();
  debugFrame.show();
}
