{
  super(id);
  addOrReplace(new NotificationPanel("feedback"));
  StatelessForm<Void> form=new StatelessForm<>("signUpForm");
  addOrReplace(form);
  final RequiredTextField<String> emailField=new RequiredTextField<>("email",Model.of(""));
  emailField.setLabel(new ResourceModel("emailLabel"));
  emailField.add(EmailAddressValidator.getInstance());
  emailField.add(EmailAvailableValidator.EXISTS);
  FormGroup formGroup=new FormGroup("formGroup",emailField);
  form.add(formGroup);
  formGroup.add(emailField);
  Button signUpButton=new Button("passwordResetSubmit"){
    @Override public void onSubmit(){
      super.onSubmit();
      String email=emailField.getModelObject();
      String confirmationUrl=createUrl(email);
      boolean emailSent=emailService.send(new PasswordResetEvent(email,confirmationUrl));
      if (emailSent) {
        Map<String,String> map=new HashMap<>();
        map.put("email",email);
        IModel<Map<String,String>> model=Model.ofMap(map);
        String emailSentMessage=getString("emailSentMessage",model);
        success(emailSentMessage);
      }
    }
  }
;
  form.add(signUpButton);
}
