{
  Locale locale=Locale.getDefault();
  Locale[] locales=new Locale[]{Locale.getDefault(),lookupLocale("en","US"),lookupLocale("en","GB"),lookupLocale("es","ES")};
  for (  Locale eachLocal : locales) {
    try {
      Locale.setDefault(eachLocal);
      Document xmlDoc=xmlSnapshotService.asDocument(xmlStr);
      Element rootEl=xmlDoc.getDocumentElement();
      assertThat(xmlSnapshotService.getChildElementValue(rootEl,"app:someString",String.class),is("OXF"));
      assertThat(xmlSnapshotService.getChildElementValue(rootEl,"app:someLocalDate",LocalDate.class),is(new LocalDate(2013,4,1)));
      assertThat(xmlSnapshotService.getChildElementValue(rootEl,"app:someBigDecimal",BigDecimal.class),is(new BigDecimal("123456789012345678901234567890.12345678")));
      assertThat(xmlSnapshotService.getChildElementValue(rootEl,"app:someBigInteger",BigInteger.class),is(new BigInteger("12345678901234567890123456789012345678")));
      assertThat(xmlSnapshotService.getChildElementValue(rootEl,"app:someInteger",Integer.class),is(new Integer(123456789)));
      assertThat(xmlSnapshotService.getChildElementValue(rootEl,"app:someLong",Long.class),is(new Long(1234567890123456789L)));
      assertThat(xmlSnapshotService.getChildElementValue(rootEl,"app:someShort",Short.class),is(new Short((short)12345)));
      assertThat(xmlSnapshotService.getChildElementValue(rootEl,"app:someByte",Byte.class),is(new Byte((byte)123)));
      assertThat(xmlSnapshotService.getChildElementValue(rootEl,"app:someBoolean",Boolean.class),is(Boolean.TRUE));
      assertThat(xmlSnapshotService.getChildElementValue(rootEl,"app:someBoolean2",Boolean.class),is(Boolean.FALSE));
    }
  finally {
      Locale.setDefault(locale);
    }
  }
}
