{
  final Description description=methodDescription(method);
  ConfigurationBuilder configurationBuilder=new ConfigurationBuilderDefault();
  configurationBuilder.add(SystemConstants.NOSPLASH_KEY,"" + true);
  InstallerLookupDefault installerLookup=new InstallerLookupDefault(getClass());
  configurationBuilder.injectInto(installerLookup);
  installerLookup.init();
  IsisSystemUsingInstallersWithinJunit system=null;
  AuthenticationSession session=null;
  try {
    final DeploymentType deploymentType=DeploymentType.PROTOTYPE;
    system=new IsisSystemUsingInstallersWithinJunit(deploymentType,installerLookup,getTestClass());
    system.init();
    AuthenticationRequest request;
    final LogonFixture logonFixture=system.getFixturesInstaller().getLogonFixture();
    if (logonFixture != null) {
      request=new AuthenticationRequestLogonFixture(logonFixture);
    }
 else {
      request=new AuthenticationRequestExploration(logonFixture);
    }
    session=IsisContext.getAuthenticationManager().authenticate(request);
    IsisContext.openSession(session);
    getTransactionManager().startTransaction();
    Object test=createTest();
    getServicesInjector().injectDependencies(test);
    final TestMethod testMethod=wrapMethod(method);
    new MethodRoadie(test,testMethod,notifier,description).run();
    getTransactionManager().endTransaction();
  }
 catch (  final InvocationTargetException e) {
    notifier.testAborted(description,e.getCause());
    getTransactionManager().abortTransaction();
    return;
  }
catch (  final Exception e) {
    notifier.testAborted(description,e);
    return;
  }
 finally {
    if (system != null) {
      if (session != null) {
        IsisContext.closeSession();
      }
      system.shutdown();
    }
  }
}
