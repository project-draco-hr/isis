{
  LogManager.getLoggerRepository().setThreshold(Level.ERROR);
  PropertyConfigurator.configure("log4j.testing.properties");
  new TestClock();
  new NakedObjectSpecificationLoaderImpl();
  NakedObjectSpecificationImpl.setReflectionFactory(new LocalReflectionFactory());
  NakedObjectSpecificationImpl.setReflectorFactory(new JavaReflectorFactory());
  manager=MockObjectManager.setup();
  ac=new ArbitraryCollectionVector("Objects");
  ac.setContext(manager.getContext());
  elements=new Role[SIZE];
  for (int i=0; i < elements.length; i++) {
    elements[i]=new Role();
    elements[i].getName().setValue("Element " + i);
    assertTrue(!ac.contains(elements[i]));
    ac.add(elements[i]);
    assertTrue(ac.contains(elements[i]));
  }
}
