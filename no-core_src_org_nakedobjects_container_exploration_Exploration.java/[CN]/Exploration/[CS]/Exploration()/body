{
  try {
    Properties p=Configuration.loadProperties("log4j.properties");
    PropertyConfigurator.configure(p);
  }
 catch (  ConfigurationException e) {
    BasicConfigurator.configure();
  }
  Logger.getRootLogger().setLevel(Level.WARN);
  NakedObjectManager objectManager=null;
  try {
    String name=this.getClass().getName();
    name=name.substring(name.lastIndexOf('.') + 1);
    loadConfiguration();
    Logger log=Logger.getLogger("Naked Objects");
    log.info(AboutNakedObjects.getName());
    log.info(AboutNakedObjects.getVersion());
    log.info(AboutNakedObjects.getBuildId());
    showSplash();
    setUpLocale();
    installSpecificationLoader();
    ObjectViewingMechanism viewer=installViewer();
    NakedObjectSpecificationImpl.setReflectionFactory(new LocalReflectionFactory());
    NakedObjectSpecificationImpl.setReflectorFactory(installReflectorFactory());
    objectManager=installObjectManager(viewer.getUpdateNotifier());
    context=new NakedObjectContext(objectManager);
    explorationSetUp=new ExplorationSetUp(context);
    setUpFixtures();
    setUpFixture();
    ExplorationContext applicationContext;
    User user;
    NakedObjectSpecification userClass=NakedObjectSpecificationLoader.getInstance().loadSpecification(User.class.getName());
    if (objectManager.hasInstances(userClass)) {
      NakedCollection users=objectManager.findInstances(userClass,name);
      if (users.size() == 0) {
        throw new NakedObjectRuntimeException("No users found: " + name);
      }
      user=(User)users.elements().nextElement();
      applicationContext=(ExplorationContext)user.getRootObject();
    }
 else {
      user=new User(name);
      user.setContext(context);
      user.getRoles().add(new Role("explorer"));
      applicationContext=new ExplorationContext();
      applicationContext.setContext(context);
      applicationContext.getName().setValue(name);
      applicationContext.associateUser(user);
      objectManager.makePersistent(applicationContext);
    }
    explorationSetUp.installFixtures();
    String[] classes=explorationSetUp.getClasses();
    for (int i=0; i < classes.length; i++) {
      applicationContext.addClass(classes[i]);
    }
    NakedCollection coll=objectManager.allInstances(userClass);
    applicationContext.setUpUsers(coll);
    ClientSession.getSession().setUser(user);
    NakedObject rootObject=user.getRootObject();
    if (rootObject == null) {
      LOG.warn("User had no root context, a default one has been assigned");
      rootObject=new DefaultUserContext();
      rootObject.created();
      objectManager.makePersistent(rootObject);
      user.setRootObject(rootObject);
      ((DefaultUserContext)rootObject).setUser(user);
    }
    viewer.setTitle(name);
    viewer.init(rootObject,this);
    viewer.start();
  }
 catch (  ConfigurationException e) {
    throw new NakedObjectRuntimeException(e);
  }
catch (  StartupException e) {
    if (objectManager == null) {
      objectManager.shutdown();
    }
    throw new NakedObjectRuntimeException(e);
  }
}
