{
  NakedObject object=createTestObject();
  NakedObject referenced=createReferencedObject();
  ((TestObject)object.getObject()).setReferencedObject((ReferencedObject)referenced.getObject());
  PersistenceCommand[] commands=new PersistenceCommand[]{objectStore.createCreateObjectCommand(object),objectStore.createCreateObjectCommand(referenced)};
  objectStore.runTransaction(commands);
  MockField field=new MockField(objectSpec);
  field.setupFieldContent(referenced);
  objectSpec.fields=new NakedObjectField[]{field};
  restartObjectStore();
  NakedObject instances[]=objectStore.getInstances(objectSpec,false);
  assertEquals(1,instances.length);
  NakedObject retrievedObject=instances[0];
  assertEquals(object,retrievedObject);
  assertNotSame(object,retrievedObject);
  assertTrue(retrievedObject.isResolved());
  assertTrue(retrievedObject.isPersistent());
  NakedObjectField fields[]=object.getFields();
  NakedObject retrievedReferenced=(NakedObject)retrievedObject.getField(fields[0]);
  Assert.assertEquals(referenced,retrievedReferenced);
  assertTrue(retrievedReferenced.isPersistent());
  assertFalse(retrievedReferenced.isResolved());
  assertEquals(referenced,retrievedReferenced);
  objectStore.resolveImmediately(object);
  assertFalse(retrievedReferenced.isResolved());
}
