{
  final String name=getClass().getName();
  debug.appendln("Root: " + name.substring(name.lastIndexOf('.') + 1) + getId());
  debug.indent();
  debug.appendln("required size",getRequiredSize(Size.createMax()));
  debug.appendln("given size",getSize());
  debug.appendln("padding",getPadding());
  debug.appendln("base line",getBaseline());
  debug.unindent();
  debug.appendln();
  debug.appendTitle("Specification");
  if (specification == null) {
    debug.append("\none");
  }
 else {
    debug.appendln(specification.getName());
    debug.appendln("  " + specification.getClass().getName());
    debug.appendln("  " + (specification.isOpen() ? "open" : "closed"));
    debug.appendln("  " + (specification.isReplaceable() ? "replaceable" : "non-replaceable"));
    debug.appendln("  " + (specification.isSubView() ? "subview" : "main view"));
  }
  debug.appendln();
  debug.appendTitle("View");
  debug.appendln("Self",getView());
  debug.appendln("Parent's size",getParent() == null ? new Size() : getParent().getSize());
  debug.appendln("Size w/in parent",getView().getRequiredSize(getParent() == null ? new Size() : getParent().getSize()));
  debug.appendln("Location w/in parent",getView().getLocation());
  debug.appendln("Changable",canChangeValue());
  debug.appendln("Focus",(canFocus() ? "focusable" : "non-focusable"));
  debug.appendln("Has focus",hasFocus());
  debug.appendln("Contains focus",containsFocus());
  debug.appendln("Focus manager",getFocusManager());
  debug.appendln("State",getState());
  debug.appendln("Axes",getViewAxes());
  appendDebug(debug);
  debug.appendln("Workspace",getWorkspace());
  View p=getParent();
  debug.appendln("Parent hierarchy:" + (p == null ? "none" : ""));
  debug.indent();
  while (p != null) {
    debug.appendln(p.toString());
    p=p.getParent();
  }
  debug.unindent();
  debug.appendln();
  debug.appendln();
  debug.appendln();
  debug.appendTitle("View structure");
  debug.appendln(getSpecification().getName().toUpperCase());
  debugStructure(debug);
}
