{
  LOG.debug("processing request " + servletPath);
  final AuthenticationSession session=UserManager.startRequest(context);
  LOG.debug("exsiting session: " + session);
  String language=(String)context.getVariable("user-language");
  if (language != null) {
    Locale locale=Util.locale(language);
    TimeZone timeZone=Util.timeZone((String)context.getVariable("user-time-zone"));
  }
  IsisContext.getPersistenceSession().getTransactionManager().startTransaction();
  context.setRequestPath(servletPath);
  context.startRequest();
  try {
    processActions(context,false,servletPath);
    processTheView(context);
  }
 catch (  final ScimpiNotFoundException e) {
    if (context.isInternalRequest()) {
      LOG.error("invalid page request (from within application): " + e.getMessage());
      ErrorCollator error=new ErrorCollator();
      error.missingFile("Failed to find page " + servletPath + ".");
      show500ErrorPage(context,e,error);
    }
 else {
      LOG.info("invalid page request (from outside application): " + e.getMessage());
      show404ErrorPage(context,servletPath);
    }
  }
catch (  final NotLoggedInException e) {
    redirectToLoginPage(context);
  }
catch (  final Throwable e) {
    ErrorCollator error=new ErrorCollator();
    final PersistenceSession checkSession=IsisContext.getPersistenceSession();
    final IsisTransactionManager transactionManager=checkSession.getTransactionManager();
    if (transactionManager.getTransaction() != null && transactionManager.getTransaction().getState().canAbort()) {
      transactionManager.abortTransaction();
      transactionManager.startTransaction();
    }
    final Throwable ex=e instanceof TagProcessingException ? e.getCause() : e;
    if (ex instanceof ForbiddenException) {
      LOG.error("invalid access to " + servletPath,e);
      show403ErrorPage(context,error,e,ex);
    }
 else {
      LOG.error("error procesing " + servletPath,e);
      if (context.getErrorMessage() != null) {
        fallbackToSimpleErrorPage(context,e);
      }
 else {
        show500ErrorPage(context,e,error);
      }
    }
  }
 finally {
    try {
      UserManager.endRequest(context.getSession());
    }
 catch (    final Exception e1) {
      LOG.error("endRequest call failed",e1);
    }
  }
}
