{
  if (data == null) {
    return null;
  }
  final ObjectSpecification spec=getSpecificationLoader().loadSpecification(data.getClassName());
  ObjectAdapter adapter;
  final Oid oid=getOid();
  if (spec.isParentedOrFreeCollection()) {
    final Object recreatedPojo=spec.createObject();
    adapter=getPersistenceSession().getAdapterManager().mapRecreatedPojo(oid,recreatedPojo);
    populateCollection(adapter,(CollectionData)data);
  }
 else {
    Assert.assertTrue("oid must be a TypedOid representing an object because spec is not a collection and cannot be a value",oid instanceof TypedOid);
    TypedOid typedOid=(TypedOid)oid;
    adapter=getAdapterManager().getAdapterFor(typedOid);
    if (adapter != null) {
      getAdapterManager().removeAdapter(adapter);
    }
    adapter=getAdapterManager().adapterFor(typedOid);
    updateObject(adapter,data);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("recreated object " + adapter.getOid());
  }
  return adapter;
}
