{
  getTransactionManager().startTransaction();
  for (  final Object service : servicesInjector.getRegisteredServices()) {
    final ObjectSpecification serviceSpecification=specificationLoader.loadSpecification(service.getClass());
    serviceSpecification.markAsService();
    final RootOid existingOid=getOidForService(serviceSpecification);
    ObjectAdapter serviceAdapter;
    if (existingOid == null) {
      serviceAdapter=getAdapterManager().adapterFor(service);
    }
 else {
      serviceAdapter=getAdapterManager().mapRecreatedPojo(existingOid,service);
    }
    if (serviceAdapter.getOid().isTransient()) {
      adapterManager.remapAsPersistent(serviceAdapter,null);
    }
    serviceAdapter.markAsResolvedIfPossible();
    if (existingOid == null) {
      final RootOid persistentOid=(RootOid)serviceAdapter.getOid();
      registerService(persistentOid);
    }
  }
  getTransactionManager().endTransaction();
}
