{
  final CssClassFacetOnMemberFactory facetFactory=new CssClassFacetOnMemberFactory();
  facetFactory.setSpecificationLookup(mockSpecificationLoaderSpi);
class Customer {
    @CssClass(value="user") public String getName(){
      return "Joe";
    }
  }
  expectNoMethodsRemoved();
  facetedMethod=FacetedMethod.createForProperty(Customer.class,"name");
  facetFactory.process(new FacetFactory.ProcessMethodContext(Customer.class,null,null,facetedMethod.getMethod(),mockMethodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(CssClassFacet.class);
  assertThat(facet,is(not(nullValue())));
  assertThat(facet instanceof CssClassFacetAbstract,is(true));
  final CssClassFacetAbstract cssClassFacetAbstract=(CssClassFacetAbstract)facet;
  assertThat(cssClassFacetAbstract.value(),equalTo("user"));
}
