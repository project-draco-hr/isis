{
  Locale.setDefault(Locale.UK);
  mockFacetHolder=mockery.mock(FacetHolder.class);
  mockConfiguration=mockery.mock(IsisConfiguration.class);
  mockContext=mockery.mock(ValueSemanticsProviderContext.class);
  mockDependencyInjector=mockery.mock(ServicesInjector.class);
  mockAdapterManager=mockery.mock(AdapterManager.class);
  mockAuthenticationSessionProvider=mockery.mock(AuthenticationSessionProvider.class);
  mockSpecificationLoader=mockery.mock(SpecificationLoaderSpi.class);
  mockery.checking(new Expectations(){
{
      allowing(mockConfiguration).getString(with(any(String.class)),with(any(String.class)));
      will(returnArgument(1));
      allowing(mockConfiguration).getBoolean(with(any(String.class)),with(any(Boolean.class)));
      will(returnArgument(1));
      allowing(mockConfiguration).getString("isis.locale");
      will(returnValue(null));
      allowing(mockDependencyInjector).injectServicesInto(with(any(Object.class)));
      never(mockAuthenticationSessionProvider);
      never(mockAdapterManager);
    }
  }
);
  mockAdapter=mockery.mock(ObjectAdapter.class);
}
