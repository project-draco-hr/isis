{
  SqlIntegrationTestSingleton.drop("ISIS_POLYTESTCLASS");
  SqlIntegrationTestSingleton.drop("ISIS_POLYSUBCLASSONE");
  SqlIntegrationTestSingleton.drop("ISIS_POLYSUBCLASSTWO");
  SqlIntegrationTestSingleton.drop("ISIS_POLYINTERFACEIMPLA");
  SqlIntegrationTestSingleton.drop("ISIS_POLYINTERFACEIMPLB");
  final SqlDataClassFactory factory=SqlIntegrationTestSingleton.getSqlDataClassFactory();
  final PolyTestClass polyTestClass=factory.newPolyTestClass();
  polyTestClass.setString("polyTestClassString");
  polyTestClass.getPolyTestClasses().add(polyTestClass);
  polyIntImpA=factory.newPolyInterfaceImplA();
  polyIntImpA.setString("Impl A String");
  factory.save(polyIntImpA);
  polyTestClass.setPolyInterfaceType(polyIntImpA);
  factory.save(polyTestClass);
  if (getProperties().getProperty("isis.persistor") == "in-memory") {
    getSingletonInstance().setState(1);
  }
}
