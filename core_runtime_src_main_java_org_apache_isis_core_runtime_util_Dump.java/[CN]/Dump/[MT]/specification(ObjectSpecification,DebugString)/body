{
  try {
    debug.appendTitle(specification.getClass().getName());
    debug.appendAsHexln("Hash code",specification.hashCode());
    debug.appendln("ID",specification.getIdentifier());
    debug.appendln("Full Name",specification.getFullName());
    debug.appendln("Short Name",specification.getShortName());
    debug.appendln("Singular Name",specification.getName());
    debug.appendln("Plural Name",specification.getPluralName());
    debug.appendln("Description",specification.getDescription());
    debug.blankLine();
    debug.appendln("Features",featureList(specification));
    debug.appendln("Type",specification.isCollection() ? "Collection" : "Object");
    if (specification.superclass() != null) {
      debug.appendln("Superclass",specification.superclass().getFullName());
    }
    debug.appendln("Interfaces",specificationNames(specification.interfaces()));
    debug.appendln("Subclasses",specificationNames(specification.subclasses()));
    debug.blankLine();
    debug.appendln("Service",specification.isService());
    debug.appendln("Encodable",specification.isEncodeable());
    debug.appendln("Parseable",specification.isParseable());
    debug.appendln("Aggregated",specification.isValueOrIsAggregated());
  }
 catch (  final RuntimeException e) {
    debug.appendException(e);
  }
  if (specification instanceof DebugInfo) {
    ((DebugInfo)specification).debugData(debug);
  }
  debug.blankLine();
  debug.appendln("Facets");
  final Class<? extends Facet>[] facetTypes=specification.getFacetTypes();
  debug.indent();
  if (facetTypes.length == 0) {
    debug.appendln("none");
  }
 else {
    for (int i=0; i < facetTypes.length; i++) {
      final Class<? extends Facet> type=facetTypes[i];
      final Facet facet=specification.getFacet(type);
      debug.appendln(facet.toString());
    }
  }
  debug.unindent();
  debug.blankLine();
  debug.appendln("Fields");
  debug.indent();
  specificationFields(specification,debug);
  debug.unindent();
  debug.appendln("Object Actions");
  debug.indent();
  specificationActionMethods(specification,debug);
  debug.unindent();
  debug.appendln("Related Service Actions");
  debug.indent();
  specificationServiceMethods(specification,debug);
  debug.unindent();
}
