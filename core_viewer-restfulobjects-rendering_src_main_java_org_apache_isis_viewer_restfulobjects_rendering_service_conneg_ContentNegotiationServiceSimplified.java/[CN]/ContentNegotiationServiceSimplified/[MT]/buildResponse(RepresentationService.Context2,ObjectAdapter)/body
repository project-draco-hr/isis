{
  final RepresentationType representationType=RepresentationType.DOMAIN_OBJECT;
  final List<MediaType> acceptableMediaTypes=renderContext2.getAcceptableMediaTypes();
  boolean canAccept=canAccept(representationType,acceptableMediaTypes,ACCEPT_OBJECT);
  if (!canAccept) {
    return null;
  }
  JsonRepresentation representation=JsonRepresentation.newMap();
  List<OneToOneAssociation> properties=objectAdapter.getSpecification().getProperties(Contributed.INCLUDED);
  for (  OneToOneAssociation property : properties) {
    Consent visibility=property.isVisible(objectAdapter,InteractionInitiatedBy.USER,Where.ANYWHERE);
    if (visibility.isAllowed()) {
    }
  }
  final DomainObjectReprRenderer renderer=new DomainObjectReprRenderer(renderContext2,null,representation);
  renderer.with(objectAdapter).includesSelf();
  final Response.ResponseBuilder responseBuilder=Responses.ofOk(renderer,Caching.NONE);
  final Version version=objectAdapter.getVersion();
  if (version != null && version.getTime() != null) {
    responseBuilder.tag(ETAG_FORMAT.format(version.getTime()));
  }
  return null;
}
