{
  if (object.getResolveState().isPersistent() || object.persistable() == Persistable.TRANSIENT) {
    return;
  }
  LOG.info("persist " + object);
  NakedObjects.getObjectLoader().madePersistent(object,createOid(object));
  NakedObjectField[] fields=object.getFields();
  for (int i=0; i < fields.length; i++) {
    NakedObjectField field=fields[i];
    if (field.isDerived()) {
      continue;
    }
 else     if (field.isValue()) {
      continue;
    }
 else     if (field instanceof OneToManyAssociation) {
      continue;
    }
 else {
      Object fieldValue=object.getField(field);
      if (fieldValue == null) {
        continue;
      }
      if (!(fieldValue instanceof NakedObject)) {
        throw new NakedObjectRuntimeException();
      }
      makePersistent((NakedObject)fieldValue,persistor);
    }
  }
  for (int i=0; i < fields.length; i++) {
    NakedObjectField field=fields[i];
    if (field.isDerived()) {
      continue;
    }
 else     if (field.isValue()) {
      continue;
    }
 else     if (field instanceof OneToManyAssociation) {
      InternalCollection collection=(InternalCollection)object.getField(field);
      makePersistent(collection,persistor);
      collection.changeState(ResolveState.RESOLVED);
      for (int j=0; j < collection.size(); j++) {
        makePersistent(collection.elementAt(j),persistor);
      }
    }
 else {
      continue;
    }
  }
  persistor.createObject(object);
}
