{
  context.checking(new Expectations(){
{
      one(reader2).readOid();
      will(returnValue("EPR:4"));
      one(reader2).readEncrytionType();
      will(returnValue("etc1"));
      one(reader2).readVersion();
      will(returnValue("3"));
      one(reader2).readUser();
      will(returnValue("username"));
      one(reader2).readTime();
      will(returnValue("1020"));
      one(versionCreator).version("3","username","1020");
      one(reader2).readField("reference");
      will(returnValue("EPV:3"));
      one(reader2).readAggregate("aggregatedReference");
      will(returnValue(null));
    }
  }
);
  final ObjectAdapter readObject=objectReader.load(reader2,versionCreator,dataEncrypter);
  assertEquals(oid4,readObject.getOid());
  assertEquals(ResolveState.RESOLVED,readObject.getResolveState());
  final ExamplePojoWithReferences pojo=(ExamplePojoWithReferences)readObject.getObject();
  assertEquals(null,pojo.getAggregatedReference());
  assertThat(pojo.getReference(),CoreMatchers.instanceOf(ExamplePojoWithValues.class));
  context.assertIsSatisfied();
}
