{
  final Object collectionOrArray=ObjectAdapter.InvokeUtils.invoke(method,owningAdapter,searchArg);
  if (collectionOrArray == null) {
    return new Object[0];
  }
  final ObjectAdapter collectionAdapter=getAdapterManager().adapterFor(collectionOrArray);
  final FacetedMethodParameter facetedMethodParameter=(FacetedMethodParameter)getFacetHolder();
  final Class<?> parameterType=facetedMethodParameter.getType();
  final List<ObjectAdapter> visibleAdapters=ObjectAdapter.Util.visibleAdapters(collectionAdapter,parameterType,authenticationSession,deploymentCategory,getSpecificationLookup());
  final List<Object> filteredObjects=Lists.newArrayList(Iterables.transform(visibleAdapters,ObjectAdapter.Functions.getObject()));
  final ObjectSpecification parameterSpec=getSpecification(parameterType);
  return CollectionUtils.getCollectionAsObjectArray(filteredObjects,parameterSpec,getAdapterManager());
}
