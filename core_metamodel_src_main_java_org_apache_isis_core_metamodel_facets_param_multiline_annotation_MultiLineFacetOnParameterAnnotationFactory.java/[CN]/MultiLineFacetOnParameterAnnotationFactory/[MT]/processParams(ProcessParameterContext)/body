{
  final Class<?>[] parameterTypes=processParameterContext.getMethod().getParameterTypes();
  final FacetedMethodParameter holder=processParameterContext.getFacetHolder();
  final int paramNum=processParameterContext.getParamNum();
  if (paramNum >= parameterTypes.length) {
    return;
  }
  final Class<?> parameterType=parameterTypes[paramNum];
  final Annotation[] parameterAnnotations=Annotations.getParameterAnnotations(processParameterContext.getMethod())[paramNum];
  for (  final Annotation parameterAnnotation : parameterAnnotations) {
    if (parameterAnnotation instanceof MultiLine) {
      final MultiLine annotation=(MultiLine)parameterAnnotation;
      final MultiLineFacet facet1=MultiLineFacetOnParameterAnnotation.create(annotation,parameterType,holder);
      FacetUtil.addFacet(validator.flagIfPresent(facet1));
      final MultiLineFacet facet=facet1;
      inferPropParamLayoutFacet(facet);
      return;
    }
  }
}
