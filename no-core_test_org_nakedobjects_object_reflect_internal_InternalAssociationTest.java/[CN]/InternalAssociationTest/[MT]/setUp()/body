{
  super.setUp();
  Logger.getRootLogger().setLevel(Level.OFF);
  system=new TestSystem();
  system.init();
  spec1=new DummyNakedObjectSpecification();
  system.addSpecification(spec1);
  spec2=new DummyNakedObjectSpecification(InternalObjectForReferencing.class.getName());
  system.addSpecification(spec2);
  spec3=new DummyNakedObjectSpecification(InternalObjectWithOneToOneAssociations.class.getName());
  system.addSpecification(spec3);
  objectWithOneToOneAssoications=new InternalObjectWithOneToOneAssociations();
  object=system.createAdapterForTransient(objectWithOneToOneAssoications);
  Class cls=InternalObjectWithOneToOneAssociations.class;
  Method get=cls.getDeclaredMethod("getReferencedObject",new Class[0]);
  Method set=cls.getDeclaredMethod("setReferencedObject",new Class[]{InternalObjectForReferencing.class});
  Method about=cls.getDeclaredMethod("aboutReferencedObject",new Class[]{InternalAbout.class,InternalObjectForReferencing.class});
  personField=new InternalOneToOneAssociation(PERSON_FIELD_NAME,InternalObjectForReferencing.class,get,set,null,null,about);
  referencedObject=new InternalObjectForReferencing();
  associate=system.createAdapterForTransient(referencedObject);
}
