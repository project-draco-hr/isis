{
  final FacetHolder holder=processMethodContext.getFacetHolder();
  Properties properties=processMethodContext.metadataProperties("propertyLayout");
  if (properties == null) {
    properties=processMethodContext.metadataProperties("layout");
  }
  final PropertyLayout propertyLayout=Annotations.getAnnotation(processMethodContext.getMethod(),PropertyLayout.class);
  CssClassFacet cssClassFacet=CssClassFacetOnPropertyFromLayoutProperties.create(properties,holder);
  if (cssClassFacet == null) {
    cssClassFacet=CssClassFacetForPropertyLayoutAnnotation.create(propertyLayout,holder);
  }
  FacetUtil.addFacet(cssClassFacet);
  DescribedAsFacet describedAsFacet=DescribedAsFacetOnPropertyFromLayoutProperties.create(properties,holder);
  if (describedAsFacet == null) {
    describedAsFacet=DescribedAsFacetForPropertyLayoutAnnotation.create(propertyLayout,holder);
  }
  FacetUtil.addFacet(describedAsFacet);
  HiddenFacet hiddenFacet=HiddenFacetOnPropertyFromLayoutProperties.create(properties,holder);
  if (hiddenFacet == null) {
    hiddenFacet=HiddenFacetForPropertyLayoutAnnotation.create(propertyLayout,holder);
  }
  FacetUtil.addFacet(hiddenFacet);
  LabelAtFacet labelAtFacet=LabelAtFacetOnPropertyFromLayoutProperties.create(properties,holder);
  if (labelAtFacet == null) {
    labelAtFacet=LabelAtFacetForPropertyLayoutAnnotation.create(propertyLayout,holder);
  }
  FacetUtil.addFacet(labelAtFacet);
  MultiLineFacet multiLineFacet=MultiLineFacetOnPropertyFromLayoutProperties.create(properties,holder);
  if (multiLineFacet == null) {
    multiLineFacet=MultiLineFacetForPropertyLayoutAnnotation.create(propertyLayout,holder);
  }
  FacetUtil.addFacet(multiLineFacet);
  NamedFacet namedFacet=NamedFacetOnPropertyFromLayoutProperties.create(properties,holder);
  if (namedFacet == null) {
    namedFacet=NamedFacetForPropertyLayoutAnnotation.create(propertyLayout,holder);
  }
  FacetUtil.addFacet(namedFacet);
  RenderedAdjustedFacet renderedAdjustedFacet=RenderedAdjustedFacetOnPropertyFromLayoutProperties.create(properties,holder);
  if (renderedAdjustedFacet == null) {
    renderedAdjustedFacet=RenderedAdjustedFacetForPropertyLayoutAnnotation.create(propertyLayout,holder);
  }
  FacetUtil.addFacet(renderedAdjustedFacet);
  TypicalLengthFacet typicalLengthFacet=TypicalLengthFacetOnPropertyFromLayoutProperties.create(properties,holder);
  if (typicalLengthFacet == null) {
    typicalLengthFacet=TypicalLengthFacetForPropertyLayoutAnnotation.create(propertyLayout,holder);
  }
  FacetUtil.addFacet(typicalLengthFacet);
}
