{
  final String id=saved.getId(adapter);
  writer.println(adapter.getSpecification().getFullIdentifier() + "#" + id);
  final ObjectSpecification adapterSpec=adapter.getSpecification();
  final List<ObjectAssociation> associations=adapterSpec.getAssociations(Contributed.EXCLUDED);
  for (  final ObjectAssociation association : associations) {
    if (association.isNotPersisted()) {
      continue;
    }
    final ObjectAdapter associatedObject=association.get(adapter,InteractionInitiatedBy.FRAMEWORK);
    final boolean isEmpty=association.isEmpty(adapter,InteractionInitiatedBy.FRAMEWORK);
    final String associationId=association.getId();
    writer.write("  " + associationId + ": ");
    if (isEmpty) {
      writer.println();
      continue;
    }
    if (association.isOneToManyAssociation()) {
      final CollectionFacet facet=associatedObject.getSpecification().getFacet(CollectionFacet.class);
      for (      final ObjectAdapter element : facet.iterable(associatedObject)) {
        final String refId=saved.getId(element);
        final String cls=element.getSpecification().getFullIdentifier();
        writer.print(cls + "#" + refId+ " ");
      }
      writer.println();
    }
 else     if (association.getSpecification().isParseable()) {
      final ParseableFacet facet=associatedObject.getSpecification().getFacet(ParseableFacet.class);
      String encodedValue=facet.parseableTitle(associatedObject);
      encodedValue=encodedValue.replaceAll("\n","\\n");
      writer.println(encodedValue);
    }
 else     if (association.isOneToOneAssociation()) {
      final String refId=saved.getId(associatedObject);
      final String cls=associatedObject.getSpecification().getFullIdentifier();
      writer.println(cls + "#" + refId);
    }
  }
}
