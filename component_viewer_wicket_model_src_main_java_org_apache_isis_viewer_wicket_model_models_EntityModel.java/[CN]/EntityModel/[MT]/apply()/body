{
  ObjectAdapter adapter=getObjectAdapterMemento().getObjectAdapter(ConcurrencyChecking.CHECK);
  for (  final ScalarModel scalarModel : propertyScalarModels.values()) {
    final OneToOneAssociation property=scalarModel.getPropertyMemento().getProperty();
    if (property.containsDoOpFacet(DisabledFacet.class)) {
      continue;
    }
    final ObjectAdapter associate=scalarModel.getObject();
    property.set(adapter,associate);
  }
  final RecreatableObjectFacet recreatableObjectFacet=adapter.getSpecification().getFacet(RecreatableObjectFacet.class);
  if (recreatableObjectFacet != null) {
    final Object viewModel=adapter.getObject();
    final boolean cloneable=recreatableObjectFacet.isCloneable(viewModel);
    if (cloneable) {
      final Object newViewModel=recreatableObjectFacet.clone(viewModel);
      adapter=getAdapterManager().adapterFor(newViewModel);
    }
  }
  getObjectAdapterMemento().setAdapter(adapter);
  toViewMode();
  return adapter;
}
