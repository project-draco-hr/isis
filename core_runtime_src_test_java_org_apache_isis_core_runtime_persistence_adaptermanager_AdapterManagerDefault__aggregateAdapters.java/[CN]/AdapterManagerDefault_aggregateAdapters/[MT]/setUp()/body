{
  org.apache.log4j.Logger.getRootLogger().setLevel(org.apache.log4j.Level.OFF);
  context.ignoring(mockRuntimeContext);
  context.ignoring(mockAuthenticationSession);
  context.ignoring(mockConfiguration);
  isisMetaModel=new IsisMetaModel(mockRuntimeContext,new ProgrammingModelFacetsJava5(),Lists.newArrayList(new CustomerRepository()));
  isisMetaModel.init();
  adapterFactory=new PojoAdapterFactory(adapterManager,mockSpecificationLoader,mockAuthenticationSession){
    @Override protected Localization getLocalization(){
      return mockLocalization;
    }
  }
;
  adapterManager=new AdapterManagerDefault(){
    @Override protected SpecificationLoaderSpi getSpecificationLoader(){
      return isisMetaModel.getSpecificationLoader();
    }
    @Override protected PojoAdapterFactory getObjectAdapterFactory(){
      return adapterFactory;
    }
    @Override public OidGenerator getOidGenerator(){
      return mockOidGenerator;
    }
    @Override protected ServicesInjector getServicesInjector(){
      return isisMetaModel.getDependencyInjector();
    }
  }
;
  rootObject=new Customer();
  aggregatedObject=new Name();
  persistentParentAdapter=adapterManager.mapRecreatedPojo(RootOid.create(ObjectSpecId.of("CUS"),"1"),rootObject);
}
