{
@edu.umd.cs.findbugs.annotations.SuppressWarnings("UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS") class Customer {
    @SuppressWarnings("unused") public void deleted(){
    }
    @SuppressWarnings("unused") public void removed(){
    }
  }
  final Method removeMethod=findMethod(Customer.class,"removed");
  final Method deleteMethod=findMethod(Customer.class,"deleted");
  removeFacetFactory.process(Customer.class,methodRemover,facetHolder);
  deleteFacetFactory.process(Customer.class,methodRemover,facetHolder);
  final Facet facet=facetHolder.getFacet(RemovedCallbackFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof RemovedCallbackFacetViaMethod);
  final RemovedCallbackFacetViaMethod removedCallbackFacetViaMethod=(RemovedCallbackFacetViaMethod)facet;
  List<Method> methods=removedCallbackFacetViaMethod.getMethods();
  assertTrue(methods.contains(removeMethod));
  assertTrue(methods.contains(deleteMethod));
  assertTrue(methodRemover.getRemoveMethodMethodCalls().contains(removeMethod));
}
