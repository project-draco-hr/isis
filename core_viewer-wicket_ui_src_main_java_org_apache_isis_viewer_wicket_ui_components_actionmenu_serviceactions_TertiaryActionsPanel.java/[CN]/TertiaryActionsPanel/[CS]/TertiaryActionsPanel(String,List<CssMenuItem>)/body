{
  super(id);
  addLogoutLink(this);
  final List<CssMenuItem> subMenuItems=flatten(menuItems);
  final ListView<CssMenuItem> subMenuItemsView=new ListView<CssMenuItem>("subMenuItems",subMenuItems){
    @Override protected void populateItem(    ListItem<CssMenuItem> listItem){
      CssMenuItem subMenuItem=listItem.getModelObject();
      if (subMenuItem.hasSubMenuItems()) {
        addFolderItem(subMenuItem,listItem);
      }
 else {
        ServiceActionUtil.addLeafItem(subMenuItem,listItem,TertiaryActionsPanel.this);
      }
    }
  }
;
  WebComponent divider=new WebComponent("divider"){
    @Override protected void onConfigure(){
      super.onConfigure();
      subMenuItemsView.configure();
      setVisible(!subMenuItems.isEmpty());
    }
  }
;
  add(subMenuItemsView,divider);
}
