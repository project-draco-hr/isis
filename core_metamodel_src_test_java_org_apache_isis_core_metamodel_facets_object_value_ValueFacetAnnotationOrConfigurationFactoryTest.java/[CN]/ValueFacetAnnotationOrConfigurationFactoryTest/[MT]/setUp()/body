{
  super.setUp();
  mockDeploymentCategoryProvider=context.mock(DeploymentCategoryProvider.class);
  mockAuthenticationSessionProvider=context.mock(AuthenticationSessionProvider.class);
  final AuthenticationSession mockAuthenticationSession=context.mock(AuthenticationSession.class);
  context.checking(new Expectations(){
{
      allowing(mockDeploymentCategoryProvider).getDeploymentCategory();
      will(returnValue(DeploymentCategory.PRODUCTION));
      allowing(mockAuthenticationSessionProvider).getAuthenticationSession();
      will(returnValue(mockAuthenticationSession));
    }
  }
);
  facetFactory=new ValueFacetAnnotationOrConfigurationFactory();
  isisConfigurationDefault=new IsisConfigurationDefault();
  facetFactory.setConfiguration(isisConfigurationDefault);
  facetFactory.setAuthenticationSessionProvider(mockAuthenticationSessionProvider);
  facetFactory.setDeploymentCategory(DeploymentCategory.PRODUCTION);
}
