{
  if (isProfile) {
    if (isOptions) {
      if (tagName.equals("option")) {
        optionName=attributes.getValue("id");
        data.setLength(0);
      }
 else       if (tagName.equals("options")) {
        final String optionsName=attributes.getValue("id");
        final Options newOptions=new Options();
        options.peek().addOptions(optionsName,newOptions);
        options.push(newOptions);
      }
 else {
        throw new SAXException("Invalid element in options: " + tagName);
      }
    }
 else     if (isPerspectives) {
      if (perspective != null) {
        if (isServices) {
          if (tagName.equals("service")) {
            final String serviceId=attributes.getValue("id");
            final List<Object> serviceObjects=IsisContext.getServices();
            for (            final Object service : serviceObjects) {
              if (ServiceUtil.id(service).equals(serviceId)) {
                perspective.addToServices(service);
                break;
              }
            }
          }
 else {
            throw new SAXException("Invalid element in services: " + tagName);
          }
        }
 else         if (isObjects) {
        }
 else         if (tagName.equals("services")) {
          isServices=true;
        }
 else         if (tagName.equals("objects")) {
          isObjects=true;
        }
 else {
          throw new SAXException("Invalid element in perspective: " + tagName);
        }
      }
 else       if (tagName.equals("perspective")) {
        perspective=userProfile.newPerspective(attributes.getValue("name"));
      }
 else {
        throw new SAXException("Invalid element in perspectives: " + tagName);
      }
    }
 else     if (tagName.equals("options")) {
      isOptions=true;
      options.push(userProfile.getOptions());
    }
 else     if (tagName.equals("perspectives") && !isOptions) {
      isPerspectives=true;
    }
 else {
      throw new SAXException("Invalid element in profile: " + tagName);
    }
  }
  if (tagName.equals("profile")) {
    isProfile=true;
  }
}
