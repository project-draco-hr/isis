{
  LOG.debug("rebuild view " + view + " for "+ object);
  View[] subviews=view.getSubviews();
  int fld=0;
  for (int i=0; i < subviews.length; i++) {
    View subview=subviews[i];
    while (((FieldContent)subview.getContent()).getField() != flds[fld]) {
      fld++;
    }
    Assert.assertTrue(fld < flds.length);
    NakedObjectField field=flds[fld];
    try {
      Naked value=object.getField(field);
      if (field.isValue()) {
        NakedObject existing=((ValueField)subview.getContent()).getObject();
        if (value != existing) {
        }
        subview.refresh();
      }
 else       if (value instanceof NakedCollection) {
        subview.update((NakedObject)value);
      }
 else {
        NakedObject existing=((ObjectContent)subviews[i].getContent()).getObject();
        boolean changeToNull=value == null && existing != null;
        boolean changedFromNull=value != null && existing == null;
        if (changeToNull || changedFromNull) {
          View fieldView=subviewDesign.createSubview(createContent(object,value,field),view.getViewAxis());
          if (fieldView != null) {
            view.replaceView(subview,decorateSubview(fieldView));
          }
        }
      }
    }
 catch (    NakedObjectDefinitionException e) {
      LOG.error("Invalid field",e);
      view.addView(new FieldErrorView(e.getMessage()));
    }
    fld++;
  }
}
