{
  subtitle("Set up the new booking");
  nextStep();
  TestObject booking=getTestClass(Booking.class.getName()).newInstance();
  nextStep("Specify the city that the booking is for");
  TestObject city=getTestClass(City.class.getName()).findInstance("New York");
  booking.associate("City",city);
  nextStep("As this is for a new customer one should be specified rather than looked up");
  TestObject customer=getTestClass(Customer.class.getName()).newInstance();
  booking.associate("Customer",customer);
  customer.fieldEntry("First Name","Richard");
  customer.fieldEntry("Last Name","Pawson");
  nextStep("Specify pick up and drop off locations");
  TestObject pickup=city.invokeAction("New Location");
  pickup.fieldEntry("Street Address","234 E 42nd Street");
  booking.associate("Pick Up",pickup);
  TestObject dropoff=city.invokeAction("New Location");
  dropoff.fieldEntry("Street Address","JFK Airport, BA Terminal");
  booking.associate("Drop Off",dropoff);
  nextStep("Specify when to pick up.");
  booking.fieldEntry("Date","+2");
  booking.fieldEntry("Time","2:30:00 PM");
  booking.assertFieldContains("Date",new Date(2001,12,16));
  nextStep("Specify the  payment method.");
  TestObject payment=getTestClass("Credit Cards").newInstance();
  booking.associate("Payment Method",payment);
  payment.fieldEntry("Name On Card","Richard W Pawson");
  payment.fieldEntry("Number","492783451234");
  payment.fieldEntry("Expires","01.04");
  nextStep("Specify other details.");
  TestObject phone=getTestClass("Telephones").newInstance();
  booking.associate("Contact Telephone",phone);
  phone.fieldEntry("Number","6175551234");
  nextStep("Ask the customer if this is a regular number (e.g. a mobile) and if so, associate it with the customer for future use");
  phone.fieldEntry("Known As","Mobile");
  customer.associate("Phone Numbers",phone);
  nextStep("Check it is available.");
  booking.invokeAction("Check Availability");
  booking.assertFieldContains("Status",new TextString("Available"));
  nextStep("And then confirm.");
  booking.invokeAction("Confirm");
  booking.assertFieldContains("Status","Confirmed");
  customer.assertFieldContains("Locations",pickup);
  customer.assertFieldContains("Locations",dropoff);
}
