{
  final String name=getModel().getName();
  checkBox=createCheckBox(ID_SCALAR_VALUE);
  checkBox.setLabel(Model.of(name));
  final FormGroup labelIfRegular=new FormGroup(ID_SCALAR_IF_REGULAR,checkBox);
  labelIfRegular.add(checkBox);
  if (getModel().isRequired()) {
    labelIfRegular.add(new CssClassAppender("mandatory"));
  }
  final String describedAs=getModel().getDescribedAs();
  if (describedAs != null) {
    labelIfRegular.add(new AttributeModifier("title",Model.of(describedAs)));
  }
  final Label scalarName=new Label(ID_SCALAR_NAME,getRendering().getLabelCaption(checkBox));
  labelIfRegular.add(scalarName);
  NamedFacet namedFacet=getModel().getFacet(NamedFacet.class);
  if (namedFacet != null) {
    scalarName.setEscapeModelStrings(namedFacet.escaped());
  }
  final List<LinkAndLabel> entityActions=EntityActionUtil.getEntityActionLinksForAssociation(this.scalarModel,getDeploymentType());
  addPositioningCssTo(labelIfRegular,entityActions);
  addOrReplace(labelIfRegular);
  addFeedbackTo(labelIfRegular,checkBox);
  addEntityActionLinksBelowAndRight(labelIfRegular,entityActions);
  return labelIfRegular;
}
