{
  final LayoutMetadata metadata=new LayoutMetadata();
  metadata.setColumns(Lists.<ColumnRepr>newArrayList());
  final MemberGroupLayoutFacet mglf=objectSpec.getFacet(MemberGroupLayoutFacet.class);
  final ColumnSpans columnSpans=mglf.getColumnSpans();
  ColumnRepr columnRepr;
  columnRepr=addColumnWithSpan(metadata,columnSpans.getLeft());
  updateColumnMemberGroups(objectSpec,MemberGroupLayoutHint.LEFT,columnRepr);
  columnRepr=addColumnWithSpan(metadata,columnSpans.getMiddle());
  updateColumnMemberGroups(objectSpec,MemberGroupLayoutHint.MIDDLE,columnRepr);
  columnRepr=addColumnWithSpan(metadata,columnSpans.getRight());
  updateColumnMemberGroups(objectSpec,MemberGroupLayoutHint.RIGHT,columnRepr);
  columnRepr=addColumnWithSpan(metadata,columnSpans.getCollections());
  final List<ObjectAssociation> objectAssociations=visibleCollections(objectSpec);
  columnRepr.collections=Maps.newLinkedHashMap();
  for (  ObjectAssociation assoc : objectAssociations) {
    final MemberRepr memberRepr=newMemberRepr(objectSpec,assoc);
    columnRepr.collections.put(assoc.getId(),memberRepr);
  }
  final Gson gson=new GsonBuilder().setPrettyPrinting().create();
  return gson.toJson(metadata);
}
