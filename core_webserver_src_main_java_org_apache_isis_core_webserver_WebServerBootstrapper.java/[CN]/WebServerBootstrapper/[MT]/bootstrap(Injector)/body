{
  final IsisConfigurationBuilder isisConfigurationBuilder=runner.getStartupConfiguration();
  final IsisConfiguration configuration=isisConfigurationBuilder.getConfiguration();
  final int port=configuration.getInteger(EMBEDDED_WEB_SERVER_PORT_KEY,EMBEDDED_WEB_SERVER_PORT_DEFAULT);
  final String webappContextPath=configuration.getString(EMBEDDED_WEB_SERVER_RESOURCE_BASE_KEY,EMBEDDED_WEB_SERVER_RESOURCE_BASE_DEFAULT);
  final StartupMode startupMode=StartupMode.lookup(configuration.getString(EMBEDDED_WEB_SERVER_STARTUP_MODE_KEY,EMBEDDED_WEB_SERVER_STARTUP_MODE_DEFAULT));
  jettyServer=new Server(port);
  Connector[] connectors=jettyServer.getConnectors();
  Connector connector=connectors[0];
  connector.setRequestHeaderSize(8192);
  connector.setResponseHeaderSize(8192);
  final WebAppContext context=new WebAppContext(SRC_MAIN_WEBAPP,webappContextPath);
  copyConfigurationPrimersIntoServletContext(context);
  jettyServer.setHandler(context);
  LOG.info("Starting Jetty on port '{}' to serve the web application",port);
  long start=System.currentTimeMillis();
  try {
    jettyServer.start();
    LOG.info("Started the application in {}ms",System.currentTimeMillis() - start);
    if (startupMode.isForeground()) {
      System.in.read();
      System.out.println(">>> STOPPING EMBEDDED JETTY SERVER");
      jettyServer.stop();
      jettyServer.join();
    }
  }
 catch (  final Exception ex) {
    throw new IsisException("Unable to start Jetty server",ex);
  }
}
