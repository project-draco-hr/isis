{
  rootObject.setupResolveState(ResolveState.TRANSIENT);
  field1.setupResolveState(ResolveState.TRANSIENT);
  field1_1.setupResolveState(ResolveState.TRANSIENT);
  element1.setupResolveState(ResolveState.TRANSIENT);
  element2.setupResolveState(ResolveState.TRANSIENT);
  ObjectData rootData=(ObjectData)encoder.createMakePersistentGraph(rootObject,ObjectEncoder.createKnownTransients());
  assertObjectData(rootObject,RESOLVED,rootData);
  assertHasFields(4,rootData);
  ObjectData referencedFieldData=(ObjectData)rootData.getFieldContent()[0];
  assertObjectData(field1,RESOLVED,referencedFieldData);
  assertHasFields(1,referencedFieldData);
  ObjectData referencedFieldData2=(ObjectData)referencedFieldData.getFieldContent()[0];
  assertObjectData(field1_1,RESOLVED,referencedFieldData2);
  assertHasFields(1,referencedFieldData2);
  assertValueData(field2,rootData.getFieldContent()[1]);
  assertNullData(rootData.getFieldContent()[3]);
  CollectionData collectionData=(CollectionData)rootData.getFieldContent()[2];
  assertEquals(2,collectionData.getElements().length);
  assertObjectData(element1,RESOLVED,collectionData.getElements()[0]);
  assertObjectData(element2,RESOLVED,collectionData.getElements()[1]);
  ObjectData fieldOfField=(ObjectData)referencedFieldData2.getFieldContent()[0];
  assertSame(fieldOfField,rootData);
  ObjectData referenceData=(ObjectData)collectionData.getElements()[0];
  ObjectData fieldOfElement=(ObjectData)referenceData.getFieldContent()[0];
  assertSame(fieldOfElement,rootData);
}
