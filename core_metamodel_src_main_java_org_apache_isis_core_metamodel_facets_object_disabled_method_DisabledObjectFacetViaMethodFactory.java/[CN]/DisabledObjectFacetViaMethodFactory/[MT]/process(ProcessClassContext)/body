{
  final Class<?> cls=processClassContext.getCls();
  final FacetHolder facetHolder=processClassContext.getFacetHolder();
  final Class<?>[] paramTypes=new Class<?>[1];
  paramTypes[0]=Identifier.Type.class;
  final Method method=MethodFinderUtils.findMethod(cls,MethodScope.OBJECT,DISABLED_PREFIX,new Class<?>[]{String.class,TranslatableString.class},paramTypes);
  if (method == null) {
    return;
  }
  final TranslationService translationService=servicesInjector.lookupService(TranslationService.class);
  final String translationContext=((IdentifiedHolder)facetHolder).getIdentifier().toClassIdentityString();
  FacetUtil.addFacet(new DisabledObjectFacetViaMethod(method,translationService,translationContext,facetHolder));
  processClassContext.removeMethod(method);
}
