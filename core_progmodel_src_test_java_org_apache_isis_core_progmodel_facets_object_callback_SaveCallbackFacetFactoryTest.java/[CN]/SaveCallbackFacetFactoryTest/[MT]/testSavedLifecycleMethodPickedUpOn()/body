{
@edu.umd.cs.findbugs.annotations.SuppressWarnings("UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS") class Customer {
    @SuppressWarnings("unused") public void saved(){
    }
  }
  final Method method=findMethod(Customer.class,"saved");
  facetFactory.process(new ProcessClassContext(Customer.class,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(PersistedCallbackFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof PersistedCallbackFacetViaMethod);
  final PersistedCallbackFacetViaMethod savedCallbackFacetViaMethod=(PersistedCallbackFacetViaMethod)facet;
  assertEquals(method,savedCallbackFacetViaMethod.getMethods().get(0));
  assertTrue(methodRemover.getRemoveMethodMethodCalls().contains(method));
}
