{
  Method method=findMethodWithOrWithoutParameters(cls,CLASS,PARAMETER_NAMES_PREFIX + capitalizedName,String[].class,params);
  if (method == null) {
    return;
  }
  removeMethod(methodRemover,method);
  final Object[] parameterObjects=new Object[method.getParameterTypes().length];
  final String[] names=(String[])InvokeUtils.invokeStatic(method,parameterObjects);
  if (names.length != parameters.length) {
    throw new ReflectionException("Invalid number of parameter names, expected " + parameters.length + ", but got "+ names.length+ ", on "+ method);
  }
  for (int i=0; i < names.length; i++) {
    FacetUtil.addFacet(new NamedFacetViaMethod(names[i],method,parameters[i]));
  }
}
