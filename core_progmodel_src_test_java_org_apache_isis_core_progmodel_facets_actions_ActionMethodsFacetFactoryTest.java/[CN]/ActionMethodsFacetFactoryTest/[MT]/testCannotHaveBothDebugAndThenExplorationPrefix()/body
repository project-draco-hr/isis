{
  ActionInvocationFacetFactory facetFactory=new ActionInvocationFacetFactory();
  facetFactory.setSpecificationLookup(reflector);
  reflector.setLoadSpecificationStringReturn(voidSpec);
class Customer {
    @SuppressWarnings("unused") @edu.umd.cs.findbugs.annotations.SuppressWarnings("UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS") public void debugExplorationAnActionWithDebugAndExplorationPrefix(){
    }
  }
  final Method method=findMethod(Customer.class,"debugExplorationAnActionWithDebugAndExplorationPrefix");
  facetFactory.process(new ProcessMethodContext(Customer.class,method,methodRemover,facetedMethod));
  Facet facet=facetedMethod.getFacet(DebugFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof DebugFacet);
  facet=facetedMethod.getFacet(ExplorationFacet.class);
  assertNull(facet);
}
