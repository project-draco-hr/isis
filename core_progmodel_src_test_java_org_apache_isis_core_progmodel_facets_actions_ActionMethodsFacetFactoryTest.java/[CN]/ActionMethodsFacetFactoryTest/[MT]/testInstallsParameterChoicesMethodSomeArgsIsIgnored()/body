{
  ActionChoicesFacetFactory facetFactory=new ActionChoicesFacetFactory();
  facetFactory.setSpecificationLookup(reflector);
  reflector.setLoadSpecificationStringReturn(voidSpec);
class Customer {
    @SuppressWarnings("unused") @edu.umd.cs.findbugs.annotations.SuppressWarnings("UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS") public void someAction(    final int x,    final Long y){
    }
    @SuppressWarnings("unused") @edu.umd.cs.findbugs.annotations.SuppressWarnings("UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS") public Object[] choicesSomeAction(    final int x,    final Long y){
      return null;
    }
  }
  final Method actionMethod=findMethod(Customer.class,"someAction",new Class[]{int.class,Long.class});
  facetFactory.process(new ProcessMethodContext(Customer.class,actionMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(ActionChoicesFacet.class);
  assertNull(facet);
}
