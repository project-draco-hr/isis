{
  ActionDefaultsFacetFactory facetFactory=new ActionDefaultsFacetFactory();
  facetFactory.setSpecificationLookup(reflector);
  reflector.setLoadSpecificationStringReturn(voidSpec);
  ActionParameterDefaultsFacetFactory facetFactoryForParams=new ActionParameterDefaultsFacetFactory();
  facetFactoryForParams.setSpecificationLookup(reflector);
  reflector.setLoadSpecificationStringReturn(voidSpec);
@edu.umd.cs.findbugs.annotations.SuppressWarnings("UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS") class Customer {
    @SuppressWarnings("unused") public void someAction(    final int x,    final long y){
    }
    @SuppressWarnings("unused") public int default0SomeAction(){
      return 0;
    }
    @SuppressWarnings("unused") public long default1SomeAction(){
      return 0;
    }
    @SuppressWarnings("unused") public Object[] defaultSomeAction(){
      return null;
    }
  }
  Method actionMethod=findMethod(Customer.class,"someAction",new Class[]{int.class,long.class});
  FacetedMethod facetHolderWithParms=FacetedMethod.createActionFacetedMethod(Customer.class,actionMethod);
  final ProcessMethodContext processMethodContext=new ProcessMethodContext(Customer.class,actionMethod,methodRemover,facetHolderWithParms);
  facetFactory.process(processMethodContext);
  try {
    facetFactoryForParams.process(processMethodContext);
    fail("exception expected");
  }
 catch (  org.apache.isis.core.metamodel.exceptions.MetaModelException expected) {
  }
}
