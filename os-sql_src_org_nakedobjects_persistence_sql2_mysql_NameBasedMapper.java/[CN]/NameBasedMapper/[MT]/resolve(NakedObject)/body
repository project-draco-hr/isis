{
  try {
    NakedClass cls=object.getNakedClass();
    String table=table(cls);
    String columns=columns(cls);
    long id=primaryKey(object.getOid());
    LOG.debug("loading data from SQL " + table + " for "+ object);
    String statement="select " + columns + " from "+ table+ " where id = "+ id;
    ResultSet rs=db.select(statement);
    if (rs.next()) {
      Field[] fields=cls.getFields();
      int column=1;
      for (int i=0; i < fields.length; i++) {
        if (fields[i].isDerived()) {
          continue;
        }
 else         if (fields[i] instanceof OneToManyAssociation) {
          loadInternalCollection(id,fields[i],(InternalCollection)fields[i].get(object));
        }
 else         if (fields[i] instanceof Value) {
          try {
            ((Value)fields[i]).set(object,rs.getString(column));
            column++;
          }
 catch (          InvalidEntryException e) {
            LOG.error(e);
          }
        }
 else         if (fields[i] instanceof OneToOneAssociation) {
          NakedClass associatedCls=NakedObjectManager.getInstance().getNakedClass(fields[i].getType().getName());
          NakedObject reference=setupReference(loadedObjects,associatedCls,rs.getInt(column));
          ((OneToOneAssociation)fields[i]).setAssociation(object,reference);
          column++;
        }
      }
      object.setResolved();
    }
 else {
      throw new ObjectStoreException("Unable to load data for " + id + " from "+ table);
    }
  }
 catch (  SQLException e) {
    throw new ObjectStoreException(e);
  }
}
