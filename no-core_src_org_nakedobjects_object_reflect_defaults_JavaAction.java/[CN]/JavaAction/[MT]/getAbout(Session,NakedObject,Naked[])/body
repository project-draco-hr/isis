{
  if (parameters.length != paramCount) {
    LOG.error(actionMethod + " requires " + paramCount+ " parameters, not "+ parameters.length);
  }
  Method aboutMethod=getAboutMethod();
  if (aboutMethod == null) {
    return new DefaultAbout();
  }
  try {
    About about;
    about=new SimpleActionAbout(session,object,parameters);
    if (aboutMethod.getName().equals("aboutActionDefault")) {
      aboutMethod.invoke(object,new Object[]{about});
    }
 else {
      Object[] longParams=new Object[parameters.length + 1];
      longParams[0]=about;
      System.arraycopy(parameters,0,longParams,1,parameters.length);
      aboutMethod.invoke(object,longParams);
    }
    if (about == null) {
      LOG.error("No about returned from " + aboutMethod + " allowing action by default.");
      return new DefaultAbout();
    }
    return about;
  }
 catch (  InvocationTargetException e) {
    LOG.error("Exception executing " + aboutMethod,e.getTargetException());
  }
catch (  IllegalAccessException ignore) {
    LOG.error("Illegal access of " + aboutMethod,ignore);
  }
  return new DefaultAbout();
}
