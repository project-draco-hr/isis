{
  if (drag == null) {
    mouseDetails(me,true);
    if (currentlyIdentifiedView != null) {
      if (previouslyIdentifiedView == null) {
        previouslyIdentifiedView=currentlyIdentifiedView;
      }
 else {
        if (currentlyIdentifiedView != previouslyIdentifiedView) {
          if (currentlyIdentifiedView == previouslyIdentifiedView) {
            spy.addAction("moved into subview from " + previouslyIdentifiedView);
            previouslyIdentifiedView.enteredSubview();
          }
 else {
            spy.addAction("exited " + previouslyIdentifiedView);
            previouslyIdentifiedView.exited();
          }
          View previouslyIdentified=previouslyIdentifiedView;
          previouslyIdentifiedView=currentlyIdentifiedView;
          if (currentlyIdentifiedView != null) {
            if (currentlyIdentifiedView == previouslyIdentified) {
              spy.addAction("moved back to from " + previouslyIdentified);
              currentlyIdentifiedView.exitedSubview();
            }
 else {
              spy.addAction("entered " + currentlyIdentifiedView);
              currentlyIdentifiedView.entered();
            }
          }
          redraw();
        }
      }
      spy.addTrace("--> mouse moved");
      spy.addTrace(currentlyIdentifiedView," mouse location",mouseLocation);
      Location locationInView=new Location(mouseLocation);
      Location locationOfView=currentlyIdentifiedView.getAbsoluteLocation();
      spy.addTrace(currentlyIdentifiedView," view location",locationOfView);
      locationInView.subtract(locationOfView);
      spy.addTrace(currentlyIdentifiedView," mouse location within view",locationInView);
      spy.setType(currentlyIdentifiedView.viewAreaType(new Location(locationInView)));
      spy.addAction("mouseMoved " + locationInView);
      currentlyIdentifiedView.mouseMoved(locationInView);
      redraw();
    }
  }
}
