{
  recordEvent(ev);
switch (ev.getPhase()) {
case HIDE:
    if (getSubscriberBehaviour() == Behaviour.DescriptionPropertyHide && ev.getIdentifier().getMemberName().equals("description")) {
      ev.hide();
    }
  break;
case DISABLE:
if (getSubscriberBehaviour() == Behaviour.DescriptionPropertyDisable && ev.getIdentifier().getMemberName().equals("description")) {
  ev.disable("ToDoItemSubscriptions says: description property disabled!");
}
break;
case VALIDATE:
if (getSubscriberBehaviour() == Behaviour.DescriptionPropertyInvalidate && ev.getIdentifier().getMemberName().equals("description")) {
ev.disable("ToDoItemSubscriptions says: can't change description property to this value!");
}
break;
case EXECUTING:
break;
case EXECUTED:
LOG.info("Received PropertyInteractionEvent, " + ev.getSource().toString() + ", changed "+ ev.getIdentifier().getMemberName()+ " : "+ ev.getOldValue()+ " -> "+ ev.getNewValue());
onExecutedVetoIfRequired();
if (ev.getIdentifier().getMemberName().contains("description")) {
String newValue=(String)ev.getNewValue();
if (newValue.matches(".*demo veto.*")) {
throw new RecoverableException("oh no you don't! " + ev.getNewValue());
}
}
break;
}
}
