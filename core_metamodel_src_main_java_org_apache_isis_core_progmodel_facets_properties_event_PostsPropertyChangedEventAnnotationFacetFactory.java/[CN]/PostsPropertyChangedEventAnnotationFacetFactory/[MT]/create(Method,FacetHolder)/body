{
  final PostsPropertyChangedEvent annotation=Annotations.getAnnotation(method,PostsPropertyChangedEvent.class);
  if (annotation == null) {
    return null;
  }
  final PropertyOrCollectionAccessorFacet getterFacet=holder.getFacet(PropertyOrCollectionAccessorFacet.class);
  if (getterFacet == null) {
    return null;
  }
  final PropertyClearFacet clearFacet=holder.getFacet(PropertyClearFacet.class);
  final PropertySetterFacet setterFacet=holder.getFacet(PropertySetterFacet.class);
  if (clearFacet == null && setterFacet == null) {
    return null;
  }
  if (setterFacet != null) {
    holder.removeFacet(setterFacet);
  }
  if (clearFacet != null) {
    holder.removeFacet(clearFacet);
  }
  final Class<? extends PropertyChangedEvent<?,?>> changedEventType=annotation.value();
  final WrapperPolicy wrapperPolicy=annotation.wrapperPolicy();
  return new PostsPropertyChangedEventFacetAnnotation(changedEventType,wrapperPolicy,getterFacet,setterFacet,clearFacet,servicesProvider,holder);
}
