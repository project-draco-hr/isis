{
  final AbstractLink link=getLink();
  final Label label=new Label(CssMenuItem.ID_MENU_LABEL,Model.of(this.getName()));
  if (this.isEnabled() && link != null) {
    markupContainer.add(link);
    link.add(label);
    if (this.blobOrClob) {
      link.add(new CssClassAppender("noVeil"));
    }
    if (this.prototype) {
      link.add(new CssClassAppender("prototype"));
    }
    Components.permanentlyHide(markupContainer,CssMenuItem.ID_MENU_LABEL);
    return link;
  }
 else {
    Components.permanentlyHide(markupContainer,ID_MENU_LINK);
    label.add(new AttributeModifier("title",Model.of(this.getDisabledReason())));
    label.add(new AttributeModifier("class",Model.of("disabled")));
    markupContainer.add(label);
    return label;
  }
}
