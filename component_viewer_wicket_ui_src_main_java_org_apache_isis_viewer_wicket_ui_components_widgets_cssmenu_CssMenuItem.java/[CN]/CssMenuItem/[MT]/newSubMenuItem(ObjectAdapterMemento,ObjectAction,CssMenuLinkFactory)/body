{
  final AuthenticationSession session=getAuthenticationSession();
  final ObjectAdapter adapter=targetAdapterMemento.getObjectAdapter(ConcurrencyChecking.CHECK);
  final Consent visibility=objectAction.isVisible(session,adapter,where);
  if (visibility.isVetoed()) {
    return null;
  }
  final LinkAndLabel linkAndLabel=cssMenuLinkFactory.newLink(targetAdapterMemento,objectAction,PageAbstract.ID_MENU_LINK);
  if (linkAndLabel == null) {
    return null;
  }
  final AbstractLink link=linkAndLabel.getLink();
  final String actionLabel=linkAndLabel.getLabel();
  final Consent usability=objectAction.isUsable(session,adapter,where);
  final String reasonDisabledIfAny=usability.getReason();
  CssClassFacet cssClassFacet=objectAction.getFacet(CssClassFacet.class);
  final boolean blobOrClob=returnsBlobOrClob(objectAction);
  final boolean prototype=isExplorationOrPrototype(objectAction);
  final String actionIdentifier=actionIdentifierFor(objectAction);
  Builder builder=newSubMenuItem(actionLabel).link(link).enabled(reasonDisabledIfAny).returnsBlobOrClob(blobOrClob).prototyping(prototype).withActionIdentifier(actionIdentifier);
  if (cssClassFacet != null) {
    builder.withCssClass(cssClassFacet.value());
  }
  return builder;
}
