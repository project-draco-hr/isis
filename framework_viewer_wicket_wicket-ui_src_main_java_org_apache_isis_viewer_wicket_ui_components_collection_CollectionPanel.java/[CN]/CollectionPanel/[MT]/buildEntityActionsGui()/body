{
  if (entityModel == null || otma == null) {
    Components.permanentlyHide(this,ID_GROUPED_ACTIONS);
    return;
  }
  final ObjectSpecification adapterSpec=entityModel.getTypeOfSpecification();
  final ObjectAdapter adapter=entityModel.getObject();
  final ObjectAdapterMemento adapterMemento=entityModel.getObjectAdapterMemento();
  @SuppressWarnings("unchecked") final List<ObjectAction> userActions=adapterSpec.getObjectActions(ActionType.USER,Contributed.INCLUDED,Filters.and(memberOrderOf(otma),dynamicallyVisibleFor(adapter)));
  if (!userActions.isEmpty()) {
    final CssMenuLinkFactory linkFactory=new EntityActionLinkFactory(entityModel);
    final CssMenuBuilder cssMenuBuilder=new CssMenuBuilder(adapterMemento,getServiceAdapters(),userActions,linkFactory);
    final CssMenuPanel groupedActions=cssMenuBuilder.buildPanel(ID_GROUPED_ACTIONS,"Actions");
    addOrReplace(groupedActions);
  }
 else {
    Components.permanentlyHide(this,ID_GROUPED_ACTIONS);
  }
}
