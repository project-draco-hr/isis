{
  allowing_specificationLoader_loadSpecification_any_willReturn(voidSpec);
class Customer {
    @SuppressWarnings("unused") public void someAction(    final int x,    final long y){
    }
  }
class CustomerEx extends Customer {
  }
  final Method actionMethod=findMethod(CustomerEx.class,"someAction",new Class[]{int.class,long.class});
  final FacetedMethod facetHolderWithParms=FacetedMethod.createForAction(CustomerEx.class,actionMethod);
  facetFactory.processInvocation(new ProcessMethodContext(CustomerEx.class,null,null,actionMethod,methodRemover,facetHolderWithParms));
  final Facet facet0=facetHolderWithParms.getFacet(ActionInvocationFacet.class);
  assertNotNull(facet0);
}
