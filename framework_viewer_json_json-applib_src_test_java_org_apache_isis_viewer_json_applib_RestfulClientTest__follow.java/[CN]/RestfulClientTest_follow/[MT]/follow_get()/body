{
  JsonRepresentation jsonRepresentation=new JsonRepresentation(JsonUtils.readJson("map.json"));
  Link getLink=jsonRepresentation.getLink("aLink");
  final Sequence sequence=context.sequence("execution");
  context.checking(new Expectations(){
{
      one(mockExecutor).createRequest("http://foo/bar");
      inSequence(sequence);
      will(returnValue(mockClientRequest));
      one(mockClientRequest).setHttpMethod(Method.GET.name());
      inSequence(sequence);
      one(mockClientRequest).accept(MediaType.APPLICATION_JSON_TYPE);
      inSequence(sequence);
      one(mockExecutor).execute(mockClientRequest);
      inSequence(sequence);
      will(returnValue(mockClientResponse));
      one(mockClientResponse).setReturnType(String.class);
      inSequence(sequence);
    }
  }
);
  client.follow(getLink);
}
