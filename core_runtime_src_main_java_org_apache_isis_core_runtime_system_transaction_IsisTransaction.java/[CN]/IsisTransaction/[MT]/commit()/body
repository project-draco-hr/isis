{
  ensureThatState(getState().canCommit(),is(true),"state is: " + getState());
  ensureThatState(abortCause,is(nullValue()),"cannot commit: an abort cause has been set");
  if (LOG.isDebugEnabled()) {
    LOG.debug("commit transaction " + this);
  }
  if (getState() == State.COMMITTED) {
    if (LOG.isInfoEnabled()) {
      LOG.info("already committed; ignoring");
    }
    return;
  }
  try {
    doAudit(getChangedObjectProperties());
    doFlush();
    doPublish(getChangedObjects());
    doFlush();
    setState(State.COMMITTED);
  }
 catch (  final RuntimeException ex) {
    setAbortCause(new IsisTransactionManagerException(ex));
    throw ex;
  }
}
