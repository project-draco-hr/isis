{
  final NamedQuery namedQuery=getNamedQuery(queryName);
  final EntityManager entityManager=getJpaObjectStore().getEntityManager();
  final Query emQuery=entityManager.createNamedQuery(namedQuery.getName());
  for (  final Map.Entry<String,Object> argumentByParameterName : argumentsByParameterName.entrySet()) {
    final String parameterName=argumentByParameterName.getKey();
    final Object argument=argumentByParameterName.getValue();
    emQuery.setParameter(parameterName,argument);
  }
  if (cardinality == QueryCardinality.MULTIPLE) {
    return emQuery.getResultList();
  }
  if (cardinality == QueryCardinality.SINGLE) {
    final Object result=emQuery.getSingleResult();
    return result == null ? Collections.EMPTY_LIST : Arrays.asList(result);
  }
  return Collections.EMPTY_LIST;
}
