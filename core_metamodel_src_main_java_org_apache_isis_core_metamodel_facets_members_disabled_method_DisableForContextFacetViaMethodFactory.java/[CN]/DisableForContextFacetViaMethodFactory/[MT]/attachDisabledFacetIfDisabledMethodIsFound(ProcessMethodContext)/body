{
  final Method method=processMethodContext.getMethod();
  final String capitalizedName=StringExtensions.asJavaBaseNameStripAccessorPrefixIfRequired(method.getName());
  final Class<?> cls=processMethodContext.getCls();
  Method disableMethod=MethodFinderUtils.findMethod(cls,MethodScope.OBJECT,MethodPrefixConstants.DISABLE_PREFIX + capitalizedName,new Class<?>[]{String.class,TranslatableString.class},method.getParameterTypes());
  if (disableMethod == null) {
    return;
  }
  processMethodContext.removeMethod(disableMethod);
  final FacetHolder facetHolder=processMethodContext.getFacetHolder();
  final TranslationService translationService=this.servicesInjector.lookupService(TranslationService.class);
  final String translationContext=((IdentifiedHolder)facetHolder).getIdentifier().toClassAndNameIdentityString();
  FacetUtil.addFacet(new DisableForContextFacetViaMethod(disableMethod,translationService,translationContext,facetHolder));
}
