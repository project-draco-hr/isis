{
  super(deploymentType,installerLookup);
  installerLookup.getConfigurationBuilder().add("isis.deploymentType",deploymentType.nameLowerCase());
  this.testClass=testClass;
  final AnnotationInstaller installer=new AnnotationInstaller();
  try {
    setAuthenticationInstaller(getInstallerLookup().injectDependenciesInto(installer.addAuthenticatorAnnotatedOn(this.testClass.getJavaClass())));
    setAuthorizationInstaller(getInstallerLookup().injectDependenciesInto(installer.addAuthorizerAnnotatedOn(this.testClass.getJavaClass())));
    setPersistenceMechanismInstaller(getInstallerLookup().injectDependenciesInto(installer.addPersistorAnnotatedOn(this.testClass.getJavaClass())));
    setUserProfileStoreInstaller(getInstallerLookup().injectDependenciesInto(new InMemoryUserProfileStoreInstaller()));
    final FixtureInstallerAnnotatedClass fixtureInstaller=new FixtureInstallerAnnotatedClass();
    fixtureInstaller.addFixturesAnnotatedOn(this.testClass.getJavaClass());
    setFixtureInstaller(fixtureInstaller);
  }
 catch (  final InstantiationException e) {
    throw new IsisException(e);
  }
catch (  final IllegalAccessException e) {
    throw new IsisException(e);
  }
  final ServicesInstallerAnnotatedClass servicesInstaller=new ServicesInstallerAnnotatedClass();
  try {
    servicesInstaller.addServicesAnnotatedOn(this.testClass.getJavaClass());
  }
 catch (  final InstantiationException e) {
    throw new IsisException(e);
  }
catch (  final IllegalAccessException e) {
    throw new IsisException(e);
  }
  setServicesInstaller(servicesInstaller);
}
