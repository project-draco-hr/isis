{
  final ObjectAdapter collectionAdapter=field.get(parentAdapter);
  if (!collectionAdapter.getResolveState().canChangeTo(ResolveState.RESOLVING)) {
    return;
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("loading internal collection " + field);
  }
  PersistorUtil.startStateTransition(collectionAdapter,ResolveState.RESOLVING);
  final List<ObjectAdapter> list=new ArrayList<ObjectAdapter>();
  loadCollectionIntoList(connector,parentAdapter,makeResolved,table,specification,getIdMapping(),fieldMappingByField,versionMapping,list);
  final CollectionFacet collectionFacet=collectionAdapter.getSpecification().getFacet(CollectionFacet.class);
  collectionFacet.init(collectionAdapter,list.toArray(new ObjectAdapter[list.size()]));
  PersistorUtil.endStateTransition(collectionAdapter);
  if (makeResolved) {
    for (    final ObjectAdapter field : list) {
      if (field.getSpecification().isOfType(parentAdapter.getSpecification())) {
        loadInternalCollection(connector,field,true);
      }
    }
  }
}
