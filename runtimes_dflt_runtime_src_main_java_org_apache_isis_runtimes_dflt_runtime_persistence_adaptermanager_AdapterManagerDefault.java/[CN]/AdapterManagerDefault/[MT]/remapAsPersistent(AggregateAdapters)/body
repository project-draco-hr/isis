{
  final ObjectAdapter rootAdapter=aggregateAdapters.getRootAdapter();
  final Oid oid=rootAdapter.getOid();
  if (LOG.isDebugEnabled()) {
    LOG.debug("remapAsPersistent: " + oid);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("removing root adapter from oid map");
  }
  boolean removed=getOidAdapterMap().remove(oid);
  if (!removed) {
    LOG.warn("could not remove oid: " + oid);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("removing collection adapter(s) from oid map");
  }
  for (  final ObjectAdapter collectionAdapter : aggregateAdapters) {
    final Oid collectionOid=collectionAdapter.getOid();
    removed=getOidAdapterMap().remove(collectionOid);
    if (!removed) {
      LOG.warn("could not remove collectionOid: " + collectionOid);
    }
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("updating the Oid");
  }
  getOidGenerator().convertTransientToPersistentOid(oid);
  if (LOG.isDebugEnabled()) {
    LOG.debug("re-adding into maps; oid is now: " + oid);
  }
  getOidAdapterMap().add(oid,rootAdapter);
  if (LOG.isDebugEnabled()) {
    LOG.debug("re-adding collection adapter(s) to oid map");
  }
  for (  final ObjectAdapter collectionAdapter : aggregateAdapters) {
    final AggregatedOid previousCollectionOid=(AggregatedOid)collectionAdapter.getOid();
    getOidAdapterMap().add(previousCollectionOid,collectionAdapter);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("replacing any collection pojos, remapping in pojo map");
  }
  for (  final OneToManyAssociation otma : aggregateAdapters.getCollections()) {
    final ObjectAdapter collectionAdapter=aggregateAdapters.getCollectionAdapter(otma);
    final Object collectionPojoWrappedByAdapter=collectionAdapter.getObject();
    final Object collectionPojoOnRootPojo=getCollectionPojo(otma,rootAdapter);
    if (collectionPojoOnRootPojo != collectionPojoWrappedByAdapter) {
      getPojoAdapterMap().remove(collectionAdapter);
      collectionAdapter.replacePojo(collectionPojoOnRootPojo);
      getPojoAdapterMap().add(collectionPojoOnRootPojo,collectionAdapter);
    }
  }
  rootAdapter.changeState(ResolveState.RESOLVED);
  if (LOG.isDebugEnabled()) {
    LOG.debug("made persistent " + rootAdapter + "; was "+ oid.getPrevious());
  }
}
