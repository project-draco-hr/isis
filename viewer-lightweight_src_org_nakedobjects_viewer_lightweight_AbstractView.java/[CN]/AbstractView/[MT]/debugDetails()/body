{
  StringBuffer b=new StringBuffer();
  b.append("View:      ");
  String name=getClass().getName();
  b.append(name.substring(name.lastIndexOf('.') + 1) + getId());
  b.append("\nParent:    ");
  String parent=getParent() == null ? "none" : getParent().getClass().getName() + ((ObjectView)getParent()).getId();
  b.append(parent);
  b.append("\nWorkspace: ");
  String workspace=getWorkspace() == null ? "" : getWorkspace().getClass().getName() + getWorkspace().getId();
  b.append(workspace.substring(workspace.lastIndexOf('.') + 1) + getId());
  b.append("\nBounds:    ");
  Bounds bounds=getBounds();
  b.append(bounds.width + "x" + bounds.height+ "+"+ bounds.x+ "+"+ bounds.y);
  b.append("\nReq'd :    ");
  Size required=getRequiredSize();
  b.append(required.width + "x" + required.height);
  b.append("\nPadding:    ");
  Padding insets=getPadding();
  b.append("top/bottom " + insets.top + "/"+ insets.bottom+ ", left/right "+ insets.left+ "/"+ insets.right);
  b.append("\nBorder:    ");
  b.append((border == null) ? "none" : border.debug(this));
  b.append("\nBaseline:  ");
  b.append(getParent() == null ? "none" : "" + getBaseline());
  b.append("\nControls:  ");
  b.append(controls);
  b.append("\nLaid out:  ");
  b.append(!isLayoutInvalid);
  b.append("\nDrawing");
  draw(new DebugCanvas(b));
  b.append("\n");
  return b.toString();
}
