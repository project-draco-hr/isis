{
  Object[] convertedArray;
  try {
    final Class<?> wrapperClass=ClassExtensions.asWrapped(arrayType);
    final Constructor<?> constructor=wrapperClass.getConstructor(new Class[]{String.class});
    final int len=Array.getLength(extendee);
    convertedArray=(Object[])Array.newInstance(wrapperClass,len);
    for (int i=0; i < len; i++) {
      convertedArray[i]=constructor.newInstance(new Object[]{Array.get(extendee,i).toString()});
    }
  }
 catch (  final NoSuchMethodException e) {
    throw new IsisException(e);
  }
catch (  final ArrayIndexOutOfBoundsException e) {
    throw new IsisException(e);
  }
catch (  final IllegalArgumentException e) {
    throw new IsisException(e);
  }
catch (  final InstantiationException e) {
    throw new IsisException(e);
  }
catch (  final IllegalAccessException e) {
    throw new IsisException(e);
  }
catch (  final InvocationTargetException e) {
    throw new IsisException(e);
  }
  return convertedArray;
}
