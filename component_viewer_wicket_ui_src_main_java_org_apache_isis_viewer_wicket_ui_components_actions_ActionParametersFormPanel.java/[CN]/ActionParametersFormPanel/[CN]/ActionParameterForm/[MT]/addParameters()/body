{
  final ActionModel actionModel=getActionModel();
  List<ActionParameterMemento> parameterMementos=actionModel.primeArgumentModels();
  final RepeatingView rv=new RepeatingView(ID_ACTION_PARAMETERS);
  add(rv);
  paramPanels.clear();
  for (  final ActionParameterMemento apm : parameterMementos) {
    final WebMarkupContainer container=new WebMarkupContainer(rv.newChildId());
    rv.add(container);
    final ScalarModel argumentModel=actionModel.getArgumentModel(apm);
    argumentModel.setActionArgsHint(actionModel.getArgumentsAsArray());
    final Component component=getComponentFactoryRegistry().addOrReplaceComponent(container,ComponentType.SCALAR_NAME_AND_VALUE,argumentModel);
    final ScalarPanelAbstract paramPanel=component instanceof ScalarPanelAbstract ? (ScalarPanelAbstract)component : null;
    paramPanels.add(paramPanel);
    if (paramPanel != null) {
      paramPanel.setOutputMarkupId(true);
      paramPanel.notifyOnChange(this);
    }
    if (!renderedFirstField) {
      component.add(new CssClassAppender("first-field"));
      renderedFirstField=true;
    }
  }
}
