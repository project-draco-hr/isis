{
  String memberId=objectMember.getId();
  if (objectMember.isVisible(getAuthenticationSession(),objectAdapter).isVetoed()) {
    throwNotFoundException(memberId,memberType);
  }
  if (intent.isMutate()) {
    Consent usable=objectMember.isUsable(getAuthenticationSession(),objectAdapter);
    if (usable.isVetoed()) {
      String memberTypeStr=memberType.name().toLowerCase();
      throw new WebApplicationException(responseOf(HttpStatusCode.NOT_ACCEPTABLE,"%s is not usable: '%s' (%s)",memberTypeStr,memberId,usable.getReason()));
    }
  }
  return objectMember;
}
