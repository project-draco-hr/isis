{
  final DisabledFacetStaticMethodFacetFactory facetFactory=new DisabledFacetStaticMethodFacetFactory();
  facetFactory.setSpecificationLoader(programmableReflector);
  facetFactory.setServicesInjector(mockServicesInjector);
  context.checking(new Expectations(){
{
      allowing(mockServicesInjector).lookupService(AuthenticationSessionProvider.class);
      will(returnValue(mockAuthenticationSessionProvider));
    }
  }
);
  facetFactory.setDeploymentCategory(DeploymentCategory.PRODUCTION);
  final Method propertyAccessorMethod=findMethod(CustomerStatic.class,"getLastName");
  final Method propertyProtectMethod=findMethod(CustomerStatic.class,"protectLastName");
  facetFactory.process(new ProcessMethodContext(CustomerStatic.class,null,null,propertyAccessorMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(DisabledFacet.class);
  assertNull(facet);
  assertTrue(methodRemover.getRemovedMethodMethodCalls().contains(propertyProtectMethod));
}
