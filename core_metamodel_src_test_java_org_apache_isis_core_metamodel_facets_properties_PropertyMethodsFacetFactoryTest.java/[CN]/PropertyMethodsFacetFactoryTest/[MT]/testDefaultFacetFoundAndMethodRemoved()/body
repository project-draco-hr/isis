{
  final PropertyDefaultFacetViaMethodFactory facetFactory=new PropertyDefaultFacetViaMethodFactory();
  facetFactory.setSpecificationLoader(programmableReflector);
  facetFactory.setAuthenticationSessionProvider(mockAuthenticationSessionProvider);
  facetFactory.setDeploymentCategory(DeploymentCategory.PRODUCTION);
class Customer {
    @SuppressWarnings("unused") public String getFirstName(){
      return null;
    }
    @SuppressWarnings("unused") public String defaultFirstName(){
      return null;
    }
  }
  final Method propertyAccessorMethod=findMethod(Customer.class,"getFirstName");
  final Method propertyDefaultMethod=findMethod(Customer.class,"defaultFirstName");
  facetFactory.process(new ProcessMethodContext(Customer.class,null,null,propertyAccessorMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(PropertyDefaultFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof PropertyDefaultFacetViaMethod);
  final PropertyDefaultFacetViaMethod propertyDefaultFacet=(PropertyDefaultFacetViaMethod)facet;
  assertEquals(propertyDefaultMethod,propertyDefaultFacet.getMethods().get(0));
  assertTrue(methodRemover.getRemovedMethodMethodCalls().contains(propertyDefaultMethod));
}
