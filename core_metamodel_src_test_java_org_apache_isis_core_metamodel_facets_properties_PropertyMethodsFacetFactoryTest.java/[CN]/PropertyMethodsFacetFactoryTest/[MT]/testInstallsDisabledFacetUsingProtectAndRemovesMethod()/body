{
  final DisabledFacetStaticMethodFacetFactory facetFactory=new DisabledFacetStaticMethodFacetFactory();
  injectServicesIntoAndAllowingServiceInjectorLookups(facetFactory);
  final Method propertyAccessorMethod=findMethod(CustomerStatic.class,"getFirstName");
  final Method propertyProtectMethod=findMethod(CustomerStatic.class,"protectFirstName");
  facetFactory.process(new ProcessMethodContext(CustomerStatic.class,null,null,propertyAccessorMethod,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(DisabledFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof DisabledFacetAbstractAlwaysEverywhere);
  assertTrue(methodRemover.getRemovedMethodMethodCalls().contains(propertyProtectMethod));
}
