{
  if (!adapter.canTransitionToResolving()) {
    return;
  }
  try {
    PersistorUtil.startResolving(adapter);
    final List<ObjectAssociation> fields=adapter.getSpecification().getAssociations(Contributed.EXCLUDED);
    for (int i=0; i < fields.size(); i++) {
      final ObjectAssociation field=fields.get(i);
      if (field.isNotPersisted()) {
        continue;
      }
      final ObjectSpecification fieldSpecification=field.getSpecification();
      if (fieldSpecification.isEncodeable()) {
        final EncodableFacet encoder=fieldSpecification.getFacet(EncodableFacet.class);
        ObjectAdapter value;
        final String valueData=data.value(field.getId());
        if (valueData != null) {
          if (valueData.equals("NULL")) {
            value=null;
          }
 else {
            value=encoder.fromEncodedString(valueData);
          }
          ((OneToOneAssociation)field).initAssociation(adapter,value);
        }
      }
 else       if (field.isOneToManyAssociation()) {
        initObjectSetupCollection(adapter,data,field);
      }
 else       if (field.isOneToOneAssociation()) {
        initObjectSetupReference(adapter,data,field);
      }
    }
    adapter.setVersion(data.getVersion());
  }
  finally {
    PersistorUtil.toEndState(adapter);
  }
}
