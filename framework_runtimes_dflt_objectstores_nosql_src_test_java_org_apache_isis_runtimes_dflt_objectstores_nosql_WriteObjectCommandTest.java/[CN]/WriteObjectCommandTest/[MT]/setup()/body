{
  smpl1=iswf.fixtures.smpl1;
  smpl1.setName("Fred Smith");
  smpl1.setSize(108);
  smpl1Adapter=iswf.remapAsPersistent(smpl1,RootOidDefault.deString("SMPL:1"));
  smpl2=iswf.fixtures.smpl2;
  smpl2.setName("John Brown");
  iswf.remapAsPersistent(smpl2,RootOidDefault.deString("SMPL:2"));
  rfcg1=iswf.fixtures.rfcg1;
  rfcg1.setReference(smpl1);
  rfcg1Adapter=iswf.remapAsPersistent(rfcg1,RootOidDefault.deString("RFCG:1"));
  prnt1=iswf.fixtures.prnt1;
  prnt1.getHomogeneousCollection().add(smpl1);
  prnt1.getHomogeneousCollection().add(smpl2);
  prnt1Adapter=iswf.remapAsPersistent(prnt1,RootOidDefault.deString("PRNT:1"));
  final Version version=new SerialNumberVersion(2,"username",null);
  context.checking(new Expectations(){
{
      one(versionCreator).newVersion("tester");
      will(returnValue(version));
      one(versionCreator).versionString(version);
      will(returnValue("2"));
      one(versionCreator).timeString(version);
      will(returnValue("1057"));
    }
  }
);
  dataEncrypter=new DataEncryption(){
    @Override public String getType(){
      return "etc1";
    }
    @Override public void init(    final IsisConfiguration configuration){
    }
    @Override public String encrypt(    final String plainText){
      return "ENC" + plainText;
    }
    @Override public String decrypt(    final String encryptedText){
      throw new UnexpectedCallException();
    }
  }
;
}
