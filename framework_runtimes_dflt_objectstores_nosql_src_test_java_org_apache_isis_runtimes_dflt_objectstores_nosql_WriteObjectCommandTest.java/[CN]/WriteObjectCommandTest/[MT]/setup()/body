{
  final ExamplePojoWithValues pojo1=new ExamplePojoWithValues();
  final String objectType="EVP";
  pojo1.setName("Fred Smith");
  pojo1.setSize(108);
  adapter1=system.recreateAdapter(pojo1,RootOidDefault.create(objectType,"3"));
  final ExamplePojoWithValues pojo2=new ExamplePojoWithValues();
  pojo2.setName("John Brown");
  adapter2=system.recreateAdapter(pojo2,RootOidDefault.create(objectType,"4"));
  final ExamplePojoWithReferences pojo3=new ExamplePojoWithReferences();
  pojo3.setReference1(pojo1);
  adapter3=system.recreateAdapter(pojo3,RootOidDefault.create(objectType,"5"));
  final ExamplePojoWithCollections adapter4=new ExamplePojoWithCollections();
  adapter4.getHomogenousCollection().add(pojo1);
  adapter4.getHomogenousCollection().add(pojo2);
  object4=system.recreateAdapter(adapter4,RootOidDefault.create(objectType,"6"));
  specification=adapter1.getSpecification();
  final Version version=new SerialNumberVersion(2,"username",null);
  context.checking(new Expectations(){
{
      one(versionCreator).newVersion("tester");
      will(returnValue(version));
      one(versionCreator).versionString(version);
      will(returnValue("2"));
      one(versionCreator).timeString(version);
      will(returnValue("1057"));
    }
  }
);
  dataEncrypter=new DataEncryption(){
    @Override public String getType(){
      return "etc1";
    }
    @Override public void init(    final IsisConfiguration configuration){
    }
    @Override public String encrypt(    final String plainText){
      return "ENC" + plainText;
    }
    @Override public String decrypt(    final String encryptedText){
      throw new UnexpectedCallException();
    }
  }
;
}
