{
  Method aboutMethod=getAboutMethod();
  Class parameter=getMethod.getReturnType();
  if (associate != null && !parameter.isAssignableFrom(associate.getObject().getClass())) {
    InternalAbout about=new InternalAbout();
    return about;
  }
  if (aboutMethod == null) {
    return new DefaultHint();
  }
  try {
    InternalAbout about=new InternalAbout();
    Object[] parameters;
    if (aboutMethod.getParameterTypes().length == 2) {
      parameters=new Object[]{about,associate == null ? null : associate.getObject()};
    }
 else {
      parameters=new Object[]{about};
    }
    aboutMethod.invoke(object.getObject(),parameters);
    return about;
  }
 catch (  InvocationTargetException e) {
    LOG.error("Exception executing " + aboutMethod,e.getTargetException());
  }
catch (  IllegalAccessException ignore) {
    LOG.error("Illegal access of " + aboutMethod,ignore);
  }
  return new DefaultHint();
}
