{
  Fragment compactFragment=getCompactFragment(CompactType.SPAN);
  final Label label=new Label(ID_SCALAR_IF_COMPACT,newTextFieldValueModel()){
    @Override public <C>IConverter<C> getConverter(    Class<C> type){
      return (IConverter<C>)converter;
    }
  }
;
  label.setEnabled(false);
  final int lengthAdjust=getLengthAdjustHint() != null ? getLengthAdjustHint() : 1;
  final String dateTimePattern=converter.getDateTimePattern(getLocale());
  final int length=dateTimePattern.length() + lengthAdjust;
  label.add(new AttributeModifier("size",Model.of("" + length)));
  compactFragment.add(label);
  scalarTypeContainer.addOrReplace(compactFragment);
  return label;
}
