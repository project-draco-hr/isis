{
  final String id=request.getOptionalProperty(OBJECT);
  final String fieldName=request.getOptionalProperty(FIELD);
  final int truncateTo=Integer.valueOf(request.getOptionalProperty(TRUNCATE,"0")).intValue();
  final boolean isIconShowing=request.isRequested(SHOW_ICON,showIconByDefault());
  String className=request.getOptionalProperty(CLASS);
  className=className == null ? "title-icon" : className;
  ObjectAdapter object=MethodsUtils.findObject(request.getContext(),id);
  if (fieldName != null) {
    final ObjectAssociation field=object.getSpecification().getAssociation(fieldName);
    if (field.isVisible(IsisContext.getAuthenticationSession(),object,Where.ANYWHERE).isVetoed()) {
      throw new ForbiddenException(field,ForbiddenException.VISIBLE);
    }
    object=field.get(object);
  }
  if (object != null) {
    request.appendHtml("<span class=\"object\">");
    IsisContext.getPersistenceSession().resolveImmediately(object);
    if (isIconShowing) {
      final String iconPath=request.getContext().imagePath(object);
      request.appendHtml("<img class=\"" + className + "\" src=\""+ iconPath+ "\" />");
    }
    request.appendTruncated(object.titleString(),truncateTo);
    request.appendHtml("</span>");
  }
  request.closeEmpty();
}
