{
  final HttpServletRequest httpRequest=(HttpServletRequest)request;
  final HttpServletResponse httpResponse=(HttpServletResponse)response;
  if (requestIsIgnoreExtension(filter,httpRequest)) {
    try {
      chain.doFilter(request,response);
      return;
    }
  finally {
      closeSession();
    }
  }
  if (ResourceCachingFilter.isCachedResource(httpRequest)) {
    try {
      chain.doFilter(request,response);
      return;
    }
  finally {
      closeSession();
    }
  }
  if (requestToLogonPage(filter,httpRequest)) {
    NO_SESSION_SINCE_REDIRECTING_TO_LOGON_PAGE.setOn(request);
    try {
      chain.doFilter(request,response);
      return;
    }
  finally {
      UNDEFINED.setOn(request);
      closeSession();
    }
  }
  final AuthenticationSession validSession=filter.authSessionLookupStrategy.lookupValid(request,response,filter.caching);
  if (validSession != null) {
    filter.authSessionLookupStrategy.bind(request,response,validSession,filter.caching);
    openSession(validSession);
    SESSION_IN_PROGRESS.setOn(request);
    try {
      chain.doFilter(request,response);
    }
  finally {
      UNDEFINED.setOn(request);
      closeSession();
    }
    return;
  }
  if (filter.logonPageIfNoSession != null) {
    httpResponse.sendRedirect(filter.logonPageIfNoSession);
    return;
  }
  try {
    NO_SESSION_SINCE_NOT_AUTHENTICATED.setOn(request);
    chain.doFilter(request,response);
  }
 catch (  RuntimeException ex) {
    if (filter.redirectToOnNoSessionException != null) {
      httpResponse.sendRedirect(filter.redirectToOnNoSessionException);
      return;
    }
    throw ex;
  }
catch (  IOException ex) {
    if (filter.redirectToOnNoSessionException != null) {
      httpResponse.sendRedirect(filter.redirectToOnNoSessionException);
      return;
    }
    throw ex;
  }
catch (  ServletException ex) {
    if (filter.redirectToOnNoSessionException != null) {
      httpResponse.sendRedirect(filter.redirectToOnNoSessionException);
      return;
    }
    throw ex;
  }
 finally {
    UNDEFINED.setOn(request);
  }
}
