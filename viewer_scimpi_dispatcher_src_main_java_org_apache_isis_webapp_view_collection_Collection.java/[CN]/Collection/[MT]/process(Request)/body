{
  RequestContext context=request.getContext();
  ObjectAdapter collection;
  String field=request.getOptionalProperty(FIELD);
  if (field != null) {
    String id=request.getOptionalProperty(OBJECT);
    ObjectAdapter object=(ObjectAdapter)context.getMappedObjectOrResult(id);
    ObjectAssociation objectField=object.getSpecification().getAssociation(field);
    if (!objectField.isOneToManyAssociation()) {
      throw new ScimpiException("Field " + objectField.getId() + " is not a collection");
    }
    IsisContext.getPersistenceSession().resolveField(object,objectField);
    collection=objectField.get(object);
  }
 else {
    String id=request.getOptionalProperty(COLLECTION);
    collection=context.getMappedObjectOrResult(id);
  }
  RepeatMarker marker=request.createMarker();
  String variable=request.getOptionalProperty(ELEMENT_NAME);
  String scopeName=request.getOptionalProperty(SCOPE);
  Scope scope=RequestContext.scope(scopeName,Scope.REQUEST);
  String rowClassesList=request.getOptionalProperty(ROW_CLASSES,ODD_ROW_CLASS + "|" + EVEN_ROW_CLASS);
  String[] rowClasses=new String[0];
  if (rowClassesList != null) {
    rowClasses=rowClassesList.split("[,|/]");
  }
  CollectionFacet facet=(CollectionFacet)collection.getSpecification().getFacet(CollectionFacet.class);
  if (facet.size(collection) == 0) {
    request.skipUntilClose();
  }
 else {
    Iterator<ObjectAdapter> iterator=facet.iterator(collection);
    int row=0;
    while (iterator.hasNext()) {
      ObjectAdapter element=(ObjectAdapter)iterator.next();
      context.addVariable("row","" + (row + 1),Scope.REQUEST);
      if (rowClassesList != null) {
        context.addVariable("row-class",rowClasses[row % rowClasses.length],Scope.REQUEST);
      }
      context.addVariable(variable,context.mapObject(element,scope),scope);
      marker.repeat();
      request.processUtilCloseTag();
      row++;
    }
  }
}
