{
  if (updates == null) {
    return;
  }
  if (object.getOid() == null && object.persistable() != Persistable.TRANSIENT) {
    NakedObjects.getObjectLoader().madePersistent(object,updates.getOid());
    object.setOptimisticLock(updates.getVersion());
  }
  Data[] fieldData=updates.getFieldContent();
  if (fieldData == null) {
    return;
  }
  NakedObjectField[] fields=dataStructure.getFields(object.getSpecification());
  for (int i=0; i < fieldData.length; i++) {
    if (fieldData[i] == null) {
      continue;
    }
    if (fields[i].isObject()) {
      NakedObject field=object.getAssociation((OneToOneAssociation)fields[i]);
      ObjectData fieldContent=(ObjectData)updates.getFieldContent()[i];
      if (field != null) {
        madePersistent(field,fieldContent);
      }
    }
 else     if (fields[i].isCollection()) {
      CollectionData collectionData=(CollectionData)updates.getFieldContent()[i];
      for (int j=0; j < collectionData.getElements().length; j++) {
        if (collectionData.getElements()[j] instanceof ObjectData) {
          NakedObject element=((NakedCollection)object.getField(fields[i])).elementAt(j);
          ObjectData elementData=(ObjectData)collectionData.getElements()[j];
          madePersistent(element,elementData);
        }
      }
    }
  }
}
