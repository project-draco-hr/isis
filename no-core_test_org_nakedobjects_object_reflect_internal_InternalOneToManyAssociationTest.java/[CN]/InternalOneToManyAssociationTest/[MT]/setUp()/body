{
  Logger.getRootLogger().setLevel(Level.OFF);
  loader=new MockNakedObjectSpecificationLoader();
  new NakedObjectsClient().setSpecificationLoader(loader);
  spec=new DummyNakedObjectSpecification();
  loader.addSpec(spec);
  objectWithVector=new InternalObjectWithVector();
  nakedObject=new MockNakedObject();
  nakedObject.setupObject(objectWithVector);
  elements=new InternalObjectForReferencing[3];
  for (int i=0; i < elements.length; i++) {
    elements[i]=new InternalObjectForReferencing();
  }
  Class cls=InternalObjectWithVector.class;
  Method get=cls.getDeclaredMethod("getMethod",new Class[0]);
  Method add=cls.getDeclaredMethod("addToMethod",new Class[]{InternalObjectForReferencing.class});
  Method remove=cls.getDeclaredMethod("removeFromMethod",new Class[]{InternalObjectForReferencing.class});
  oneToOneAssociation=new InternalOneToManyAssociation(MEMBERS_FIELD_NAME,InternalCollection.class,get,add,remove,null);
}
