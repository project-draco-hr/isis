{
  final ActionModel actionModel=getActionModel();
  final String invalidReasonIfAny=actionModel.getReasonInvalidIfAny();
  if (invalidReasonIfAny != null) {
    feedbackForm.error(invalidReasonIfAny);
    return false;
  }
  try {
    final ObjectAdapter resultAdapter=executeActionHandlingApplicationExceptions();
    getTransactionManager().flushTransaction();
    final ResultType resultType=ResultType.determineFor(resultAdapter);
    resultType.addResults(this,resultAdapter);
    if (actionModel.hasSafeActionSemantics()) {
      bookmarkPage(actionModel);
    }
    return true;
  }
 catch (  RuntimeException ex) {
    List<ExceptionRecognizer> exceptionRecognizers=getServicesInjector().lookupServices(ExceptionRecognizer.class);
    String message=new ExceptionRecognizerComposite(exceptionRecognizers).recognize(ex);
    if (message != null) {
      if (feedbackForm != null) {
        feedbackForm.error(message);
      }
 else {
        getMessageBroker().setApplicationError(message);
        final ResultType resultType=ResultType.determineFor(null);
        resultType.addResults(this,null);
      }
      return false;
    }
    throw ex;
  }
}
