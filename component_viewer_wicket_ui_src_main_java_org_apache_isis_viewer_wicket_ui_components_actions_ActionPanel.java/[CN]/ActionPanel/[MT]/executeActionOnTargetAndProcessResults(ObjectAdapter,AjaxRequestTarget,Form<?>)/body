{
  final ActionModel actionModel=getActionModel();
  final String invalidReasonIfAny=actionModel.getReasonInvalidIfAny();
  if (invalidReasonIfAny != null) {
    raiseWarning(target,feedbackForm,invalidReasonIfAny);
    return false;
  }
  try {
    final ObjectAdapter resultAdapter=executeActionHandlingApplicationExceptions();
    getTransactionManager().flushTransaction();
    ActionResultResponse resultResponse=ActionResultResponseType.determineAndInterpretResult(this.getActionModel(),resultAdapter);
    final ActionResultResponseHandlingStrategy resultType=ActionResultResponseHandlingStrategy.determineFor(resultResponse);
    resultType.handleResults(this,resultResponse);
    if (actionModel.isBookmarkable()) {
      bookmarkPage(actionModel);
    }
    return true;
  }
 catch (  RuntimeException ex) {
    String message=recognizeException(ex,target,feedbackForm);
    if (message != null) {
      if (feedbackForm == null) {
        final ActionResultResponseHandlingStrategy resultType=ActionResultResponseHandlingStrategy.determineFor(null);
        resultType.handleResults(this,null);
      }
      return false;
    }
    throw ex;
  }
}
