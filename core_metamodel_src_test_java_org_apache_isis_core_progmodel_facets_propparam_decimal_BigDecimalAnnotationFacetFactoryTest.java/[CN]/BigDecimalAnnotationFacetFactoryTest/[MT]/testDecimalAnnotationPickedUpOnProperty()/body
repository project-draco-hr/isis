{
  final BigDecimalForPropertyDerivedFromDecimalAnnotationFacetFactory facetFactory=new BigDecimalForPropertyDerivedFromDecimalAnnotationFacetFactory();
class Order {
    @SuppressWarnings("unused") @Decimal(length=14,scale=4) public BigDecimal getCost(){
      return null;
    }
  }
  final Method method=findMethod(Order.class,"getCost");
  facetFactory.process(new ProcessMethodContext(Order.class,null,null,method,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(BigDecimalValueFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof BigDecimalFacetForPropertyFromDecimalAnnotation);
  final BigDecimalFacetForPropertyFromDecimalAnnotation annotation=(BigDecimalFacetForPropertyFromDecimalAnnotation)facet;
  assertEquals(new Integer(14),annotation.getLength());
  assertEquals(new Integer(4),annotation.getScale());
}
