{
  try {
    super.init();
    configureWebJars();
    configureWicketBootstrap();
    configureWicketSelect2();
    String isisConfigDir=getServletContext().getInitParameter("isis.config.dir");
    configureLogging(isisConfigDir);
    getRequestCycleSettings().setRenderStrategy(RenderStrategy.REDIRECT_TO_RENDER);
    getResourceSettings().setParentFolderPlaceholder("$up$");
    determineDeploymentTypeIfRequired();
    RequestCycleListenerCollection requestCycleListeners=getRequestCycleListeners();
    IRequestCycleListener requestCycleListenerForIsis=newWebRequestCycleForIsis();
    requestCycleListeners.add(requestCycleListenerForIsis);
    requestCycleListeners.add(new PageRequestHandlerTracker());
    final IsisConfigurationBuilder isisConfigurationBuilder=createConfigBuilder();
    final IsisInjectModule isisModule=newIsisModule(deploymentType,isisConfigurationBuilder);
    final Injector injector=Guice.createInjector(isisModule,newIsisWicketModule());
    injector.injectMembers(this);
    if (requestCycleListenerForIsis instanceof WebRequestCycleForIsis) {
      WebRequestCycleForIsis webRequestCycleForIsis=(WebRequestCycleForIsis)requestCycleListenerForIsis;
      webRequestCycleForIsis.setPageClassRegistry(pageClassRegistry);
    }
    final IsisConfiguration configuration=isisConfigurationBuilder.getConfiguration();
    this.getMarkupSettings().setStripWicketTags(determineStripWicketTags(configuration));
    getDebugSettings().setAjaxDebugModeEnabled(determineAjaxDebugModeEnabled(configuration));
    initWicketComponentInjection(injector);
    buildCssBundle();
    filterJavascriptContributions();
    configureWicketSourcePlugin();
    int maxEntries=1000;
    setMetaData(AccountConfirmationMap.KEY,new AccountConfirmationMap(maxEntries,Duration.days(1)));
    mountPages();
    @SuppressWarnings("unused") SharedResources sharedResources=getSharedResources();
  }
 catch (  RuntimeException ex) {
    List<MetaModelInvalidException> mmies=locateMetaModelInvalidExceptions(ex);
    if (!mmies.isEmpty()) {
      final MetaModelInvalidException mmie=mmies.get(0);
      log("");
      logBanner();
      log("");
      validationErrors.addAll(mmie.getValidationErrors());
      for (      String validationError : validationErrors) {
        logError(validationError);
      }
      log("");
      log("Please inspect the above messages and correct your domain model.");
      log("");
      logBanner();
      log("");
    }
 else {
      LOG.error("Failed to initialize",ex);
      throw ex;
    }
  }
}
