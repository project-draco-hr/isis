{
  if (LOG.isDebugEnabled()) {
    LOG.debug("creating " + this);
  }
  this.servicesInjector=servicesInjector;
  this.jdoPersistenceManagerFactory=jdoPersistenceManagerFactory;
  this.fixturesInstalledFlag=fixturesInstalledFlag;
  this.configuration=servicesInjector.getConfigurationServiceInternal();
  this.specificationLoader=servicesInjector.getSpecificationLoader();
  this.authenticationSession=authenticationSession;
  this.commandContext=lookupService(CommandContext.class);
  this.commandService=lookupService(CommandService.class);
  this.interactionContext=lookupService(InteractionContext.class);
  this.eventBusService=lookupService(EventBusService.class);
  this.changedObjectsServiceInternal=lookupService(ChangedObjectsServiceInternal.class);
  this.metricsService=lookupService(MetricsService.class);
  this.factoryService=lookupService(FactoryService.class);
  this.clockService=lookupService(ClockService.class);
  this.userService=lookupService(UserService.class);
  this.bulkInteractionContext=lookupService(Bulk.InteractionContext.class);
  final AdapterManager adapterManager=this;
  this.persistenceQueryFactory=new PersistenceQueryFactory(adapterManager,this.specificationLoader);
  this.transactionManager=new IsisTransactionManager(this,servicesInjector);
  this.state=State.NOT_INITIALIZED;
  final boolean concurrencyCheckingGloballyDisabled=this.configuration.getBoolean("isis.persistor.disableConcurrencyChecking",false);
  this.concurrencyCheckingGloballyEnabled=!concurrencyCheckingGloballyDisabled;
}
