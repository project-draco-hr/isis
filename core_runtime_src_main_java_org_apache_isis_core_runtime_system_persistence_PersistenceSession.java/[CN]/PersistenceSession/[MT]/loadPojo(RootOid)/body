{
  Object result=null;
  try {
    final Class<?> cls=clsOf(rootOid);
    final Object jdoObjectId=JdoObjectIdSerializer.toJdoObjectId(rootOid);
    final PersistenceManager pm=objectStore.getPersistenceManager();
    FetchPlan fetchPlan=pm.getFetchPlan();
    fetchPlan.addGroup(FetchGroup.DEFAULT);
    result=pm.getObjectById(cls,jdoObjectId);
  }
 catch (  final RuntimeException e) {
    final List<ExceptionRecognizer> exceptionRecognizers=getServicesInjector().lookupServices(ExceptionRecognizer.class);
    for (    ExceptionRecognizer exceptionRecognizer : exceptionRecognizers) {
      if (exceptionRecognizer instanceof ExceptionRecognizer2) {
        final ExceptionRecognizer2 recognizer=(ExceptionRecognizer2)exceptionRecognizer;
        final ExceptionRecognizer2.Recognition recognition=recognizer.recognize2(e);
        if (recognition != null) {
          if (recognition.getCategory() == ExceptionRecognizer2.Category.NOT_FOUND) {
            throw new ObjectNotFoundException(rootOid,e);
          }
        }
      }
    }
    throw e;
  }
  if (result == null) {
    throw new ObjectNotFoundException(rootOid);
  }
  return result;
}
