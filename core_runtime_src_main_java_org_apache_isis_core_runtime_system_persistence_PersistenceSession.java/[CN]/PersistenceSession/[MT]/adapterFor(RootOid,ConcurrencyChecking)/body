{
  ObjectAdapter adapter=getAdapterFor(rootOid);
  if (adapter == null) {
    try {
      final Object pojo=recreatePojo(rootOid);
      adapter=mapRecreatedPojo(rootOid,pojo);
    }
 catch (    ObjectNotFoundException ex) {
      throw ex;
    }
catch (    RuntimeException ex) {
      throw new PojoRecreationException(rootOid,ex);
    }
  }
  Oid adapterOid=adapter.getOid();
  if (adapterOid instanceof RootOid) {
    final RootOid recreatedOid=(RootOid)adapterOid;
    final RootOid originalOid=rootOid;
    try {
      if (concurrencyChecking.isChecking()) {
        final Version otherVersion=originalOid.getVersion();
        final Version thisVersion=recreatedOid.getVersion();
        if (thisVersion != null && otherVersion != null && thisVersion.different(otherVersion)) {
          if (concurrencyCheckingGloballyEnabled && ConcurrencyChecking.isCurrentlyEnabled()) {
            LOG.info("concurrency conflict detected on " + recreatedOid + " ("+ otherVersion+ ")");
            final String currentUser=authenticationSession.getUserName();
            throw new ConcurrencyException(currentUser,recreatedOid,thisVersion,otherVersion);
          }
 else {
            LOG.warn("concurrency conflict detected but suppressed, on " + recreatedOid + " ("+ otherVersion+ ")");
          }
        }
      }
    }
  finally {
      final Version originalVersion=originalOid.getVersion();
      final Version recreatedVersion=recreatedOid.getVersion();
      if (recreatedVersion != null && (originalVersion == null || recreatedVersion.different(originalVersion))) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("updating version in oid, on " + originalOid + " ("+ originalVersion+ ") to ("+ recreatedVersion+ ")");
        }
        originalOid.setVersion(recreatedVersion);
      }
    }
  }
  return adapter;
}
