{
  ensureNotOpened();
  if (LOG.isDebugEnabled()) {
    LOG.debug("opening " + this);
  }
  oidAdapterMap.open();
  pojoAdapterMap.open();
  persistenceManager=jdoPersistenceManagerFactory.getPersistenceManager();
  final IsisLifecycleListener2.PersistenceSessionLifecycleManagement psLifecycleMgmt=this;
  final IsisLifecycleListener2 isisLifecycleListener=new IsisLifecycleListener2(psLifecycleMgmt);
  persistenceManager.addInstanceLifecycleListener(isisLifecycleListener,(Class[])null);
  final PersistenceQueryProcessorAbstract.PersistenceSessionQueryProcessorManagement psQueryProcessorMgmt=this;
  persistenceQueryProcessorByClass.put(PersistenceQueryFindAllInstances.class,new PersistenceQueryFindAllInstancesProcessor(psQueryProcessorMgmt));
  persistenceQueryProcessorByClass.put(PersistenceQueryFindUsingApplibQueryDefault.class,new PersistenceQueryFindUsingApplibQueryProcessor(psQueryProcessorMgmt));
  initServices();
  final MetricsServiceDefault metricsServiceDefault=servicesInjector.lookupService(MetricsServiceDefault.class);
  persistenceManager.addInstanceLifecycleListener(metricsServiceDefault,(Class[])null);
  setState(State.OPEN);
}
