{
  final LinkRepresentation link=Util.serviceActionListInvokeFirstReference(client,"JodaValuedEntities");
  domainObjectRepr=client.follow(link).getEntity().as(DomainObjectRepresentation.class);
  DomainObjectMemberRepresentation property;
  ScalarValueRepresentation scalarRepr;
  property=domainObjectRepr.getProperty("localDateProperty");
  assertThat(property.getMemberType(),is("property"));
  assertThat(property.getFormat(),is("date"));
  assertThat(property.getXIsisFormat(),is("jodalocaldate"));
  scalarRepr=property.getRepresentation("value").as(ScalarValueRepresentation.class);
  assertThat(scalarRepr.isString(),is(true));
  java.util.Date dateValue=scalarRepr.asDate();
  assertThat(dateValue,is(asDate("2008-03-21")));
  property=domainObjectRepr.getProperty("localDateTimeProperty");
  assertThat(property.getMemberType(),is("property"));
  assertThat(property.getFormat(),is("date-time"));
  assertThat(property.getXIsisFormat(),is("jodalocaldatetime"));
  scalarRepr=property.getRepresentation("value").as(ScalarValueRepresentation.class);
  assertThat(scalarRepr.isString(),is(true));
  java.util.Date dateTimeValue=scalarRepr.asDateTime();
  assertThat(dateTimeValue,is(not(nullValue())));
  assertThat(scalarRepr.asString(),IsisMatchers.startsWith("2009-04-29T13:45:22+0100"));
  property=domainObjectRepr.getProperty("localDateProperty");
  assertThat(property.getLinkWithRel(Rel.DETAILS),isLink().href(matches(".+\\/objects\\/JODA\\/\\d+\\/properties\\/localDateProperty")).httpMethod(RestfulHttpMethod.GET).type(RepresentationType.OBJECT_PROPERTY.getMediaType()));
  property=domainObjectRepr.getProperty("localDateTimeProperty");
  assertThat(property.getLinkWithRel(Rel.DETAILS),isLink().href(matches(".+\\/objects\\/JODA\\/\\d+\\/properties\\/localDateTimeProperty")).httpMethod(RestfulHttpMethod.GET).type(RepresentationType.OBJECT_PROPERTY.getMediaType()));
}
