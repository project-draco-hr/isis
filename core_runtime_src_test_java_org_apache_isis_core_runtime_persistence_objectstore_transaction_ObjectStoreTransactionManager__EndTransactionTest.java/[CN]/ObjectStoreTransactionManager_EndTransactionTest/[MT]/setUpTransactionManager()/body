{
  context.checking(new Expectations(){
{
      allowing(mockAuthenticationSession).getUserName();
      will(returnValue("sven"));
      allowing(mockAuthenticationSession).getMessageBroker();
      will(returnValue(mockMessageBroker));
    }
  }
);
  transactionManager=new IsisTransactionManager(mockPersistenceSession,new ServicesInjectorDefault(Collections.emptyList())){
    @Override public AuthenticationSession getAuthenticationSession(){
      return mockAuthenticationSession;
    }
  }
;
}
