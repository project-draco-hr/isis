{
  final byte b=(byte)99;
  modifyLink=getObjectPropertyReprModifyLink("PRMV","40","byteProperty");
  argRepr=modifyLink.getArguments().mapPut("value",b);
  assertThat(followedRepr(modifyLink,argRepr).getByte("value"),is(b));
  final char c='b';
  modifyLink=getObjectPropertyReprModifyLink("PRMV","40","charProperty");
  argRepr=modifyLink.getArguments().mapPut("value",c);
  assertThat(followedRepr(modifyLink,argRepr).getChar("value"),is(c));
  final double d=12345.678;
  modifyLink=getObjectPropertyReprModifyLink("PRMV","40","doubleProperty");
  argRepr=modifyLink.getArguments().mapPut("value",d);
  assertThat(followedRepr(modifyLink,argRepr).getDouble("value"),is(d));
  final float f=54321.123F;
  modifyLink=getObjectPropertyReprModifyLink("PRMV","40","floatProperty");
  argRepr=modifyLink.getArguments().mapPut("value",f);
  assertThat(followedRepr(modifyLink,argRepr).getFloat("value"),is(f));
  final int i=999999;
  modifyLink=getObjectPropertyReprModifyLink("PRMV","40","intProperty");
  argRepr=modifyLink.getArguments().mapPut("value",i);
  assertThat(followedRepr(modifyLink,argRepr).getInt("value"),is(i));
  final long l=99999999999L;
  modifyLink=getObjectPropertyReprModifyLink("PRMV","40","longProperty");
  argRepr=modifyLink.getArguments().mapPut("value",l);
  assertThat(followedRepr(modifyLink,argRepr).getLong("value"),is(l));
  final short s=(short)999;
  modifyLink=getObjectPropertyReprModifyLink("PRMV","40","shortProperty");
  argRepr=modifyLink.getArguments().mapPut("value",s);
  assertThat(followedRepr(modifyLink,argRepr).getShort("value"),is(s));
  final boolean z=false;
  modifyLink=getObjectPropertyReprModifyLink("PRMV","40","booleanProperty");
  argRepr=modifyLink.getArguments().mapPut("value",z);
  assertThat(followedRepr(modifyLink,argRepr).getBoolean("value"),is(z));
}
