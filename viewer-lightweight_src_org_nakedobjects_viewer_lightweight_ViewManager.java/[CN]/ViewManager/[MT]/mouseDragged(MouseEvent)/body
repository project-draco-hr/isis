{
  mouseLocation=new Location(me.getPoint());
  if (canDrag) {
    if (drag == null) {
      View identified=workspace.getIdentifiedView();
      if (identified instanceof DragSource) {
        saveCurrentFieldEntry();
        Location p=new Location(downAt);
        Location offsetFrom=identified.getAbsoluteLocation();
        p.translate(-offsetFrom.x,-offsetFrom.y);
        if (identified.indicatesForView(p)) {
          drag=new ViewDrag((DragSource)identified,me,downAt);
        }
 else {
          drag=new ObjectDrag((DragSource)identified,me,downAt);
        }
        workspace.setOverlayView(drag.getDragging());
        identified.exited();
        LOG.debug("ObjectView.pickupObject/View " + drag);
      }
 else       if (identified instanceof AbstractValueView) {
        drag=new InternalDrag((AbstractValueView)identified,me,downAt);
        LOG.debug("ValueView.dragFrom " + drag);
      }
 else {
        LOG.debug("invalid drag start; not a drag source: " + identified);
      }
    }
 else {
      drag.update(me);
      if (drag instanceof InternalDrag) {
        drag.dragIn(null);
      }
 else {
        if (getDraggingView() != null) {
          getDraggingView().dragging(drag);
        }
        View over=workspace.identifyView(new Location(me.getPoint()),getDraggingView());
        View identified=workspace.getIdentifiedView();
        if (over != identified) {
          if (identified != null) {
            drag.dragOut(identified);
          }
          workspace.setIdentifiedView(over);
          if (over != null) {
            drag.dragIn(over);
          }
        }
      }
    }
  }
}
