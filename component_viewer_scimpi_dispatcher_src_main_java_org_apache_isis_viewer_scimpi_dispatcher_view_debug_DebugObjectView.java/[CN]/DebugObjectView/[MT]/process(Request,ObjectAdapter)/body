{
  final String classString=" class=\"" + request.getOptionalProperty(CLASS,"form debug") + "\"";
  final String objectLink=request.getOptionalProperty(OBJECT + "-" + LINK_VIEW,request.getViewPath());
  final String oddRowClass=request.getOptionalProperty(ODD_ROW_CLASS);
  final String evenRowClass=request.getOptionalProperty(EVEN_ROW_CLASS);
  final boolean showIcons=request.isRequested(SHOW_ICON,true);
  ObjectSpecification specification=object.getSpecification();
  request.appendHtml("<div" + classString + ">");
  request.appendHtml("<div class=\"title\">");
  request.appendAsHtmlEncoded(specification.getSingularName() + " - " + specification.getFullIdentifier());
  request.appendHtml("</div>");
  Version version=object.getVersion();
  request.appendHtml("<div class=\"version\">");
  request.appendAsHtmlEncoded("#" + version.sequence() + " - "+ version.getUser()+ " ("+ version.getTime()+ ")");
  request.appendHtml("</div>");
  final List<ObjectAssociation> fields=specification.getAssociations(Contributed.EXCLUDED,ObjectAssociationFilters.ALL);
  int row=1;
  for (int i=0; i < fields.size(); i++) {
    final ObjectAssociation field=fields.get(i);
    String cls;
    if (row++ % 2 == 1) {
      cls=" class=\"field " + (oddRowClass == null ? ODD_ROW_CLASS : oddRowClass) + "\"";
    }
 else {
      cls=" class=\"field " + (evenRowClass == null ? EVEN_ROW_CLASS : evenRowClass) + "\"";
    }
    request.appendHtml("<div " + cls + "><span class=\"label\">");
    request.appendAsHtmlEncoded(field.getName());
    request.appendHtml(":</span>");
    final boolean isNotParseable=!fields.get(i).getSpecification().containsFacet(ParseableFacet.class);
    LinkedObject linkedObject=null;
    if (isNotParseable) {
      linkedObject=new LinkedObject(objectLink);
    }
    addField(request,object,field,linkedObject,showIcons);
    if (field.isOneToManyAssociation()) {
      Collection collection=(Collection)field.get(object).getObject();
      if (collection.size() == 0) {
        request.appendHtml("[empty]");
      }
 else {
        request.appendHtml("<ol>");
        for (        Object element : collection) {
          ObjectAdapter adapterFor=IsisContext.getPersistenceSession().getAdapterManager().getAdapterFor(element);
          IsisContext.getPersistenceSession().resolveImmediately(adapterFor);
          String id=request.getContext().mapObject(adapterFor,linkedObject.getScope(),Scope.INTERACTION);
          request.appendHtml("<li class=\"element\">");
          request.appendHtml("<a href=\"" + linkedObject.getForwardView() + "?"+ linkedObject.getVariable()+ "="+ id+ request.getContext().encodedInteractionParameters()+ "\">");
          request.appendHtml(element.toString());
          request.appendHtml("</a></li>");
        }
        request.appendHtml("</ol>");
      }
    }
 else {
      FieldValue.write(request,object,field,linkedObject,"value",showIcons,0);
    }
    request.appendHtml("</div>");
  }
  request.appendHtml("</div>");
}
