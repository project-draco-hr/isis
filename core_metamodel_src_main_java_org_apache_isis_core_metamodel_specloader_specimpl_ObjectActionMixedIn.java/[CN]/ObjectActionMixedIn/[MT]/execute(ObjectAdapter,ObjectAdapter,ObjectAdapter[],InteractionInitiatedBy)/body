{
  final BulkFacet bulkFacet=getFacet(BulkFacet.class);
  if (bulkFacet != null) {
    final ActionInvocationContext actionInvocationContext=getServicesInjector().lookupService(ActionInvocationContext.class);
    if (actionInvocationContext != null && actionInvocationContext.getInvokedOn() == null) {
      actionInvocationContext.setInvokedOn(InvokedOn.OBJECT);
      actionInvocationContext.setDomainObjects(Collections.singletonList(target.getObject()));
    }
    final Bulk.InteractionContext bulkInteractionContext=getServicesInjector().lookupService(Bulk.InteractionContext.class);
    if (bulkInteractionContext != null && bulkInteractionContext.getInvokedAs() == null) {
      bulkInteractionContext.setInvokedAs(Bulk.InteractionContext.InvokedAs.REGULAR);
      actionInvocationContext.setDomainObjects(Collections.singletonList(target.getObject()));
    }
  }
  final CommandContext commandContext=getServicesInjector().lookupService(CommandContext.class);
  final Command command=commandContext != null ? commandContext.getCommand() : null;
  if (command != null && command.getExecutor() == Executor.USER) {
    if (command.getTarget() != null) {
    }
 else {
      command.setTargetClass(CommandUtil.targetClassNameFor(target));
      command.setTargetAction(CommandUtil.targetActionNameFor(this));
      command.setArguments(CommandUtil.argDescriptionFor(this,arguments));
      final Bookmark targetBookmark=CommandUtil.bookmarkFor(target);
      command.setTarget(targetBookmark);
    }
  }
  final ObjectAdapter targetAdapter=mixinAdapterFor(mixinType,target);
  final ObjectAdapter actualMixedInAdapter=target;
  return mixinAction.execute(targetAdapter,actualMixedInAdapter,arguments,interactionInitiatedBy);
}
