{
  final IsisConfiguration configuration=getConfiguration();
  final AuthenticationManager authenticationManager=obtainAuthenticationManager(deploymentType);
  final AuthorizationManager authorizationManager=obtainAuthorizationManager(deploymentType);
  final TemplateImageLoader templateImageLoader=obtainTemplateImageLoader();
  final OidMarshaller oidMarshaller=obtainOidMarshaller();
  final Collection<MetaModelRefiner> metaModelRefiners=refiners(authenticationManager,authorizationManager,templateImageLoader,persistenceSessionFactory);
  final SpecificationLoaderSpi reflector=obtainSpecificationLoaderSpi(deploymentType,persistenceSessionFactory,metaModelRefiners);
  final DomainObjectContainer container=obtainContainer();
  final List<Object> services=obtainServices();
  final RuntimeContextFromSession runtimeContext=obtainRuntimeContextFromSession();
  runtimeContext.injectInto(reflector);
  return newIsisSessionFactory(deploymentType,userProfileLoader,persistenceSessionFactory,configuration,authenticationManager,authorizationManager,templateImageLoader,oidMarshaller,reflector,container,services);
}
