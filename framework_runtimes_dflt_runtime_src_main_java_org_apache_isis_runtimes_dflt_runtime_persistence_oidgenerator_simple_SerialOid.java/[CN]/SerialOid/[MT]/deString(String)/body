{
  final Matcher matcher=DESTRING_PATTERN.matcher(oidStr);
  if (!matcher.matches()) {
    throw new IllegalArgumentException("Could not parse OID '" + oidStr + "'; should match pattern: "+ DESTRING_PATTERN.toString());
  }
  final String transientStr=matcher.group(1);
  final String serialNumInHexStr=matcher.group(2);
  final String previousStr=matcher.group(3);
  final SerialOid oid=createOid(transientStr,serialNumInHexStr);
  if (!StringUtils.isEmpty(previousStr)) {
    final String previousTransientStr=matcher.group(4);
    final String previousSerialNumInHexStr=matcher.group(5);
    oid.previous=createOid(previousTransientStr,previousSerialNumInHexStr);
  }
  return oid;
}
