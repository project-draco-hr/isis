{
  JavaBusinessObjectContainer container=new JavaBusinessObjectContainer();
  JavaObjectFactory objectFactory=new JavaObjectFactory();
  objectFactory.setContainer(container);
  TransientObjectStore objectStore=new TransientObjectStore();
  OidGenerator oidGenerator=new TimeBasedOidGenerator();
  DefaultPersistAlgorithm persistAlgorithm=new DefaultPersistAlgorithm();
  persistAlgorithm.setOidGenerator(oidGenerator);
  LocalObjectManager objectManager=new LocalObjectManager();
  objectManager.setObjectStore(objectStore);
  objectManager.setPersistAlgorithm(persistAlgorithm);
  nakedObjects.setObjectManager(objectManager);
  StaticNakedObjectSpecificationLoader specificationLoader=new StaticNakedObjectSpecificationLoader();
  nakedObjects.setSpecificationLoader(specificationLoader);
  LocalReflectionFactory reflectionFactory=new LocalReflectionFactory();
  JavaReflectorFactory reflectorFactory=new JavaReflectorFactory();
  ObjectLoaderImpl objectLoader=new ObjectLoaderImpl();
  nakedObjects.setObjectLoader(objectLoader);
  objectLoader.setObjectFactory(objectFactory);
  objectLoader.setPojoAdapterMap(new PojoAdapterHashImpl());
  objectLoader.setIdentityAdapterMap(new IdentityAdapterMapImpl());
  nakedObjects.setReflectionFactory(reflectionFactory);
  nakedObjects.setReflectorFactory(reflectorFactory);
  try {
    objectManager.init();
  }
 catch (  StartupException e) {
    throw new NakedObjectRuntimeException(e);
  }
}
