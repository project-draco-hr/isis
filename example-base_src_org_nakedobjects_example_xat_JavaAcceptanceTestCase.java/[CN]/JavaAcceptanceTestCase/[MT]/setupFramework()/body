{
  JavaBusinessObjectContainer container=new JavaBusinessObjectContainer();
  loadedObjectsHashtable=new ClearableLoadedObjectsHashtable();
  JavaObjectFactory objectFactory=new JavaObjectFactory();
  objectFactory.setContainer(container);
  container.setObjectFactory(objectFactory);
  TransientObjectStore objectStore=new TransientObjectStore();
  objectStore.setLoadedObjects(loadedObjectsHashtable);
  OidGenerator oidGenerator=new TimeBasedOidGenerator();
  LocalObjectManager objectManager=new LocalObjectManager();
  objectManager.setObjectStore(objectStore);
  objectManager.setNotifier(new NullUpdateNotifier());
  objectManager.setObjectFactory(objectFactory);
  objectManager.setOidGenerator(oidGenerator);
  objectManager.setLoadedObjects(loadedObjectsHashtable);
  NakedObjects.setObjectManager(objectManager);
  container.setObjectManger(objectManager);
  NakedObjectSpecificationLoaderImpl specificationLoader=new NakedObjectSpecificationLoaderImpl();
  NakedObjects.setSpecificationLoader(specificationLoader);
  LocalReflectionFactory reflectionFactory=new LocalReflectionFactory();
  JavaReflectorFactory reflectorFactory=new JavaReflectorFactory();
  PojoAdapterFactory pojoAdapterFactory=new PojoAdapterFactory();
  pojoAdapterFactory.setPojoAdapterHash(new PojoAdapterHashImpl());
  pojoAdapterFactory.setReflectorFactory(reflectorFactory);
  NakedObjects.setPojoAdapterFactory(pojoAdapterFactory);
  NakedObjectSpecificationImpl.setReflectionFactory(reflectionFactory);
  specificationLoader.setReflectorFactory(reflectorFactory);
  reflectorFactory.setObjectFactory(objectFactory);
  try {
    objectManager.init();
  }
 catch (  StartupException e) {
    throw new NakedObjectRuntimeException(e);
  }
  Runtime.getRuntime().gc();
}
