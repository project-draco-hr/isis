{
  DummyObjectData expectedMovie=new DummyObjectData(new DummyOid(12),Movie.class.getName(),true,new DummyVersion(4));
  DummyValueData expectedMovieName=new DummyValueData("War of the Worlds",String.class.getName());
  DummyReferenceData expectedDirectorRef=new DummyReferenceData(new DummyOid(14),Person.class.getName(),new DummyVersion(8));
  expectedMovie.setFieldContent(new Data[]{expectedDirectorRef,expectedMovieName});
  DummyObjectData expectedDirector=new DummyObjectData(new DummyOid(14),Person.class.getName(),true,new DummyVersion(8));
  DummyValueData expectedDirectorName=new DummyValueData("Unknown",String.class.getName());
  expectedDirector.setFieldContent(new Data[]{expectedDirectorName});
  ObjectData[] changes=new ObjectData[]{expectedMovie,expectedDirector};
  distribution.executeClientAction(session,new ObjectData[0],changes,new ReferenceData[0]);
  Version[] versionUpdates=new Version[]{new DummyVersion(5),new DummyVersion(9)};
  distributionControl.setReturnValue(new DummyClientResultData(null,versionUpdates));
  distributionControl.replay();
  Person director=new Person();
  NakedObject directorAdapter=loader.createAdapterForTransient(director);
  directorAdapter.persistedAs(new DummyOid(14));
  directorAdapter.setOptimisticLock(new DummyVersion(8));
  Movie movie=new Movie();
  NakedObject movieAdapter=loader.createAdapterForTransient(movie);
  movieAdapter.persistedAs(new DummyOid(12));
  movieAdapter.setOptimisticLock(new DummyVersion(4));
  director.setName("Unknown");
  movie.setName("War of the Worlds");
  movie.setDirector(director);
  persistor.startTransaction();
  persistor.objectChanged(movieAdapter);
  persistor.objectChanged(directorAdapter);
  persistor.endTransaction();
  assertEquals(new DummyVersion(5),movieAdapter.getVersion());
  assertEquals(new DummyVersion(9),directorAdapter.getVersion());
  distributionControl.verify();
}
