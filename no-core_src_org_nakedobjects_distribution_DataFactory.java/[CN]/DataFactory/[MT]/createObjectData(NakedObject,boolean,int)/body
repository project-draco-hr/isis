{
  if (object == null) {
    return null;
  }
  boolean nextLevel=object.getResolveState().isTransient() || recursePersistentObjects;
  Oid oid=object.getOid();
  NakedObjectSpecification specification=object.getSpecification();
  String type=specification.getFullName();
  ResolveState resolveState=object.getResolveState();
  boolean isComplete=object.getResolveState() == ResolveState.TRANSIENT || object.getResolveState() == ResolveState.RESOLVED;
  Object[] fieldContent;
  if (resolveState.isSerializing() || !nextLevel || depth == 0 || resolveState.isGhost()) {
    fieldContent=null;
  }
 else {
    NakedObjectField[] fields=specification.getFields();
    fieldContent=new Object[fields.length];
    NakedObjects.getObjectLoader().start(object,object.getResolveState().serializeFrom());
    for (int i=0; i < fields.length; i++) {
      Naked field=object.getField(fields[i]);
      if (field == null && isComplete) {
        fieldContent[i]=createNullData(fields[i].getSpecification().getFullName());
      }
 else       if (field == null && !isComplete) {
        fieldContent[i]=null;
      }
 else       if (fields[i].isValue()) {
        fieldContent[i]=createValueData(field);
      }
 else       if (fields[i].isCollection()) {
        fieldContent[i]=createCollectionData((NakedCollection)field,recursePersistentObjects,depth - 1);
      }
 else {
        fieldContent[i]=createObjectData((NakedObject)field,recursePersistentObjects,depth - 1);
      }
    }
    NakedObjects.getObjectLoader().end(object);
  }
  return createObjectData(oid,type,fieldContent,isComplete,!resolveState.isGhost(),object.getVersion());
}
