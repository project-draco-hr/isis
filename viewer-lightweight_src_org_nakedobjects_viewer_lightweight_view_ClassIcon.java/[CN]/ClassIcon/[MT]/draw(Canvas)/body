{
  super.draw(canvas);
  Bounds r=getBounds();
  Color color;
  if (getState().canDrop()) {
    color=Style.VALID;
  }
 else   if (getState().cantDrop()) {
    color=Style.INVALID;
  }
 else   if (getState().isObjectIdentified()) {
    color=Style.IDENTIFIED;
  }
 else   if (getState().isViewIdentified()) {
    color=Style.ACTIVE;
  }
 else {
    color=Style.IN_BACKGROUND;
  }
  String title=cls.title().toString();
  int iconWidth=icon.getWidth();
  int iconHeight=icon.getHeight();
  int xi=HPADDING;
  int yi=VPADDING;
  int xt=HPADDING;
  int yt=iconHeight + 2 * VPADDING + style.getAscent();
  canvas.drawIcon(icon,xi,yi);
  canvas.drawText(title,xt,yt,color,style);
  if (isIdentified()) {
    if (getState().canDrop()) {
      color=Style.VALID;
    }
 else     if (getState().cantDrop()) {
      color=Style.INVALID;
    }
 else     if (getState().isObjectIdentified()) {
      color=Style.ACTIVE;
    }
 else     if (getState().isViewIdentified()) {
      color=Style.IDENTIFIED;
    }
 else {
      color=Style.APPLICATION_BACKGROUND;
    }
    canvas.drawRectangle(0,0,r.getWidth() - 1,r.getHeight() - 1,color);
    int x=xi + iconWidth + HPADDING;
    int x2=getSize().getWidth() - VPADDING;
    for (int y=yi; y < yi + 20; y+=2) {
      canvas.drawLine(x,y,x2,y,color);
    }
  }
  if (DEBUG) {
    canvas.drawRectangle(0,0,r.getWidth() - 1,r.getHeight() - 1,Color.DEBUG1);
    canvas.drawRectangle(xi,yi,iconWidth - 1,iconHeight - 1,Color.DEBUG1);
  }
}
