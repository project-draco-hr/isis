{
  testBasicBooking();
  firstStep("Retrieve the customer object.");
  TestObject customer=getTestClass(Customer.class.getName()).findInstance("Pawson");
  nextStep("Create a booking for this customer.");
  TestObject booking=customer.invokeActionReturnObject("New Booking",NO_PARAMETERS);
  booking.assertFieldContains("Customer",customer);
  nextStep("Retrieve the customer's home and office as the pick-up and drop-off locations.");
  booking.associate("Pick Up",customer.getField("Locations","234 E 42nd Street, New York"));
  booking.associate("Drop Off",customer.getField("Locations","JFK Airport, BA Terminal, New York"));
  booking.assertFieldContains("City","New York");
  nextStep("Use the customer's mobile phone as the contact number for this booking.");
  TestObject mobile=customer.getField("Phone Numbers","Mobile");
  booking.associate("Contact Telephone",mobile);
  nextStep("Specify when to be picked up.");
  booking.fieldEntry("Date","2001-12-18");
  booking.fieldEntry("Time","7:00:00 AM");
  booking.assertFieldContains("Payment Method",(TestObject)customer.getField("Preferred Payment Method"));
  nextStep("Check it is available");
  booking.invokeAction("Check Availability",NO_PARAMETERS);
  booking.assertFieldContains("Status","Available");
  nextStep("And then confrm");
  booking.invokeAction("Confirm",NO_PARAMETERS);
  booking.assertFieldContains("Status","Confirmed");
}
