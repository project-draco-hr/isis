{
  final Object[] executionParameters=new Object[arguments.length];
  for (int i=0; i < arguments.length; i++) {
    executionParameters[i]=unwrap(arguments[i]);
  }
  final Object targetPojo=unwrap(targetAdapter);
  final ActionSemanticsFacet semanticsFacet=getFacetHolder().getFacet(ActionSemanticsFacet.class);
  final boolean cacheable=semanticsFacet != null && semanticsFacet.value().isSafeAndRequestCacheable();
  if (cacheable) {
    final QueryResultsCache queryResultsCache=getQueryResultsCache();
    final Object[] targetPojoPlusExecutionParameters=ArrayExtensions.appendT(executionParameters,targetPojo);
    return queryResultsCache.execute(new Callable<Object>(){
      @Override public Object call() throws Exception {
        return method.invoke(targetPojo,executionParameters);
      }
    }
,targetPojo.getClass(),method.getName(),targetPojoPlusExecutionParameters);
  }
 else {
    return method.invoke(targetPojo,executionParameters);
  }
}
