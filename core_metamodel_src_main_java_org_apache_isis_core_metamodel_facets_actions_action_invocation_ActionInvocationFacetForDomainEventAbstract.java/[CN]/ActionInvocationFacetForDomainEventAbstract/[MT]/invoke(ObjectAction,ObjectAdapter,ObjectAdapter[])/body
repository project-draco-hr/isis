{
  final CommandContext commandContext=getCommandContext();
  final Command command=commandContext.getCommand();
  try {
    setupActionInvocationContext(owningAction,targetAdapter);
    owningAction.setupCommand(targetAdapter,arguments);
    ObjectAdapter resultAdapter=invokeThruCommand(owningAction,targetAdapter,arguments,command);
    return InvocationResult.forActionThatReturned(resultAdapter);
  }
 catch (  final IllegalArgumentException e) {
    throw e;
  }
catch (  final InvocationTargetException e) {
    final Throwable targetException=e.getTargetException();
    if (targetException instanceof IllegalStateException) {
      throw new ReflectiveActionException(String.format("IllegalStateException thrown while executing %s %s",method,targetException.getMessage()),targetException);
    }
    if (targetException instanceof RecoverableException) {
      if (!getTransactionState().canCommit()) {
        final Throwable targetExceptionCause=targetException.getCause();
        Throwable nonRecoverableCause=targetExceptionCause != null ? targetExceptionCause : targetException;
        final String message=trim(nonRecoverableCause.getMessage(),300);
        throw new NonRecoverableException(message,nonRecoverableCause);
      }
    }
    ThrowableExtensions.throwWithinIsisException(e,"Exception executing " + method);
    return InvocationResult.forActionNotInvoked();
  }
catch (  final IllegalAccessException e) {
    throw new ReflectiveActionException("Illegal access of " + method,e);
  }
}
