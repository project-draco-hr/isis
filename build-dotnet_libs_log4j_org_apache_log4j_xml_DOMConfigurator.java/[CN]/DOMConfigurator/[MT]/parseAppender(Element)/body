{
  String className=subst(appenderElement.getAttribute(CLASS_ATTR));
  LogLog.debug("Class name: [" + className + ']');
  try {
    Object instance=Loader.loadClass(className).newInstance();
    Appender appender=(Appender)instance;
    PropertySetter propSetter=new PropertySetter(appender);
    appender.setName(subst(appenderElement.getAttribute(NAME_ATTR)));
    NodeList children=appenderElement.getChildNodes();
    final int length=children.getLength();
    for (int loop=0; loop < length; loop++) {
      Node currentNode=children.item(loop);
      if (currentNode.getNodeType() == Node.ELEMENT_NODE) {
        Element currentElement=(Element)currentNode;
        if (currentElement.getTagName().equals(PARAM_TAG)) {
          setParameter(currentElement,propSetter);
        }
 else         if (currentElement.getTagName().equals(LAYOUT_TAG)) {
          appender.setLayout(parseLayout(currentElement));
        }
 else         if (currentElement.getTagName().equals(FILTER_TAG)) {
          parseFilters(currentElement,appender);
        }
 else         if (currentElement.getTagName().equals(ERROR_HANDLER_TAG)) {
          parseErrorHandler(currentElement,appender);
        }
 else         if (currentElement.getTagName().equals(APPENDER_REF_TAG)) {
          String refName=subst(currentElement.getAttribute(REF_ATTR));
          if (appender instanceof AppenderAttachable) {
            AppenderAttachable aa=(AppenderAttachable)appender;
            LogLog.debug("Attaching appender named [" + refName + "] to appender named ["+ appender.getName()+ "].");
            aa.addAppender(findAppenderByReference(currentElement));
          }
 else {
            LogLog.error("Requesting attachment of appender named [" + refName + "] to appender named ["+ appender.getName()+ "] which does not implement org.apache.log4j.spi.AppenderAttachable.");
          }
        }
      }
    }
    propSetter.activate();
    return appender;
  }
 catch (  Exception oops) {
    LogLog.error("Could not create an Appender. Reported error follows.",oops);
    return null;
  }
}
