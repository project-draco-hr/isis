{
  serviceInitializer=new ServiceInitializer(configuration,servicesInjector.getRegisteredServices());
  serviceInitializer.validate();
  openSession(new InitialisationSession());
  try {
    IsisTransactionManager transactionManager=getCurrentSessionTransactionManager();
    transactionManager.startTransaction();
    try {
      serviceInitializer.postConstruct();
    }
 catch (    RuntimeException ex) {
      transactionManager.getCurrentTransaction().setAbortCause(new IsisTransactionManagerException(ex));
    }
 finally {
      transactionManager.endTransaction();
    }
    final FixturesInstallerFromConfiguration fixtureInstaller=new FixturesInstallerFromConfiguration(this);
    fixtureInstaller.installFixtures();
    if (!deploymentCategory.isProduction()) {
      logonFixture=fixtureInstaller.getLogonFixture();
    }
    final List<Object> services=servicesInjector.getRegisteredServices();
    final List<Object> copyOfServices=Lists.newArrayList(services);
    final TitleService titleService=servicesInjector.lookupServiceElseFail(TitleService.class);
    for (    Object service : copyOfServices) {
      final String unused=titleService.titleOf(service);
    }
    for (    final ObjectSpecification objSpec : servicesInjector.getSpecificationLoader().allSpecifications()) {
      final Class<?> correspondingClass=objSpec.getCorrespondingClass();
      if (correspondingClass.isEnum()) {
        final Object[] enumConstants=correspondingClass.getEnumConstants();
        for (        Object enumConstant : enumConstants) {
          final String unused=titleService.titleOf(enumConstant);
        }
      }
    }
    final TranslationService translationService=servicesInjector.lookupServiceElseFail(TranslationService.class);
    final String context=IsisSessionFactoryBuilder.class.getName();
    final MessageRegistry messageRegistry=new MessageRegistry();
    final List<String> messages=messageRegistry.listMessages();
    for (    String message : messages) {
      translationService.translate(context,message);
    }
  }
  finally {
    closeSession();
  }
}
