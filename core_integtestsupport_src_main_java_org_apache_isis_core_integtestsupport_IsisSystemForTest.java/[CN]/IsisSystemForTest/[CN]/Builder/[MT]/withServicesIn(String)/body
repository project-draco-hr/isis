{
  if (globSpecIfAny != null) {
    throw new IllegalStateException("A globSpec has already been provided");
  }
  if (packagePrefixes.length == 0) {
    throw new IllegalArgumentException("Specify packagePrefixes to search for @DomainService-annotated services");
  }
  configuration.put(ServicesInstallerFromAnnotation.PACKAGE_PREFIX_KEY,Joiner.on(",").join(packagePrefixes));
  final ServicesInstaller installer=new ServicesInstallerFromConfigurationAndAnnotation();
  installer.setConfiguration(configuration);
  final List<Object> serviceList=installer.getServices();
  this.services.addAll(serviceList);
  installer.init();
  return this;
}
