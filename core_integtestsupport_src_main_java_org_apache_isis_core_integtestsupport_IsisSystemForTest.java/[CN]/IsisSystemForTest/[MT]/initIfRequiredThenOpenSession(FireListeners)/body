{
  final MetaModelInvalidException mmie=IsisContext.getMetaModelInvalidExceptionIfAny();
  if (mmie != null) {
    final Set<String> validationErrors=mmie.getValidationErrors();
    final String validationMsg=Joiner.on("\n").join(validationErrors);
    fail(validationMsg);
    return;
  }
  boolean firstTime=isisSessionFactory == null;
  if (fireListeners.shouldFire()) {
    fireInitAndPreOpenSession(firstTime);
  }
  if (firstTime) {
    IsisLoggingConfigurer isisLoggingConfigurer=new IsisLoggingConfigurer(getLevel());
    isisLoggingConfigurer.configureLogging(".",new String[]{});
    componentProvider=new IsisComponentProviderDefault(appManifestIfAny,configurationOverride);
    final IsisSessionFactoryBuilder isisSessionFactoryBuilder=new IsisSessionFactoryBuilder(componentProvider,DeploymentCategory.PRODUCTION);
    FixtureClock.initialize();
    isisSessionFactory=isisSessionFactoryBuilder.buildSessionFactory();
    closeSession();
    final MetaModelInvalidException ex=IsisContext.getMetaModelInvalidExceptionIfAny();
    if (ex != null) {
      IsisContext.testReset();
      final Set<String> validationErrors=ex.getValidationErrors();
      final StringBuilder buf=new StringBuilder();
      for (      String validationError : validationErrors) {
        buf.append(validationError).append("\n");
      }
      fail("Metamodel is invalid: \n" + buf.toString());
    }
  }
  final AuthenticationManager authenticationManager=isisSessionFactory.getAuthenticationManager();
  authenticationSession=authenticationManager.authenticate(authenticationRequestIfAny);
  openSession();
  if (fireListeners.shouldFire()) {
    firePostOpenSession(firstTime);
  }
}
