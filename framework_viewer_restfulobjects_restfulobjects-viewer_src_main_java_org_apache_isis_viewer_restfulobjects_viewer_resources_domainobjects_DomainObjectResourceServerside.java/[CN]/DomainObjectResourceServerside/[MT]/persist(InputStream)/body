{
  init(RepresentationType.DOMAIN_OBJECT);
  final String objectStr=DomainResourceHelper.asStringUtf8(object);
  final JsonRepresentation objectRepr=DomainResourceHelper.readAsMap(objectStr);
  if (!objectRepr.isMap()) {
    throw RestfulObjectsApplicationException.create(HttpStatusCode.BAD_REQUEST,"Body is not a map; got %s",objectRepr);
  }
  final LinkRepresentation describedByLink=objectRepr.getLink("links[rel=describedby]");
  if (!describedByLink.isLink()) {
    throw RestfulObjectsApplicationException.create(HttpStatusCode.BAD_REQUEST,"Could not determine type of domain object to persist (no links[rel=describedby] link); got %s",objectRepr);
  }
  final String domainTypeStr=UrlParserUtils.domainTypeFrom(describedByLink);
  if (domainTypeStr == null) {
    throw RestfulObjectsApplicationException.create(HttpStatusCode.BAD_REQUEST,"Could not determine type of domain object to persist (no href in links[rel=describedby]); got %s",describedByLink);
  }
  final ObjectSpecification domainTypeSpec=getSpecificationLoader().loadSpecification(domainTypeStr);
  if (domainTypeSpec == null) {
    throw RestfulObjectsApplicationException.create(HttpStatusCode.BAD_REQUEST,"Could not determine type of domain object to persist (no such class '%s')",domainTypeStr);
  }
  final ObjectAdapter objectAdapter=getResourceContext().getPersistenceSession().createTransientInstance(domainTypeSpec);
  final JsonRepresentation propertiesList=objectRepr.getArrayEnsured("members[memberType=property]");
  if (propertiesList == null) {
    throw RestfulObjectsApplicationException.create(HttpStatusCode.BAD_REQUEST,"Could not find properties list (no members[memberType=property]); got %s",objectRepr);
  }
  if (!DomainResourceHelper.copyOverProperties(getResourceContext(),objectAdapter,propertiesList)) {
    throw RestfulObjectsApplicationException.create(HttpStatusCode.BAD_REQUEST,objectRepr,"Illegal property value");
  }
  final Consent validity=objectAdapter.getSpecification().isValid(objectAdapter);
  if (validity.isVetoed()) {
    throw RestfulObjectsApplicationException.create(HttpStatusCode.BAD_REQUEST,objectRepr,validity.getReason());
  }
  getResourceContext().getPersistenceSession().makePersistent(objectAdapter);
  return new DomainResourceHelper(getResourceContext(),objectAdapter).objectRepresentation();
}
