{
  final List<Facet> facets=Lists.newArrayList();
  final FacetedMethod facetHolder=processMethodContext.getFacetHolder();
  facets.add(new NamedFacetNone(facetHolder));
  facets.add(new DescribedAsFacetNone(facetHolder));
  facets.add(new HelpFacetNone(facetHolder));
  final FeatureType featureType=facetHolder.getFeatureType();
  if (featureType.isProperty()) {
    facets.add(new MaxLengthFacetUnlimited(facetHolder));
    facets.add(new MultiLineFacetNone(true,facetHolder));
    facets.add(newLabelAtFacetIfAny(facetHolder,"properties","property","props","prop"));
  }
  if (featureType.isAction()) {
    facets.add(new ActionDefaultsFacetNone(facetHolder));
    facets.add(new ActionChoicesFacetNone(facetHolder));
  }
  if (featureType.isCollection()) {
    facets.add(new PagedFacetFromConfiguration(getPagedConfigSetting("parented",PAGE_SIZE_PARENTED_DEFAULT),facetHolder));
  }
  FacetUtil.addFacets(facets);
}
