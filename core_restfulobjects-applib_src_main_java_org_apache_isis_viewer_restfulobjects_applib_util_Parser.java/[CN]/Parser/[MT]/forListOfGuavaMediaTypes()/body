{
  return new Parser<List<com.google.common.net.MediaType>>(){
    @Override public List<com.google.common.net.MediaType> valueOf(    final String str){
      if (str == null) {
        return Collections.emptyList();
      }
      final List<String> strings=Lists.newArrayList(Splitter.on(",").split(str));
      return Lists.transform(strings,new Function<String,com.google.common.net.MediaType>(){
        @Override public com.google.common.net.MediaType apply(        final String input){
          return com.google.common.net.MediaType.parse(input);
        }
      }
);
    }
    @Override public String asString(    final List<com.google.common.net.MediaType> listOfMediaTypes){
      final List<String> strings=Lists.transform(listOfMediaTypes,new Function<com.google.common.net.MediaType,String>(){
        @Override public String apply(        final com.google.common.net.MediaType input){
          return input.toString();
        }
      }
);
      return Joiner.on(",").join(strings);
    }
  }
;
}
