{
  if (className == null) {
    throw new NullPointerException("No class name specified");
  }
  NakedObjectSpecification nos=(NakedObjectSpecification)classes.get(className);
  if (nos != null) {
    return nos;
  }
 else {
    Reflector reflector;
    try {
      Class cls=Class.forName(className);
      if (InternalNakedObject.class.isAssignableFrom(cls) || cls.getName().startsWith("java.") || Exception.class.isAssignableFrom(cls)) {
        reflector=new InternalReflector(className);
      }
 else {
        reflector=reflectorFactory.createReflector(className);
      }
      LOG.info("initialising specification for " + className);
      NakedObjectSpecificationImpl spec=new NakedObjectSpecificationImpl();
      classes.put(className,spec);
      spec.reflect(className,reflector);
      return spec;
    }
 catch (    ClassNotFoundException e) {
      LOG.debug("non class " + className);
      NakedObjectSpecificationImpl spec=new NakedObjectSpecificationImpl();
      spec.nonReflect(className);
      classes.put(className,spec);
      return spec;
    }
  }
}
