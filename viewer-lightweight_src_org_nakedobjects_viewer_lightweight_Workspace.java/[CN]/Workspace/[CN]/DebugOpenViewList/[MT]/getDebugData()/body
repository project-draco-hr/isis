{
  StringBuffer info=new StringBuffer();
  info.append("WORKSPACE\n");
  info.append("Bounds:    ");
  Bounds bounds=getBounds();
  info.append(bounds.width + "x" + bounds.height+ "+"+ bounds.x+ "+"+ bounds.y);
  info.append("\nReq'd :    ");
  Size required=getRequiredSize();
  info.append(required.width + "x" + required.height);
  info.append("\nPadding:   ");
  Padding insets=getPadding();
  info.append("top/bottom " + insets.top + "/"+ insets.bottom+ ", left/right "+ insets.left+ "/"+ insets.right);
  info.append("\nBorder:    ");
  info.append((border == null) ? "none" : border.debug(Workspace.this));
  info.append("\n\nBACKGROUND\n");
  info.append("----------\n");
  info.append(background == null ? "none" : background.toString());
  info.append("\n");
  info.append("\nDESKTOP Layer\n");
  info.append("-------------\n");
  for (int i=0; i < icons.size(); i++) {
    View vw=(View)icons.elementAt(i);
    info.append(vw.toString());
    info.append("\n");
  }
  info.append("\nOPEN VIEW Layer\n");
  info.append("---------------\n");
  for (int i=0; i < openViews.size(); i++) {
    ObjectView vw=(ObjectView)openViews.elementAt(i);
    info.append(vw.toString());
    info.append("\n");
  }
  info.append("\nOVERLAY VIEW Layer\n");
  info.append("------------------\n");
  info.append(overlayView);
  info.append("\n");
  return info.toString();
}
