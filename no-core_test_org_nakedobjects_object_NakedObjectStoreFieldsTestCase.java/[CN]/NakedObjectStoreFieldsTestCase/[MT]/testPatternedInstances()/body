{
  restartObjectStore();
  try {
    cleanPersonInstances();
    cleanRoleInstances();
    Role[] obj=new Role[4];
    Person v=null;
    for (int i=0; i < obj.length; i++) {
      obj[i]=new Role();
      obj[i].setOid(nextOid());
      obj[i].getName().setValue(((i % 2) == 0) ? "even" : "odd");
      v=new Person();
      v.setOid(nextOid());
      obj[i].setPerson(v);
      objectStore.createObject(obj[i]);
    }
    Role examplePattern=new Role();
    examplePattern.makeFinder();
    Vector instances=objectStore.getInstances(examplePattern,false);
    assertEquals("instances size",4,instances.size());
    examplePattern.getName().setValue("neither");
    instances=objectStore.getInstances(examplePattern,false);
    assertEquals("instances size",0,instances.size());
    examplePattern.getName().setValue("even");
    instances=objectStore.getInstances(examplePattern,false);
    assertEquals("instances size",2,instances.size());
    examplePattern.getName().setValue("odd");
    instances=objectStore.getInstances(examplePattern,false);
    assertEquals("instances size",2,instances.size());
    examplePattern.getName().clear();
    examplePattern.setPerson(v);
    instances=objectStore.getInstances(examplePattern,false);
    assertEquals("instances size",1,instances.size());
  }
 catch (  UnsupportedFindException e) {
  }
}
