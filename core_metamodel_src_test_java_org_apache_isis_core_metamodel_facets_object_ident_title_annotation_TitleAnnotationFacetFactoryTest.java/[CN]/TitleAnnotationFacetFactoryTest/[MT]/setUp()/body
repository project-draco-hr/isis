{
  context.allowing(mockSpecificationLoaderSpi);
  facetFactory=new TitleAnnotationFacetFactory();
  facetFactory.setAdapterManager(mockAdapterManager);
  facetFactory.setSpecificationLoader(mockSpecificationLoaderSpi);
  facetFactory.setServicesInjector(mockServicesInjector);
  context.checking(new Expectations(){
{
      allowing(mockServicesInjector).lookupService(AuthenticationSessionProvider.class);
      will(returnValue(mockAuthenticationSessionProvider));
      allowing(mockServicesInjector).lookupService(DeploymentCategoryProvider.class);
      will(returnValue(mockDeploymentCategoryProvider));
      allowing(mockLocalizationProvider).getLocalization();
      will(returnValue(new LocalizationDefault()));
    }
  }
);
  context.checking(new Expectations(){
{
      allowing(mockDeploymentCategoryProvider).getDeploymentCategory();
      will(returnValue(DeploymentCategory.PRODUCTION));
      allowing(mockAuthenticationSessionProvider).getAuthenticationSession();
      will(returnValue(mockAuthenticationSession));
    }
  }
);
}
