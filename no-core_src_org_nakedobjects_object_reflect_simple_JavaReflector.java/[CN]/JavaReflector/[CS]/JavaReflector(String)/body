{
  Class cls;
  cls=Class.forName(name);
  if (!Naked.class.isAssignableFrom(cls)) {
    throw new NakedClassException("A naked object must be based on the " + "NakedObject interface, this is not the case with " + cls);
  }
  if (!Modifier.isPublic(cls.getModifiers())) {
    throw new NakedClassException("A NakedObject class must be marked as public.  Error in " + cls);
  }
  this.cls=cls;
  if (!cls.isInterface()) {
    try {
      cls.getConstructor(new Class[0]);
    }
 catch (    NoSuchMethodException ex) {
      throw new NakedObjectRuntimeException("Class " + name + " must have a default constructor");
    }
  }
  methods=cls.getMethods();
}
