{
  final LinkFollower linkFollower=getLinkFollower().follow("members");
  for (  final ObjectAction action : actions) {
    final Consent visibility=action.isVisible(getAuthenticationSession(),objectAdapter,resourceContext.getWhere());
    if (!visibility.isAllowed()) {
      continue;
    }
    if (action.getType().isSet()) {
      final ObjectActionSet objectActionSet=(ObjectActionSet)action;
      final List<ObjectAction> subactions=objectActionSet.getActions();
      addActions(objectAdapter,subactions,members);
    }
 else {
      final RendererFactory factory=getRendererFactoryRegistry().find(RepresentationType.OBJECT_ACTION);
      final ObjectActionReprRenderer renderer=(ObjectActionReprRenderer)factory.newRenderer(getResourceContext(),linkFollower,JsonRepresentation.newMap());
      renderer.with(new ObjectAndAction(objectAdapter,action)).usingLinkTo(linkToBuilder);
      members.arrayAdd(renderer.render());
    }
  }
}
