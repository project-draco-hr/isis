{
  final Method getMethod=processMethodContext.getMethod();
  final String capitalizedName=NameUtils.javaBaseName(getMethod.getName());
  Class<?> cls=processMethodContext.getCls();
  final Class<?> returnType=getMethod.getReturnType();
  final Class<?>[] paramTypes=new Class[]{returnType};
  Method setMethod=MethodFinderUtils.findMethod(cls,MethodScope.OBJECT,MethodPrefixConstants.SET_PREFIX + capitalizedName,void.class,paramTypes);
  processMethodContext.removeMethod(setMethod);
  final FacetHolder property=processMethodContext.getFacetHolder();
  if (setMethod != null) {
    FacetUtil.addFacet(new PropertySetterFacetViaSetterMethod(setMethod,property));
    FacetUtil.addFacet(new PropertyInitializationFacetViaSetterMethod(setMethod,property));
  }
 else {
    FacetUtil.addFacet(new DerivedFacetInferred(property));
    FacetUtil.addFacet(new DisabledFacetAlways(property));
  }
  return setMethod;
}
