{
  ButtonAction[] actions=new ButtonAction[]{new ButtonAction(){
    public Consent disabled(    final View view){
      return Allow.DEFAULT;
    }
    public void execute(    final Workspace workspace,    final View view,    final Location at){
      view.getFeedbackManager().addMessage("Button 1 pressed");
    }
    public String getDescription(    final View view){
      return "Button that can be pressed";
    }
    public String getName(    final View view){
      return "Action";
    }
    public ObjectActionType getType(){
      return USER;
    }
    public boolean isDefault(){
      return true;
    }
    public String getHelp(    final View view){
      return null;
    }
  }
,new ButtonAction(){
    public Consent disabled(    final View view){
      return Veto.DEFAULT;
    }
    public void execute(    final Workspace workspace,    final View view,    final Location at){
      view.getFeedbackManager().addMessage("Button 2 pressed");
    }
    public String getDescription(    final View view){
      return "Button that can't be pressed";
    }
    public String getName(    final View view){
      return "Disabled";
    }
    public ObjectActionType getType(){
      return USER;
    }
    public boolean isDefault(){
      return false;
    }
    public String getHelp(    final View view){
      return null;
    }
  }
};
  ObjectAdapter object=createExampleObjectForView();
  Content content=new RootObject(object);
  ViewSpecification specification=new ExampleViewSpecification();
  ViewAxis axis=null;
  View view=new ButtonBorder(actions,new TestObjectView(content,specification,axis,200,80,"VIEW in border"));
  view.setLocation(new Location(100,100));
  view.setSize(view.getRequiredSize(new Size()));
  workspace.addView(view);
}
