{
  final int versionSequence=1;
  final SerialNumberVersion version=createVersion(versionSequence);
  final StringBuffer sql=new StringBuffer();
  sql.append("insert into " + table + " (");
  idMapping.appendColumnNames(sql);
  sql.append(", ");
  final String columnList=columnList(fieldMappingByField);
  if (columnList.length() > 0) {
    sql.append(columnList);
    sql.append(", ");
  }
  titleMapping.appendColumnNames(sql);
  sql.append(", ");
  sql.append(versionMapping.insertColumns());
  sql.append(") values (");
  idMapping.appendInsertValues(connector,sql,object);
  sql.append(", ");
  sql.append(values(connector,object));
  titleMapping.appendInsertValues(connector,sql,object);
  sql.append(", ");
  sql.append(versionMapping.insertValues(connector,version));
  sql.append(") ");
  connector.insert(sql.toString());
  object.setOptimisticLock(version);
  for (  final CollectionMapper collectionMapper : collectionMappers) {
    collectionMapper.saveInternalCollection(connector,object);
  }
}
