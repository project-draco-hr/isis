{
  for (  final ObjectAssociation assoc : associations) {
    if (mode.checkVisibility()) {
      final Consent visibility=assoc.isVisible(objectAdapter,getInteractionInitiatedBy(),rendererContext.getWhere());
      if (!visibility.isAllowed()) {
        continue;
      }
    }
    if (!(assoc instanceof OneToManyAssociation)) {
      continue;
    }
    final OneToManyAssociation collection=(OneToManyAssociation)assoc;
    final LinkFollowSpecs linkFollowerForColl=getLinkFollowSpecs().follow("members[" + collection.getId() + "]");
    final ObjectCollectionReprRenderer renderer=new ObjectCollectionReprRenderer(getRendererContext(),linkFollowerForColl,collection.getId(),JsonRepresentation.newMap());
    renderer.with(new ObjectAndCollection(objectAdapter,collection)).usingLinkTo(linkToBuilder);
    if (mode.isEventSerialization()) {
      renderer.asEventSerialization();
    }
    members.mapPut(assoc.getId(),renderer.render());
  }
}
