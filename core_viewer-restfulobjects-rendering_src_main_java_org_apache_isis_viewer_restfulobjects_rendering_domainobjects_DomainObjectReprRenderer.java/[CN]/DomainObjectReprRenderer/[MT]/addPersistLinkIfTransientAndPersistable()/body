{
  if (objectAdapter.representsPersistent()) {
    return;
  }
  if (objectAdapter.getSpecification().containsDoOpFacet(NotPersistableFacet.class)) {
    return;
  }
  final DomainObjectReprRenderer renderer=new DomainObjectReprRenderer(getRendererContext(),null,JsonRepresentation.newMap());
  final JsonRepresentation domainObjectRepr=renderer.with(objectAdapter).asPersistLinkArguments().render();
  final String domainType=objectAdapter.getSpecification().getSpecId().asString();
  final LinkBuilder persistLinkBuilder=LinkBuilder.newBuilder(getRendererContext(),Rel.PERSIST.getName(),RepresentationType.DOMAIN_OBJECT,"objects/%s",domainType).withHttpMethod(RestfulHttpMethod.POST).withArguments(domainObjectRepr);
  getLinks().arrayAdd(persistLinkBuilder.build());
}
