{
  for (  final ObjectAssociation assoc : associations) {
    if (mode.checkVisibility()) {
      final Consent visibility=assoc.isVisible(objectAdapter,getInteractionInitiatedBy(),rendererContext.getWhere());
      if (!visibility.isAllowed()) {
        continue;
      }
    }
    if (!(assoc instanceof OneToOneAssociation)) {
      continue;
    }
    final OneToOneAssociation property=(OneToOneAssociation)assoc;
    final LinkFollowSpecs linkFollowerForProp=getLinkFollowSpecs().follow("members[" + property.getId() + "]");
    final ObjectPropertyReprRenderer renderer=new ObjectPropertyReprRenderer(getRendererContext(),linkFollowerForProp,property.getId(),JsonRepresentation.newMap());
    renderer.with(new ObjectAndProperty(objectAdapter,property)).usingLinkTo(linkToBuilder);
    if (mode.isArgs()) {
      renderer.asArguments();
    }
    if (mode.isEventSerialization()) {
      renderer.asEventSerialization();
    }
    final JsonRepresentation propertyValueRepresentation=renderer.render();
    final JsonRepresentation propertyRepr=rendererContext.objectPropertyValuesOnly() ? propertyValueRepresentation.getRepresentation("value") : propertyValueRepresentation;
    members.mapPut(assoc.getId(),propertyRepr);
  }
}
