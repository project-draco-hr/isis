{
  mockHolder=mockery.mock(IdentifiedHolder.class);
  specificationAlwaysSatisfied=new SpecificationAlwaysSatisfied();
  specificationNeverSatisfied=new SpecificationNeverSatisfied();
  facetForSpecificationAlwaysSatisfied=new MustSatisfySpecificationFromMustSatisfyAnnotationOnTypeFacet(Utils.listOf(specificationAlwaysSatisfied),mockHolder);
  facetForSpecificationNeverSatisfied=new MustSatisfySpecificationFromMustSatisfyAnnotationOnTypeFacet(Utils.listOf(specificationNeverSatisfied),mockHolder);
  mockContext=mockery.mock(PropertyModifyContext.class);
  mockProposedObjectAdapter=mockery.mock(ObjectAdapter.class,"proposed");
  mockProposedObject=mockery.mock(Object.class,"proposedObject");
  mockery.checking(new Expectations(){
{
      one(mockContext).getProposed();
      will(returnValue(mockProposedObjectAdapter));
      one(mockProposedObjectAdapter).getObject();
      will(returnValue(mockProposedObject));
    }
  }
);
}
