{
  final Properties properties=new Properties();
  properties.setProperty(SqlAuthenticator.USER_TABLE,USERS);
  properties.setProperty(SqlAuthenticator.USER_TABLE_NAME_FIELD,USERNAME_FIELD);
  properties.setProperty(SqlAuthenticator.USER_TABLE_PASSWORD_FIELD,PASSWORD_FIELD);
  properties.put(SqlAuthenticator.PROPERTY_BASE + ".jdbc.driver","org.hsqldb.jdbcDriver");
  properties.put(SqlAuthenticator.PROPERTY_BASE + ".jdbc.connection","jdbc:hsqldb:file:hsql-db/authenticator-tests");
  properties.put(SqlAuthenticator.PROPERTY_BASE + ".jdbc.user","sa");
  properties.put(SqlAuthenticator.PROPERTY_BASE + ".jdbc.password","");
  configuration=new IsisConfigurationDefault();
  configuration.add(properties);
  IsisContext.setConfiguration(configuration);
  String sql;
  saipSqlAuthenticator=new SqlAuthenticator(configuration);
  saipSqlAuthenticator.init();
  if (saipSqlAuthenticator.isSetup()) {
    sql="DROP TABLE " + USERS;
    saipSqlAuthenticator.update(sql);
  }
  sql="CREATE TABLE " + USERS + " ("+ USERNAME_FIELD+ " VARCHAR(32), "+ PASSWORD_FIELD+ " VARCHAR(32)) ";
  saipSqlAuthenticator.update(sql);
  sql="INSERT INTO " + USERS + " VALUES ('user1','password1')";
  saipSqlAuthenticator.update(sql);
}
