{
  final Class<?>[] paramTypes=new Class[]{};
  Class<?> type=processMethodContext.getCls();
  final Method method=processMethodContext.getMethod();
  final String capitalizedName=NameUtils.javaBaseNameStripAccessorPrefixIfRequired(method.getName());
  final Method protectMethod=MethodFinderUtils.findMethodWithOrWithoutParameters(type,MethodScope.CLASS,MethodPrefixConstants.PROTECT_PREFIX + capitalizedName,boolean.class,paramTypes);
  if (protectMethod == null) {
    return;
  }
  processMethodContext.removeMethod(protectMethod);
  Boolean protectMethodReturnValue=invokeProtectMethod(protectMethod);
  if (!protectMethodReturnValue.booleanValue()) {
    return;
  }
  final FacetHolder facetedMethod=processMethodContext.getFacetHolder();
  FacetUtil.addFacet(new DisabledFacetAlways(facetedMethod));
}
