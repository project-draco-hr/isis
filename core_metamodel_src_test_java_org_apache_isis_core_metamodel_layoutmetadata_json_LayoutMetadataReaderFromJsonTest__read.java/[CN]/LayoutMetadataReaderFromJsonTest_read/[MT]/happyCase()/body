{
  final Properties properties=reader.asProperties(ExampleDomainObject.class);
  assertThat(properties,is(not(nullValue())));
  final Properties expectedProperties=ClassExtensions.resourceProperties(ExampleDomainObject.class,".layout.properties");
  final Set<Object> expectedSet=expectedProperties.keySet();
  final Set<Object> actualSet=properties.keySet();
  final SortedSet<Object> keys=new TreeSet<>();
  keys.addAll(expectedSet);
  keys.addAll(actualSet);
  final StringBuilder buf=new StringBuilder("\n");
  boolean fail=false;
  for (  Object keyObj : keys) {
    final String key=(String)keyObj;
    final String expectedValue=expectedProperties.getProperty(key);
    final String actualValue=properties.getProperty(key);
    final boolean expectedKey=expectedSet.contains(keyObj);
    final boolean matches=Objects.equal(trimmed(expectedValue),trimmed(actualValue)) || !expectedKey;
    final String result=matches ? (expectedKey ? "OK" : "N/A") : "FAIL";
    if (!result.equals("OK")) {
      buf.append(String.format("%1$-40s %2$-5s %3$-40s %4$-40s\n",key,result,expectedValue,actualValue));
    }
    fail=fail || !matches;
  }
  if (fail) {
    Assert.fail(buf.toString());
  }
}
