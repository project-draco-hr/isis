{
  File f=new File("xat.properties");
  if (f.exists()) {
    ConfigurationFactory.setConfiguration(new Configuration(f.getAbsolutePath(),true));
  }
 else {
    ConfigurationFactory.setConfiguration(new Configuration());
  }
  Properties logProperties=ConfigurationFactory.getConfiguration().getProperties("log4j");
  if (logProperties.size() == 0) {
    LogManager.getRootLogger().setLevel(Level.OFF);
  }
 else {
    PropertyConfigurator.configure(logProperties);
  }
  Logger.getLogger(AcceptanceTestCase.class).debug("XAT Logging enabled - new test: " + getName());
  fixtureBuilder=createFixtureBuilder();
  if (testObjectFactory == null) {
    testObjectFactory=(TestObjectFactory)ComponentLoader.loadComponent(TEST_OBJECT_FACTORY,NonDocumentingTestObjectFactory.class,TestObjectFactory.class);
  }
  documentor=testObjectFactory.getDocumentor();
  documentor.start();
  String className=getClass().getName();
  String methodName=getName().substring(4);
  testObjectFactory.testStarting(className,methodName);
  setupFramework();
  ClientSession.setSession(new Session());
  Session session=ClientSession.getSession();
  PojoAdapter.setPojoAdapterHash(new PojoAdapterHashImpl());
  setUpFixtures();
  try {
    fixtureBuilder.installFixtures();
    String[] cls=fixtureBuilder.getClasses();
    for (int i=0; i < cls.length; i++) {
      NakedObjectSpecification nc=NakedObjectSpecificationLoader.getInstance().loadSpecification(cls[i]);
      NakedClass spec=new NakedClass(cls[i]);
      TestClass view=testObjectFactory.createTestClass(session,spec);
      classes.put(nc.getFullName().toLowerCase(),view);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw e;
  }
}
