{
  LogManager.getLoggerRepository().setThreshold(Level.ERROR);
  objectManager=createObjectManager();
  try {
    NakedObjectContext context=new NakedObjectContext(objectManager);
    Session session=ClientSession.getSession();
    explorationSetUp=new ExplorationSetUp(context);
    setUpFixtures();
    if (testObjectFactory == null) {
      testObjectFactory=new HtmlTestObjectFactory();
    }
    documentor=testObjectFactory.getDocumentor(getName().substring(4));
    explorationSetUp.installFixtures();
    String[] cls=explorationSetUp.getClasses();
    for (int i=0; i < cls.length; i++) {
      NakedObjectSpecification nc=NakedObjectSpecificationLoader.getInstance().loadSpecification(cls[i]);
      NakedClass spec=new SimpleNakedClass(cls[i]);
      spec.setContext(context);
      spec.setNakedClass(nc);
      TestClass view=testObjectFactory.createTestClass(session,spec);
      classes.put(nc.getFullName().toLowerCase(),view);
    }
    if (session.getUser() == null) {
      User user=new User("exploration user");
      user.setContext(context);
      user.getRoles().add(new Role("explorer"));
      session.setUser(user);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    objectManager.shutdown();
    throw e;
  }
}
