{
  NakedObject[] instances=new NakedObject[45];
  int i=0;
  String query="select movie.*, person.* from movie left join person on movie.directorFK = person.pkid";
  Statement s=connection.createStatement();
  ResultSet rs=s.executeQuery(query);
  while (rs.next() && i < instances.length) {
    Oid oid=new SqlOid(rs.getInt(1));
    Movie movie;
    if (NakedObjects.getObjectLoader().isIdentityKnown(oid)) {
      instances[i++]=NakedObjects.getObjectLoader().getAdapterFor(oid);
      movie=(Movie)NakedObjects.getObjectLoader().getAdapterFor(oid).getObject();
    }
 else {
      movie=new Movie();
      movie.setName(rs.getString(2));
      instances[i++]=NakedObjects.getObjectLoader().recreateAdapterForPersistent(oid,movie);
    }
    int directorId=rs.getInt(3);
    if (directorId != 0) {
      Oid directorOid=new SqlOid(directorId);
      Person director;
      if (NakedObjects.getObjectLoader().isIdentityKnown(directorOid)) {
        director=(Person)NakedObjects.getObjectLoader().getAdapterFor(directorOid);
      }
 else {
        director=new Person();
        NakedObjects.getObjectLoader().recreateAdapterForPersistent(directorOid,director);
      }
      director.setName(rs.getString(5));
      movie.setDirector(director);
    }
  }
  rs.close();
  s.close();
  NakedObject[] results=new NakedObject[i];
  System.arraycopy(instances,0,results,0,i);
  return results;
}
