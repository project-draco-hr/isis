{
  NakedObject[] instances=new NakedObject[45];
  int i=0;
  String query="select movie.*, person.* from movie left join person on movie.directorFK = person.pkid";
  Statement s=connection.createStatement();
  ResultSet rs=s.executeQuery(query);
  while (rs.next() && i < instances.length) {
    Oid oid=new SqlOid(rs.getInt(1));
    Movie movie;
    NakedObject movieAdapter;
    if (NakedObjects.getObjectLoader().isIdentityKnown(oid)) {
      movieAdapter=NakedObjects.getObjectLoader().getAdapterFor(oid);
    }
 else {
      movieAdapter=NakedObjects.getObjectLoader().recreateAdapterForPersistent(oid,NakedObjects.getSpecificationLoader().loadSpecification(Movie.class));
    }
    NakedObjects.getObjectLoader().start(movieAdapter,ResolveState.RESOLVING);
    movie=(Movie)movieAdapter.getObject();
    movie.setName(rs.getString(2));
    int directorId=rs.getInt(3);
    if (directorId != 0) {
      Oid directorOid=new SqlOid(directorId);
      Person director;
      NakedObject directorAdapter;
      if (NakedObjects.getObjectLoader().isIdentityKnown(directorOid)) {
        directorAdapter=NakedObjects.getObjectLoader().getAdapterFor(directorOid);
      }
 else {
        directorAdapter=NakedObjects.getObjectLoader().recreateAdapterForPersistent(directorOid,NakedObjects.getSpecificationLoader().loadSpecification(Person.class));
      }
      NakedObjects.getObjectLoader().start(directorAdapter,ResolveState.RESOLVING);
      director=(Person)directorAdapter.getObject();
      director.setName(rs.getString(5));
      NakedObjects.getObjectLoader().end(directorAdapter);
      movie.setDirector(director);
    }
    NakedObjects.getObjectLoader().end(movieAdapter);
    instances[i++]=movieAdapter;
  }
  rs.close();
  s.close();
  NakedObject[] results=new NakedObject[i];
  System.arraycopy(instances,0,results,0,i);
  return results;
}
