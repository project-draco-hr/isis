{
  final int span=hint.from(columnSpans);
  final EntityModel entityModel=(EntityModel)getModel();
  final ObjectAdapter adapter=entityModel.getObject();
  final ObjectSpecification objSpec=adapter.getSpecification();
  final List<ObjectAssociation> associations=visibleProperties(adapter,objSpec,Where.OBJECT_FORMS);
  final RepeatingView memberGroupRv=new RepeatingView(ID_MEMBER_GROUP);
  markupContainer.add(memberGroupRv);
  final Map<String,List<ObjectAssociation>> associationsByGroup=ObjectAssociation.Util.groupByMemberOrderName(associations,groupLayoutNames);
  final List<String> groupNames=ObjectSpecifications.orderByMemberGroups(objSpec,associationsByGroup.keySet(),hint);
  for (  String groupName : groupNames) {
    final List<ObjectAssociation> associationsInGroup=associationsByGroup.get(groupName);
    if (associationsInGroup == null) {
      continue;
    }
    final WebMarkupContainer memberGroupRvContainer=new WebMarkupContainer(memberGroupRv.newChildId());
    memberGroupRv.add(memberGroupRvContainer);
    memberGroupRvContainer.add(new Label(ID_MEMBER_GROUP_NAME,groupName));
    final List<LinkAndLabel> memberGroupActions=Lists.newArrayList();
    final RepeatingView propertyRv=new RepeatingView(ID_PROPERTIES);
    memberGroupRvContainer.add(propertyRv);
    @SuppressWarnings("unused") Component component;
    for (    final ObjectAssociation association : associationsInGroup) {
      final WebMarkupContainer propertyRvContainer=new UiHintPathSignificantWebMarkupContainer(propertyRv.newChildId());
      propertyRv.add(propertyRvContainer);
      addPropertyToForm(entityModel,(OneToOneAssociation)association,propertyRvContainer,memberGroupActions);
    }
    final List<LinkAndLabel> actionsPanel=LinkAndLabel.positioned(memberGroupActions,ActionLayout.Position.PANEL);
    final List<LinkAndLabel> actionsPanelDropDown=LinkAndLabel.positioned(memberGroupActions,ActionLayout.Position.PANEL_DROPDOWN);
    AdditionalLinksPanel.addAdditionalLinks(memberGroupRvContainer,ID_ASSOCIATED_ACTION_LINKS_PANEL,actionsPanel,AdditionalLinksPanel.Style.INLINE_LIST);
    AdditionalLinksPanel.addAdditionalLinks(memberGroupRvContainer,ID_ASSOCIATED_ACTION_LINKS_PANEL_DROPDOWN,actionsPanelDropDown,AdditionalLinksPanel.Style.DROPDOWN);
  }
  addClassForSpan(markupContainer,span);
  return !groupNames.isEmpty();
}
