{
  final ObjectSpecification objectSpec=specificationLookup.loadSpecification(mixinClass);
  final MixinFacet mixinFacet=objectSpec.getFacet(MixinFacet.class);
  if (mixinFacet == null) {
    throw new NonRecoverableException("Class '" + mixinClass.getName() + " is not a mixin");
  }
  if (!mixinFacet.isMixinFor(mixedIn.getClass())) {
    throw new NonRecoverableException("Mixin class '" + mixinClass.getName() + " is not a mixin for supplied object '"+ mixedIn+ "'");
  }
  final Constructor<?>[] constructors=mixinClass.getConstructors();
  for (  Constructor<?> constructor : constructors) {
    if (constructor.getParameterTypes().length == 1 && constructor.getParameterTypes()[0].isAssignableFrom(mixedIn.getClass())) {
      final Object mixin;
      try {
        mixin=constructor.newInstance(mixedIn);
        return (T)serviceRegistry.injectServicesInto(mixin);
      }
 catch (      InstantiationException|IllegalAccessException|InvocationTargetException e) {
        throw new NonRecoverableException(e);
      }
    }
  }
  throw new NonRecoverableException(String.format("Failed to locate constructor in %s to instantiate using %s",mixinClass.getName(),mixedIn));
}
