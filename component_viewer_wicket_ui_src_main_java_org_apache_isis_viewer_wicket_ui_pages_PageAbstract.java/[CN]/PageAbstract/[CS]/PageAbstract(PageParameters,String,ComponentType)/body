{
  try {
    getSession().bind();
    setTitle(title);
    themeDiv=new WebMarkupContainer(ID_THEME);
    add(themeDiv);
    if (applicationName != null) {
      themeDiv.add(new CssClassAppender(asCssStyle(applicationName)));
    }
    addApplicationActions(themeDiv);
    Navbar navbar=new Navbar("navbar");
    themeDiv.add(navbar);
    navbar.fluid();
    navbar.setBrandName(Model.of(applicationName));
    this.childComponentIds=Collections.unmodifiableList(Arrays.asList(childComponentIds));
    this.pageParameters=pageParameters;
    addUserName(navbar);
    addLogoutLink(navbar);
    addAboutLink(navbar);
    addBreadcrumbs();
    addThemePicker();
    add(new HeaderResponseContainer("footerJS","footerJS"));
    BootstrapBaseBehavior.addTo(this);
  }
 catch (  RuntimeException ex) {
    LOG.error("Failed to construct page, going back to sign in page",ex);
    final List<ExceptionRecognizer> exceptionRecognizers=getServicesInjector().lookupServices(ExceptionRecognizer.class);
    final String recognizedMessageIfAny=new ExceptionRecognizerComposite(exceptionRecognizers).recognize(ex);
    final ExceptionModel exceptionModel=ExceptionModel.create(recognizedMessageIfAny,ex);
    getSession().invalidate();
    getSession().clear();
    EXCEPTION.set(exceptionModel);
    throw new RestartResponseAtInterceptPageException(getSignInPage());
  }
}
