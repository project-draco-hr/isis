{
  final ObjectsDto objectsDto=new ObjectsDto();
  final OidsDto createdOids=new OidsDto();
  final OidsDto updatedOids=new OidsDto();
  final OidsDto deletedOids=new OidsDto();
  for (  final Map.Entry<ObjectAdapter,PublishedObject.ChangeKind> adapterAndChange : changeKindByEnlistedAdapter.entrySet()) {
    final ObjectAdapter enlistedAdapter=adapterAndChange.getKey();
    final PublishedObjectFacet publishedObjectFacet=enlistedAdapter.getSpecification().getFacet(PublishedObjectFacet.class);
    if (publishedObjectFacet == null) {
      continue;
    }
    final RootOid rootOid=(RootOid)enlistedAdapter.getOid();
    final OidDto oidDto=rootOid.asOidDto();
    final PublishedObject.ChangeKind changeKind=adapterAndChange.getValue();
switch (changeKind) {
case CREATE:
      createdOids.getOid().add(oidDto);
    break;
case UPDATE:
  updatedOids.getOid().add(oidDto);
break;
case DELETE:
deletedOids.getOid().add(oidDto);
break;
default :
throw new RuntimeException("ChangeKind '" + changeKind + "' not recognized");
}
}
objectsDto.setCreated(createdOids);
objectsDto.setUpdated(updatedOids);
objectsDto.setDeleted(deletedOids);
return objectsDto;
}
