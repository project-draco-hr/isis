{
  NakedObjectManager objectManager=NakedObjects.getObjectManager();
  try {
    objectManager.startTransaction();
    NakedObject transactionObject;
    Naked[] transactionParameters=new Naked[parameters == null ? 0 : parameters.length];
    if (object.isPersistent()) {
      transactionObject=objectManager.getObject(object.getOid(),object.getSpecification());
      for (int i=0; i < transactionParameters.length; i++) {
        Naked parameter=(Naked)parameters[i];
        Oid parameterOid=parameter == null ? null : parameter.getOid();
        transactionParameters[i]=parameterOid == null ? parameter : objectManager.getObject(parameterOid,parameter.getSpecification());
      }
    }
 else {
      transactionObject=object;
      transactionParameters=parameters == null ? new Naked[0] : parameters;
    }
    Naked result=super.execute(identifier,transactionObject,transactionParameters);
    objectManager.saveChanges();
    objectManager.endTransaction();
    return result;
  }
 catch (  ObjectNotFoundException e) {
    LOG.error("Non-existing target or parameter used in " + getName(),e);
    objectManager.abortTransaction();
    return null;
  }
catch (  RuntimeException e) {
    objectManager.abortTransaction();
    throw e;
  }
}
