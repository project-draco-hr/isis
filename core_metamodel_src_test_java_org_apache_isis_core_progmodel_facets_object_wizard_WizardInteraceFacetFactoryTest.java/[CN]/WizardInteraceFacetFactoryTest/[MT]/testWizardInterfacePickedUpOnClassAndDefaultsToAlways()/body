{
class CustomerWizard implements Wizard<CustomerWizard> {
    public Object clone(){
      return null;
    }
    @Override public CustomerWizard next(){
      return null;
    }
    @Override public String disableNext(){
      return null;
    }
    @Override public CustomerWizard previous(){
      return null;
    }
    @Override public String disablePrevious(){
      return null;
    }
    @Override public Object finish(){
      return null;
    }
    @Override public String disableFinish(){
      return null;
    }
  }
  facetFactory.process(new ProcessClassContext(CustomerWizard.class,methodRemover,facetedMethod));
  final Facet facet=facetedMethod.getFacet(WizardFacet.class);
  assertNotNull(facet);
  assertTrue(facet instanceof WizardFacetForInterface);
  assertNoMethodsRemoved();
}
