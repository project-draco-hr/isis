{
  final Class<?> type=processMethodContext.getCls();
  final Method method=processMethodContext.getMethod();
  final String capitalizedName=StringExtensions.asJavaBaseNameStripAccessorPrefixIfRequired(method.getName());
  final Method alwaysHideMethod=MethodFinderUtils.findMethod(type,MethodScope.CLASS,MethodPrefixConstants.ALWAYS_HIDE_PREFIX + capitalizedName,boolean.class,new Class[]{});
  if (alwaysHideMethod == null) {
    return;
  }
  processMethodContext.removeMethod(alwaysHideMethod);
  final Boolean alwaysHideMethodReturnValue=invokeAlwaysHideMethod(alwaysHideMethod);
  if (!alwaysHideMethodReturnValue.booleanValue()) {
    return;
  }
  final FacetHolder facetedMethod=processMethodContext.getFacetHolder();
  validator.addFacetFlagIfPresent(new HiddenFacetOnStaticMethod(facetedMethod));
}
