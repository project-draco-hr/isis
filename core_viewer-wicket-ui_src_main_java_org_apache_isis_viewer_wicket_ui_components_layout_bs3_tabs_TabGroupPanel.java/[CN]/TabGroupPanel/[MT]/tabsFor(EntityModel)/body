{
  final List<ITab> tabs=Lists.newArrayList();
  final BS3TabGroup tabGroup=(BS3TabGroup)entityModel.getLayoutMetadata();
  final List<BS3Tab> tablist=FluentIterable.from(tabGroup.getTabs()).filter(BS3Tab.Predicates.notEmpty()).toList();
  for (  final BS3Tab bs3Tab : tablist) {
    final RepeatingViewWithDynamicallyVisibleContent rv=TabPanel.newRows(entityModel,bs3Tab);
    String translateContext=entityModel.getTypeOfSpecification().getFullIdentifier();
    String bs3TabName=bs3Tab.getName();
    String tabName=getTranslationService().translate(translateContext,bs3TabName);
    tabs.add(new AbstractTab(Model.of(tabName)){
      private static final long serialVersionUID=1L;
      @Override public Panel getPanel(      String panelId){
        return new TabPanel(panelId,entityModel,bs3Tab,rv);
      }
      @Override public boolean isVisible(){
        return rv.isVisible();
      }
    }
);
  }
  return tabs;
}
