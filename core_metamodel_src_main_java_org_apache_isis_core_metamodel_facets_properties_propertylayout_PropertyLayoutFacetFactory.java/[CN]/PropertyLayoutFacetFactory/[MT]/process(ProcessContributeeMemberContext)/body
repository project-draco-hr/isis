{
  final FacetHolder holder=processMemberContext.getFacetHolder();
  Properties properties=processMemberContext.metadataProperties("propertyLayout");
  if (properties == null) {
    properties=processMemberContext.metadataProperties("layout");
  }
  CssClassFacet cssClassFacet=CssClassFacetOnPropertyFromLayoutProperties.create(properties,holder);
  FacetUtil.addFacet(cssClassFacet);
  DescribedAsFacet describedAsFacet=DescribedAsFacetOnPropertyFromLayoutProperties.create(properties,holder);
  FacetUtil.addFacet(describedAsFacet);
  HiddenFacet hiddenFacet=HiddenFacetOnPropertyFromLayoutProperties.create(properties,holder);
  FacetUtil.addFacet(hiddenFacet);
  LabelAtFacet labelAtFacet=LabelAtFacetOnPropertyFromLayoutProperties.create(properties,holder);
  FacetUtil.addFacet(labelAtFacet);
  MultiLineFacet multiLineFacet=MultiLineFacetOnPropertyFromLayoutProperties.create(properties,holder);
  FacetUtil.addFacet(multiLineFacet);
  NamedFacet namedFacet=NamedFacetOnPropertyFromLayoutProperties.create(properties,holder);
  FacetUtil.addFacet(namedFacet);
  RenderedAdjustedFacet renderedAdjustedFacet=RenderedAdjustedFacetOnPropertyFromLayoutProperties.create(properties,holder);
  FacetUtil.addFacet(renderedAdjustedFacet);
  TypicalLengthFacet typicalLengthFacet=TypicalLengthFacetOnPropertyFromLayoutProperties.create(properties,holder);
  FacetUtil.addFacet(typicalLengthFacet);
}
